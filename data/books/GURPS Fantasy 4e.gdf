Encoding=UTF-8
Version=3
//  The version information above MUST be the first line of the data file
Program=4.0.408
Description=2021 May 20. _
		This data file contains information taken from the GURPS Fantasy 4e sourcebook. _
		GURPS Fantasy is Copyright © 1990, 1995, 2004 by Steve Jackson Games _
		Incorporated. All rights reserved.
Requires="GURPS Basic Set 4th Ed.--Characters.gdf"

[AUTHOR]
*******************************************************************************************************\[START]
// 
//  GURPS® Character Assistant
//  Filename: GURPS Fantasy 4e.gdf
//  Created: July 10, 2005
//  Requires GCA v4 or later!
// 
//  This data file contains information taken from the GURPS Fantasy sourcebook.
//  GURPS Fantasy is Copyright © 1990, 1995, 2004 by Steve Jackson Games
//  Incorporated. All rights reserved.
// 
//  Information in this file includes:
// 	Advantages, Perks, Disadvantages, Skills, and Techniques
// 	Trait Modifiers
// 	Spells, Including Bonuses, Colleges, Prereqisites, and Spell Information
// 	Equipment
// 	Racial Templates
// 	Meta-Traits
// 	Character Templates
// 
// 	To be completed: Unmanifested Spirit Lenses
// 
*******************************************************************************************************************
// 
//  Eric B. Smith	- GURPS Data File Coordinator, Major Work
//  Martin Etherington - Character templates (which is *FAR* more work that it sounds ;-)
// 
//  If you find any errors or omissions in this file please contact the Data File Coordinator at:
//  ericbsmith42@gmail.com
// 
//  Or drop a message in the GCA4 forum at:
//  http://forums.sjgames.com
//  
*******************************************************************************************************************
// 
//  GURPS is a registered trademark of Steve Jackson Games Incorporated, used with GCA by permission of Steve Jackson
//  Games. All rights reserved.
// 
//  The GURPS game is Copyright © 1986-1989, 1991-1994 by Steve Jackson Games Incorporated. This product includes
//  copyrighted material from the GURPS game, which is used by permission of Steve Jackson Games Incorporated. All
//  rights reserved by Steve Jackson Games Incorporated.
// 
*******************************************************************************************************************

********************************************************************************************************\[STOP]
[ADVANTAGES]
*******************************************************************************************************\[START]
#MergeTags in "AD:Night Vision" with "mods(Night Vision)"

<Mundane Mental>
Allure, 5/10, gives(+1 To GR:Allure), page(B89, F132), upto(4), cat(Mundane, Mental, Talents),_
	conditional(+1 to ST:Reaction), description(Dancing, Erotic Art, Makeup, Sex Appeal, Singing)
Bard, 5/10, gives(+1 To GR:Bard), page(B89, F132), upto(4), cat(Mundane, Mental, Talents),_
	conditional(+1 to ST:Reaction), description(Heraldry, Literature, Musical Influence, Poetry, Public Speaking, Singing)
Devotion, 5/10, gives(+1 To GR:Devotion), page(B89, F132), upto(4), cat(Mundane, Mental, Talents),_
	conditional(+1 to ST:Reaction), description(Autohypnosis, Exorcism, Meditation, Religious Ritual)
Goodwife, 5/10, gives(+1 To GR:Goodwife), page(B89, F132), upto(4), cat(Mundane, Mental, Talents),_
	conditional(+1 to ST:Reaction), description(Cooking, Diagnosis, Gardening, Housekeeping, Sewing)
Mariner, 10/20, gives(+1 To GR:Mariner), page(B89, F132), upto(4), cat(Mundane, Mental, Talents),_
	conditional(+1 to ST:Reaction), description(Boating, Crewman, Freight Handling, Knot-Tying, Meteorology, Navigation, Shiphandling)
Master Builder, 5/10, gives(+1 To GR:Master Builder), page(B89, F132), upto(4), cat(Mundane, Mental, Talents),_
	conditional(+1 to ST:Reaction), description(Architecture, Carpentry, Engineer, Forced Entry, Masonry)
Sage, 10/20, gives(+1 To GR:Sage), page(B89, F132), upto(4), cat(Mundane, Mental, Talents),_
	conditional(+1 to ST:Reaction), description(Archaeology, Expert Skill, Geography, Heraldry, Hidden Lore, History, Law, Literature, Occultism, Philosophy, Research, Theology)

<Supernatural Physical>
Acute Mana Sense, 2/4, page(B35, F128), cat(Supernatural, Physical, Supernatural Physical)

<Supernatural Mental>
Blessed (The King's Two Bodies), 10, page(F128), cat(Supernatural, Mental)
Luck (Armor of Faith), 15/30/60, displaycost(12/23/45), mods(Luck), levelnames( , Extraordinary, Ridiculous), page(F128), upto(3), cat(Supernatural, Mental, Supernatural Mental),_
	initmods(Defensive, -20%, group(Luck), page(B66) |
		Pact, -5%, group(_General), page(B113) _
		)

Plant Mastery, 5/10, page(F159), cat(Supernatural, Mental, Talents)
Spirit Powers, 5/10, page(F159), cat(Supernatural, Mental, Talents)
Magic Powers, 5/10, page(F159), cat(Supernatural, Mental, Talents), mods(Magic Powers)

<Exotic Mental>
Modular Abilities (Spirit Trapping), 0, displaycost(6+4/point), mods(Spirit Trapping, Modular Ability), page(B71, F130), cat(Exotic Physical, Exotic, Mental, Physical),_
	x(_
		#InputReplace("Specify the name of this Modular slot","_Per point of abilities","Slot 1",Spirit Trapping),_
		#InputReplace("How many points does this Modular slot have:","[level]","1",Spirit Trapping),_
		#buildit _
	),_
	initmods( _Per point of abilities, 6+4/point, formula(6+(me::level*4)), forceformula(yes), group(Spirit Trapping), page(B71), mods(Modular Abilities), level([level]) )
Modular Abilities (Spirit Binding), 0, displaycost(5+3/point), mods(Spirit Binding, Modular Ability), page(B71, F130), cat(Exotic Physical, Exotic, Mental, Physical),_
	x(_
		#InputReplace("Specify the name of this Modular slot","_Per point of abilities","Slot 1",Spirit Binding),_
		#InputReplace("How many points does this Modular slot have:","[level]","1",Spirit Binding),_
		#buildit _
	),_
	initmods( _Per point of abilities, 5+3/point, formula(5+(me::level*3)), forceformula(yes), group(Spirit Binding), page(B71), mods(Modular Abilities), level([level]) )

********************************************************************************************************\[STOP]
[DISADVANTAGES]
*******************************************************************************************************\[START]
<Mundane Mental>
Code of Honor (Highwayman's), -5, page(B127, F132), cat(Mundane, Mental)

<Mundane Social>
Social Stigma (Vermin), -15, page(B155, F133), cat(Mundane, Social),_
	conditional(-3 to ST:Reaction)
Social Stigma (Dead), -20, page(B155, F133), cat(Mundane, Social),_
	conditional(-4 to ST:Reaction)

********************************************************************************************************\[STOP]
[PERKS]
*******************************************************************************************************\[START]
<_General>
Named Possession, 1, page(F132)
Weapon Bond (%Weapon%), 1, page(F132, HT250, MA53, PU2:9, DF1:14),_
	conditional(+1 to "SK:%WeaponList%"),_
	x(#message(_
			"Note: You will need to add the '_Perk: Weapon Bond' modifier to the specific weapon which recieves _
			a bonus from Weapon Bond in order for the skill level to be increased on the Weapon Table." _
			),_
		#ChoiceList(_
			name(Weapon),_
			title(Weapon Bond: Choose a Weapon Skill),_
			text(Choose a Weapon skill from the list. If the weapon has more than one mode, using more than one skill, select them all:),_
			picksallowed(atleast 1),_
			method(bynumber),_
			list(_
				#grouplist(GR:ShieldSkill, flags(NoPrefix)),_
				#grouplist(GR:Melee Weapon Skill, flags(NoPrefix)),_
				#grouplist(GR:Ranged Weapon Skill, flags(NoPrefix))_
				)_
			)_
	), noresync(yes)

********************************************************************************************************\[STOP]
[SKILLS]
*******************************************************************************************************\[START]
<Arts/Entertainment>
Expert Skill (Bardic Lore), IQ/H, page(B193, F135), cat(_General, Arts/Entertainment)

<Social Sciences/Humanities>
Linguistics (Animals), IQ/H, page(B205, F135), cat(_General, Social Sciences/Humanities), needs("SK:Mimicry (Animal Sounds)" = 12 | "SK:Mimicry (Bird Calls)" = 12 | AD:Mimicry)

<Occult/Magical>
Savoir-Faire (Magical), IQ/E, default(IQ - 4), page(B218, F137)

<Combat/Weapons - Ranged Combat>
Thrown Weapon (Disc), DX/E, default(DX - 4), page(B226, F136), cat(_General, Combat/Weapons - Ranged Combat)

<Techniques, Techniques - Combat>
Chariot Archery (Bow), Tech/H, default("SK:Bow::level" - 6), needs(SK:Bow), upto(prereq), page(F136)
Hang from Saddle (Riding ([Animal])), Tech/H, default("SK:Riding ([Animal])::level" - 3), needs(SK:Riding ([Animal])), upto(prereq-1), page(F136),_
	x(#InputReplace("You must specialize by riding beast:", "[Animal]", "Equines", "Hang from Saddle"))
No-Hands Riding (Riding ([Animal])), Tech/H, default("SK:Riding ([Animal])::level" - 3), needs(SK:Riding ([Animal])), upto(prereq), page(F136),_
	x(#InputReplace("You must specialize by riding beast:", "[Animal]", "Equines", "No-Hands Riding"))
Purse Cutting (Knife), Tech/H, default("SK:Knife::level" - 5), needs(SK:Knife), page(F136)
Sharp Turn (Teamster ([Animal])), Tech/H, default("SK:Teamster ([Animal])::level" - 1), needs(SK:Teamster ([Animal])), upto(prereq), page(F136),_
	x(#InputReplace("You must specialize by animal type:", "[Animal]", "Equines", "Sharp Turn"))
Shoot Backward (Bow), Tech/H, default("SK:Bow::level" - 4), needs(SK:Bow, SK:Riding), upto(prereq), page(F136)
Shoot Over Mount (Bow), Tech/H, default("SK:Bow::level" - 4), needs(SK:Bow, SK:Riding), upto(prereq), page(F136)

<Knowledge>
Hidden Lore (Spirit Lore), IQ/A, page(B199), cat(_General, Knowledge, Occult/Magical)

********************************************************************************************************\[STOP]
[GROUPS]
*******************************************************************************************************\[START]
<AllMetaTraits>
TE:Intact Undead
TE:Rotting Undead
TE:Skeletal Undead
TE:Mummified Undead
TE:Unmanifested Spirit
TE:Unmanifested Spirit - Difficult Speech
TE:Unmanifested Spirit - Not Mute
TE:Unmanifested Spirit - Apparition
TE:Unmanifested Spirit - Phantasm
TE:Unmanifested Spirit - Materialization (1FP/Sec)
TE:Unmanifested Spirit - Materialization (1FP/Minute)
TE:Unmanifested Spirit - Magical Spirit
TE:Unmanifested Spirit - Poltergeist

<AllAdvantages>
AD:Acute Mana Sense
AD:Blessed (The King's Two Bodies)
AD:Luck (Armor of Faith)
AD:Allure
AD:Bard
AD:Devotion
AD:Goodwife
AD:Mariner
AD:Master Builder
AD:Modular Abilities (Spirit Binding)
AD:Sage
AD:Magic Powers
AD:Plant Mastery
AD:Spirit Powers

<AllAdvantagesMental>
AD:Blessed (The King's Two Bodies)
AD:Luck (Armor of Faith)
AD:Allure
AD:Bard
AD:Devotion
AD:Goodwife
AD:Mariner
AD:Master Builder
AD:Modular Abilities (Spirit Binding)
AD:Sage
AD:Magic Powers
AD:Plant Mastery
AD:Spirit Powers

<AllAdvantagesPhysical>
AD:Acute Mana Sense
AD:Modular Abilities (Spirit Binding)

<AllPerks>
PE:Named Possession
PE:Weapon Bond (%Weapon%)
PE:Named Possession

<AllDisadvantages>
DI:Code of Honor (Highwayman's)
DI:Social Stigma (Vermin)

<Allure>
SK:Dancing
SK:Erotic Art
SK:Makeup
SK:Sex Appeal
SK:Singing

<Bard>
SK:Heraldry
SK:Literature
SK:Musical Influence
SK:Poetry
SK:Public Speaking
SK:Singing

<Devotion>
SK:Autohypnosis
SK:Exorcism
SK:Meditation
SK:Religious Ritual

<Goodwife>
SK:Cooking
SK:Diagnosis
SK:Gardening
SK:Housekeeping
SK:Sewing

<Mariner>
SK:Boating
SK:Freight Handling
SK:Knot-Tying
SK:Meteorology
SK:Navigation
SK:Shiphandling

SK:Airshipman
SK:Spacer
SK:Seamanship
SK:Submariner

<Master Builder>
SK:Architecture
SK:Carpentry
SK:Engineer
SK:Forced Entry
SK:Masonry

<Sage>
SK:Archaeology
SK:Expert Skill
SK:Geography
SK:Heraldry
SK:Hidden Lore
SK:History
SK:Law
SK:Literature
SK:Occultism
SK:Philosophy
SK:Research
SK:Theology

<ShieldSkill>
SK:Shield (Shield)
SK:Shield (Buckler)
SK:Shield (Force)

<Melee Weapon Skill>
SK:Axe/Mace
SK:Broadsword
SK:Cloak
SK:Flail
SK:Force Sword
SK:Force Whip
SK:Garrote
SK:Jitte/Sai
SK:Knife
SK:Kusari
SK:Lance
SK:Main-Gauche
SK:Monowire Whip
SK:Parry Missile Weapons
SK:Polearm
SK:Rapier
SK:Saber
SK:Shortsword
SK:Smallsword
SK:Spear
SK:Staff
SK:Tonfa
SK:Two-Handed Axe/Mace
SK:Two-Handed Flail
SK:Two-Handed Sword
SK:Whip

<Ranged Weapon Skill>
SK:Artillery (Beams)
SK:Artillery (Bombs)
SK:Artillery (Cannon)
SK:Artillery (Catapult)
SK:Artillery (Guided Missile)
SK:Artillery (Torpedoes)
SK:Beam Weapons (Pistol)
SK:Beam Weapons (Projector)
SK:Beam Weapons (Rifle)
SK:Blowpipe
SK:Bolas
SK:Bow
SK:Crossbow
SK:Dropping
SK:Gunner (Beams)
SK:Gunner (Cannon)
SK:Gunner (Catapult)
SK:Gunner (Machine Gun)
SK:Gunner (Rockets)
SK:Guns (Grenade Launcher)
SK:Guns (Gyroc)
SK:Guns (Light Anti-Armor Weapon)
SK:Guns (Light Machine Gun)
SK:Guns (Musket)
SK:Guns (Pistol)
SK:Guns (Rifle)
SK:Guns (Shotgun)
SK:Guns (Submachine Gun)
SK:Innate Attack (Beam)
SK:Innate Attack (Breath)
SK:Innate Attack (Gaze)
SK:Innate Attack (Projectile)
SK:Lasso
SK:Liquid Projector (Flamethrower)
SK:Liquid Projector (Sprayer)
SK:Liquid Projector (Squirt Gun)
SK:Liquid Projector (Water Cannon)
SK:Net
SK:Sling
SK:Spear Thrower
SK:Thrown Weapon (Axe/Mace)
SK:Thrown Weapon (Dart)
SK:Thrown Weapon (Harpoon)
SK:Thrown Weapon (Knife)
SK:Thrown Weapon (Shuriken)
SK:Thrown Weapon (Spear)
SK:Thrown Weapon (Stick)

********************************************************************************************************\[STOP]
[MODIFIERS]
*******************************************************************************************************\[START]
<_Power Modifiers>
Plant Mastery, -10%, group(_Power Modifiers), page(F159)
Spirit Power, -5%, group(_Power Modifiers), page(F159)
Magic Power, -10%, group(_Power Modifiers), page(F159)

<Dread>
Insensitive, -50%, group(Dread), page(F133)

<Insubstantiality>
Difficult Materialization, -20%, group(Insubstantiality), page(F128)
Illusory Form, -15%, group(Insubstantiality), page(F128)
Projection, -50%, group(Insubstantiality), page(F128)
No Vertical Move, -10%, group(Insubstantiality), page(F128)

<Invisibility>
Only in Spirit Form, -10%, group(Invisibility), page(F129)

<Magery 0>
Ceremonial Only, -40%, group(Magery), page(F129), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Divided Magery, -40%, group(Magery), page(F129), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Hyperdivided Magery, -80%, group(Magery), page(F129), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Impermanent Magery, -10%/-20%, group(Magery), upto(2), page(F129),_
	levelnames( , Dispelled by non-magical means), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
One-Spell Magery, -80%/-75%, group(Magery), upto(16), page(F129),_
	levelnames(, Two-Spells, Three-Spells, Four-Spells, Five-Spells, Six-Spells, Seven-Spells, Eight-Spells, Nine-Spells, Ten-Spells, Eleven-Spells, Twelve-Spells, Thirteen-Spells, Fourteen-Spells, Fifteen-Spells, Sixteen-Spells), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Restructurable Divided Magery, -8%/-12%/-20%/-24%, group(Magery), upto(4), page(F129),_
	levelnames(1-minute reassignment, 10-minute reassignment, 1-hour reassignment, 8-hour reassignment), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Restructurable Hyperdived Magery, -16%/-24%/-40%/-48%, group(Magery), upto(4), page(F129),_
	levelnames(1-minute reassignment, 10-minute reassignment, 1-hour reassignment, 8-hour reassignment), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))
Solitary Ceremonial Casting, +10%, group(Magery), page(F129), x(#Message(Most Magery modifiers may not be applied to Magery 0. This modifier is provided for those people wishing to apply modifiers to Magery 0 anyway.))

<Magery>
Ceremonial Only, -40%, group(Magery), page(F129)
Divided Magery, -40%, group(Magery), page(F129)
Hyperdivided Magery, -80%, group(Magery), page(F129)
Impermanent Magery, -10%/-20%, group(Magery), upto(2), page(F129),_
	levelnames( , Dispelled by non-magical means)
One-Spell Magery, -80%/-75%, group(Magery), upto(16), page(F129), mods(One-Spell Magery), ownerlevel(owner::level),_
	levelnames(, Two-Spells, Three-Spells, Four-Spells, Five-Spells, Six-Spells, Seven-Spells, Eight-Spells, Nine-Spells, Ten-Spells, Eleven-Spells, Twelve-Spells, Thirteen-Spells, Fourteen-Spells, Fifteen-Spells, Sixteen-Spells),_
	gives(=-owner::level to ST:Magery, =+owner::level to "ST:One-Spell Magery"),_
	x(_
		#message(Use this limitation *ONLY* on the Magery advantage. It will cause errors if used on any other trait.),_
		#message(In order for the Magery level to be added to the individual spells you will need to add modifiers to this modifier selecting which spell(s) it affects.),_
		#buildit _
		)

Restructurable Divided Magery, -8%/-12%/-20%/-24%, group(Magery), upto(4), page(F129),_
	levelnames(1-minute reassignment, 10-minute reassignment, 1-hour reassignment, 8-hour reassignment)
Restructurable Hyperdived Magery, -16%/-24%/-40%/-48%, group(Magery), upto(4), page(F129),_
	levelnames(1-minute reassignment, 10-minute reassignment, 1-hour reassignment, 8-hour reassignment)
Solitary Ceremonial Casting, +10%, group(Magery), page(F129)

<Magic Powers>
Extremely Potent, *2, group(Magic Powers), page(F159)

<Night Vision>
Visually impaired by day, *0, group(Night Vision), page(F130), conditional(-1 to ST:Vision when "in daylight")

<Spells>
Fixed Magic, +1/+2, group(Spells), page(F161)

<Shadow Form Advantage>
Illusionary Form, +25%, group(Shadow Form Advantage), page(F131)
Luminous Form, +0%, group(Shadow Form Advantage), page(F131)
Touch, +0%/+5%, group(Shadow Form Advantage), upto(2), levelnames( , Switchable), page(F131)
Reflection, -25%, group(Shadow Form Advantage), page(F131)

<Shadow Form Disadvantage>
Illusionary Form, -25%, group(Shadow Form Disadvantage), page(F131)
Luminous Form, +0%, group(Shadow Form Disadvantage), page(F131)
Touch, +0%/-5%, group(Shadow Form Disadvantage), upto(2), levelnames( , Switchable), page(F131)
Reflection, +25%, group(Shadow Form Disadvantage), page(F131)

<Morph>
Cannot Memorize Forms, -50%, group(Morph), page(F131)

<Alternate Form>
Linked Changes, -25%, group(Alternate Form), page(F131)
Only when Insubstantial, -5%/-10%, group(Alternate Form), page(F131),_
	levelnames(Can retain shape when material, Automatically reverts to base form when material)
Required Intermediate Form: Cannot access base form, -5%, shortname(Cannot access base form), group(Alternate Form), page(F131)
Required Intermediate Form: Cannot be reached by other Forms, -10%/-5%, formula(-10 / %level ), forceformula(yes), group(Alternate Form), page(F131)

Skinbound/Breakable: DR 2 or less, -10%, group(Alternate Form), page(F131)
Skinbound/Breakable: DR 3-5, -7.5%, group(Alternate Form), page(F131)
Skinbound/Breakable: DR 6-15, -5%, group(Alternate Form), page(F131)
Skinbound/Breakable: DR 16-25, -2.5%, group(Alternate Form), page(F131)
Skinbound/Breakable: DR 26 or higher, +0%, group(Alternate Form), page(F131)
Skinbound/Breakable: Cannot repair, -7.5%, group(Alternate Form), page(F131)
Skinbound/Breakable: Size -9 or less, +0%, group(Alternate Form), page(F131)
Skinbound/Breakable: Size -7 or -8, -2.5%, group(Alternate Form), page(F131)
Skinbound/Breakable: Size -5 or -6, -5%, group(Alternate Form), page(F131)
Skinbound/Breakable: Size -3 or -4, -7.5%, group(Alternate Form), page(F131)
Skinbound/Breakable: Size -1 or -2, -10%, group(Alternate Form), page(F131)
Skinbound/Breakable: Size 0 or more, -12.5%, group(Alternate Form), page(F131)
Skinbound/Can Be Stolen: Easily snatched with unopposed DX roll, -20%, group(Alternate Form), page(F131), mods(Can Be Stolen)
Skinbound/Can Be Stolen: Thief must win a Quick Contest of DX or ST, -15%, group(Alternate Form), page(F131), mods(Can Be Stolen)
Skinbound/Can Be Stolen: Can only be taken by stealth or trickery, -10%, group(Alternate Form), page(F131), mods(Can Be Stolen)
Skinbound/Can Be Stolen: Must be forcefully removed, -5%, group(Alternate Form), page(F131), mods(Can Be Stolen)
Skinbound/Unique, -12.5%, group(Alternate Form), page(F131)

<Spirit Trapping>
_Per point of abilities, 6+4/point, formula(6+(me::level*4)), forceformula(yes), group(Spirit Trapping), page(B71), mods(Modular Abilities),_
	x(_
		#InputToTagReplace("Specify the name of this Modular slot",name,"Slot 2",Spirit Trapping),_
		#InputReplace("How many points does this Modular slot have:","[level]","1",Spirit Trapping) _
	), level([level])

<Spirit Binding>
_Per point of abilities, 5+3/point, formula(5+(me::level*3)), forceformula(yes), group(Spirit Binding), page(B71), mods(Modular Abilities),_
	x(_
		#InputToTagReplace("Specify the name of this Modular slot",name,"Slot 2",Spirit Binding),_
		#InputReplace("How many points does this Modular slot have:","[level]","1",Spirit Binding) _
	), level([level])

<Bow Quality>
_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Bow Quality), page(F132, HT250, MA53, PU2:9, DF1:14), shortname(Weapon Bond)

<Guns>
_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Guns), page(F132, HT250, MA53, PU2:9, DF1:14), shortname(Weapon Bond)

<Beams>
_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Beams), page(F132, HT250, MA53, PU2:9, DF1:14), shortname(Weapon Bond)

<Shield>
_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Shield), page(F132, HT250, MA53, PU2:9, DF1:14), shortname(Weapon Bond)

<Melee Quality>
_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Melee Quality), page(F132, HT250, MA53, PU2:9, DF1:14), shortname(Weapon Bond)

<One-Spell Magery>
_New Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:_New Spell),_
	x(#InputReplace("Please enter the name of the spell:", "_New Spell", "name (extension)", "One-Spell Magery"))
Purify Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Purify Air)
Seek Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Air)
Create Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Air)
No-Smell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:No-Smell)
Stench (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stench)
Destroy Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Destroy Air)
Odor (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Odor)
Shape Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shape Air)
Air Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Air Jet)
Air Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Air Vision)
Body of Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Air)
Devitalize Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Devitalize Air)
Walk on Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Walk on Air)
Wall of Wind (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wall of Wind)
Windstorm (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Windstorm)
Earth to Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Earth to Air)
Concussion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Concussion)
Breathe Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Breathe Air)
Essential Air (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Essential Air)
Air Vortex (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Air Vortex)
Sandstorm (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sandstorm)
Body of Wind (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Wind)
Summon Air Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Summon Air Elemental)
Control Air Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Control Air Elemental)
Create Air Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Air Elemental)

Beast-Soother (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Beast-Soother)
Beast-Rouser (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Beast-Rouser)
Vermin Control (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Vermin Control)
Fish Control (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fish Control)
Reptile Control (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Reptile Control)
Bird Control (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Bird Control)
Mammal Control (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mammal Control)
Hybrid Control (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hybrid Control)
Beast Summoning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Beast Summoning)
Master (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Master)
Beast Link (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Beast Link)
Beast Speech (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Beast Speech)
Repel Vermin (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Repel Vermin)
Repel Fish (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Repel Fish)
Repel Reptile (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Repel Reptile)
Repel Bird (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Repel Bird)
Repel Mammal (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Repel Mammal)
Repel Hybrids (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Repel Hybrids)
Rider (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rider)
Rider Within (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rider Within)
Spider Silk (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spider Silk)
Beast Seeker (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Beast Seeker)
Beast Possession (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Beast Possession)
Permanent Beast Possession (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Permanent Beast Possession)
Protect Animal (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Protect Animal)
Shapeshifting ([Animal]; Fixed), +0, gives(+owner::ownerlevel to SP:Shapeshifting ([Animal)),_
		x( #InputReplace("Select the animal form you can Shapeshift into:", "[Animal]", , "Shapeshifting") )
Shapeshift Others ([Animal]; Fixed), +0, gives(+owner::ownerlevel to SP:Shapeshift Others ([Animal])),_
		x( #InputReplace("Select the animal form you can Shapeshift Others into:", "[Animal]", , "Shapeshift Others") )
Permanent Shapeshifting ([Animal]; Fixed), +0, gives(+owner::ownerlevel to SP:Permanent Shapeshifting ([Animal])),_
		x( #InputReplace("Select the animal form you can Permanently Shapeshift into:", "[Animal]", , "Permanent Shapeshifting") )
Partial Shapeshifting (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Partial Shapeshifting),_
		x( #InputReplace("Select the variation you can Partially Shapeshift into:", "[Variant]", , "Partial Shapeshifting") )
Partial Shapeshifting (Chameleon Eyes; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Chameleon Eyes))
Partial Shapeshifting (Crocodile Jaws; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Crocodile Jaws))
Partial Shapeshifting (Elephant Trunk; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Elephant Trunk))
Partial Shapeshifting (Feathered Arms; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Feathered Arms))
Partial Shapeshifting (Fish Tail; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Fish Tail))
Partial Shapeshifting (Mountain Goat Hooves; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Mountain Goat Hooves))
Partial Shapeshifting (Saber Teeth; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Saber Teeth))
Partial Shapeshifting (Scorpion Tail; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Scorpion Tail))
Partial Shapeshifting (Serpent's Fangs; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Serpent's Fangs))
Partial Shapeshifting (Skunk Tail; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Skunk Tail))
Partial Shapeshifting (Spider Arms; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Spider Arms))
Partial Shapeshifting (Tiger Paws; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Tiger Paws))
Partial Shapeshifting (Toad Tongue; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Toad Tongue))
Partial Shapeshifting (Turtle Shell; Fixed), +0, gives(+owner::ownerlevel to SP:Partial Shapeshifting (Turtle Shell))
Great Shapeshift (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Great Shapeshift)

Climbing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Climbing)
Itch (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Itch)
Touch (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Touch)
Perfume (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Perfume)
Spasm (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spasm)
Stop Spasm (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stop Spasm)
Tickle (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Tickle)
Pain (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Pain)
Clumsiness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Clumsiness)
Hinder (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hinder)
Rooted Feet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rooted Feet)
Tanglefoot (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Tanglefoot)
Roundabout (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Roundabout)
Debility (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Debility)
Frailty (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Frailty)
Might (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Might)
Grace (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Grace)
Vigor (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Vigor)
Boost Dexterity (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Boost Dexterity)
Boost Health (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Boost Health)
Boost Strength (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Boost Strength)
Boost Intelligence (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Boost Intelligence)
Stun (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stun)
Nauseate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Nauseate)
Retch (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Retch)
Fumble (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fumble)
Strike Dumb (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Strike Dumb)
Strike Blind (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Strike Blind)
Strike Deaf (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Strike Deaf)
Hunger (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hunger)
Thirst (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Thirst)
Resist Pain (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Pain)
Hold Breath (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hold Breath)
Ambidexterity (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ambidexterity)
Balance (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Balance)
Reflexes (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Reflexes)
Cadence (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Cadence)
Hair Growth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hair Growth)
Haircut (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Haircut)
Sensitize (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sensitize)
Agonize (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Agonize)
Weaken Blood (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Weaken Blood)
Strike Numb (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Strike Numb)
Choke (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Choke)
Control Limb (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Control Limb)
Paralyze Limb (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Paralyze Limb)
Total Paralysis (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Total Paralysis)
Wither Limb (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wither Limb)
Strike Barren (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Strike Barren)
Deathtouch (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Deathtouch)
Alter Voice (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Alter Voice)
Alter Visage (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Alter Visage)
Alter Body (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Alter Body)
Lengthen Limb (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lengthen Limb)
Decapitation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Decapitation)
Shrink (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shrink)
Shrink Other (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shrink Other)
Enlarge (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Enlarge)
Enlarge Other (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Enlarge Other)
Corpulence (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Corpulence)
Gauntness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Gauntness)
Transform Body (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Transform Body)
Transform Other (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Transform Other)
Transmogrification (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Transmogrification)

Sense Foes (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sense Foes)
Sense Life (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sense Life)
Sense Emotion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sense Emotion)
Hide Emotion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hide Emotion)
Persuasion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Persuasion)
Vexation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Vexation)
Truthsayer (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Truthsayer)
Dream Viewing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dream Viewing)
Dream Sending (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dream Sending)
Dream Projection (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dream Projection)
Hide Thoughts (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hide Thoughts)
Lend Language (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lend Language)
Borrow Language (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Borrow Language)
Gift of Tongues (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Gift of Tongues)
Gift of Letters (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Gift of Letters)
Mind-Reading (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mind-Reading)
Mind-Search (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mind-Search)
Mind-Sending (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mind-Sending)
Telepathy (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Telepathy)
Retrogression (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Retrogression)
Lend Skill (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lend Skill)
Borrow Skill (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Borrow Skill)
Compel Truth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Compel Truth)
Insignificance (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Insignificance)
Presence (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Presence)
Communication (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Communication)
Soul Rider (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Soul Rider)
Control Person (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Control Person)
Possession (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Possession)
Dispel Possession (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dispel Possession)
Permanent Possession (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Permanent Possession)
Exchange Bodies (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Exchange Bodies)

Seek Earth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Earth)
Shape Earth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shape Earth)
Shape Stone (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shape Stone)
Seek Pass (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Pass)
Earth Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Earth Vision)
Earth to Stone (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Earth to Stone)
Create Earth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Earth)
Flesh to Stone (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Flesh to Stone)
Stone to Earth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stone to Earth)
Predict Earth Movement (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Predict Earth Movement)
Sand Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sand Jet)
Mud Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mud Jet)
Stone Missile (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stone Missile)
Walk Through Earth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Walk Through Earth)
Earth to Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Earth to Water)
Partial Petrifaction (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Partial Petrifaction)
Rain of Stones (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rain of Stones)
Entombment (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Entombment)
Essential Earth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Essential Earth)
Stone to Flesh (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stone to Flesh)
Body of Stone (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Stone)
Steelwraith (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steelwraith)
Purify Earth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Purify Earth)
Earthquake (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Earthquake)
Volcano (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Volcano)
Alter Terrain (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Alter Terrain)
Move Terrain (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Move Terrain)
Summon Earth Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Summon Earth Elemental)
Control Earth Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Control Earth Elemental)
Create Earth Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Earth Elemental)

Enchant (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Enchant)
Temporary Enchantment (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Temporary Enchantment)
Scroll (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Scroll)
Hex (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hex)
Power (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Power)
Speed (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Speed)
Remove Enchantment (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Remove Enchantment)
Suspend Enchantment (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Suspend Enchantment)
Resist Enchantment (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Enchantment)
Lesser Wish (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lesser Wish)
Talisman (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Talisman)
Amulet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Amulet)
Adjustable Clothing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Adjustable Clothing)
Golem (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Golem)
Impression Blocker (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Impression Blocker)
Malefice (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Malefice)
Ensorcel (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ensorcel)
Spell Stone (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spell Stone)
Wish (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wish)
Hideaway (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hideaway)
Leak (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Leak)
Simulacrum (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Simulacrum)
Doppelgänger (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Doppelgänger)
Great Wish (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Great Wish)

//  Weapon Enchantments
Bane (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Bane)
Graceful Weapon (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Graceful Weapon)
Loyal Sword (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Loyal Sword)
Quick-Draw (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Quick-Draw)
Penetrating Weapon (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Penetrating Weapon)
Dancing Weapon (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dancing Weapon)
Defending Weapon (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Defending Weapon)
Weapon Spirit (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Weapon Spirit)
Cornucopia (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Cornucopia)
Quick-Aim (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Quick-Aim)
Accuracy (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Accuracy)
Puissance (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Puissance)
Ghost Weapon (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ghost Weapon)
Spell Arrow (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spell Arrow)
Blank Spell Arrow (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Blank Spell Arrow)
Speed Spell Arrow (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Speed Spell Arrow)

//  Armor Enchantments
Fortify (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fortify)
Deflect (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Deflect)
Lighten (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lighten)
Dancing Shield (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dancing Shield)
Defending Shield (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Defending Shield)

//  Limiting Enchantments
Limit (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Limit)
Name (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Name)
Password (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Password)
Attune (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Attune)

//  Wizardly Tools
Powerstone (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Powerstone)
Manastone (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Manastone)
Staff (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Staff)
Homunculus (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Homunculus)
Effigy (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Effigy)
Soul Stone (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Soul Stone)
Crystal Ball (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Crystal Ball)

Ignite Fire (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ignite Fire)
Seek Fire (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Fire)
Create Fire (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Fire)
Extinguish Fire (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Extinguish Fire)
Shape Fire (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shape Fire)
Phantom Flame (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Phantom Flame)
Fireproof (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fireproof)
Slow Fire (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Slow Fire)
Fast Fire (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fast Fire)
Deflect Energy (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Deflect Energy)
Flame Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Flame Jet)
Smoke (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Smoke)
Heat (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Heat)
Cold (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Cold)
Rain of Fire (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rain of Fire)
Resist Fire (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Fire)
Resist Cold (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Cold)
Warmth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Warmth)
Fireball (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fireball)
Explosive Fireball (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Explosive Fireball)
Essential Flame (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Essential Flame)
Flaming Weapon (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Flaming Weapon)
Flaming Missiles (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Flaming Missiles)
Flaming Armor (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Flaming Armor)
Fire Cloud (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fire Cloud)
Breathe Fire (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Breathe Fire)
Burning Touch (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Burning Touch)
Body of Flames (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Flames)
Burning Death (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Burning Death)
Summon Fire Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Summon Fire Elemental)
Control Fire Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Control Fire Elemental)
Create Fire Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Fire Elemental)

Seek Food (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Food)
Test Food (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Test Food)
Decay (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Decay)
Season (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Season)
Far-Tasting (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Far-Tasting)
Mature (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mature)
Purify Food (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Purify Food)
Cook (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Cook)
Prepare Game (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Prepare Game)
Know Recipe (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Know Recipe)
Poison Food (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Poison Food)
Preserve Food (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Preserve Food)
Create Food (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Food)
Essential Food (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Essential Food)
Water to Wine (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Water to Wine)
Distill (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Distill)
Fool's Banquet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fool's Banquet)
Monk's Banquet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Monk's Banquet)

Timeport (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Timeport)
Timeport Other (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Timeport Other)
Timeslip (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Timeslip)
Timeslip Other (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Timeslip Other)
Rapid Journey (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rapid Journey)
Planar Summons ([Plane]; Fixed), +0, gives(+owner::ownerlevel to SP:Planar Summons),_
		x( #InputReplace("Select the Plane of existence from which you can Summon a being:", "[Plane]", , "Planar Summons") )
Planar Visit ([Plane]; Fixed), +0, gives(+owner::ownerlevel to SP:Planar Visit),_
		x( #InputReplace("Select the Plane of existence which you can Visit:", "[Plane]", ,"Planar Visit") )
Plane Shift ([Plane]; Fixed), +0, gives(+owner::ownerlevel to SP:Plane Shift ([plane])),_
		x( #InputReplace("Select the Plane of existence which you can Shift to:", "[plane]",  , "Plane Shift") )
Plane Shift Other ([Plane]; Fixed), +0, gives(+owner::ownerlevel to SP:Plane Shift Other ([plane])),_
		x( #InputReplace("Select the Plane of existence which you can Shift Others to:", "[plane]", , "Plane Shift Other") )
Phase (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Phase)
Phase Other (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Phase Other)
Beacon (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Beacon)
Trace Teleport (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Trace Teleport)
Divert Teleport (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Divert Teleport)
Create Door (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Door)
Seek Gate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Gate)
Scry Gate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Scry Gate)
Control Gate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Control Gate)
Create Gate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Gate)
Slow Time (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Slow Time)
Accelerate Time (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Accelerate Time)
Hide Object (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hide Object)
Sanctuary (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sanctuary)
Suspend Time (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Suspend Time)
Time Out (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Time Out)

Body-Reading (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body-Reading)
Final Rest (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Final Rest)
Lend Energy (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lend Energy)
Lend Vitality (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lend Vitality)
Share Energy (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Share Energy)
Recover Energy (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Recover Energy)
Remove Contagion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Remove Contagion)
Awaken (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Awaken)
Relieve Sickness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Relieve Sickness)
Share Vitality (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Share Vitality)
Resist Disease (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Disease)
Resist Poison (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Poison)
Stop Bleeding (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stop Bleeding)
Minor Healing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Minor Healing)
Major Healing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Major Healing)
Great Healing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Great Healing)
Cure Disease (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Cure Disease)
Neutralize Poison (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Neutralize Poison)
Instant Neutralize Poison (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Instant Neutralize Poison)
Relieve Addiction (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Relieve Addiction)
Relieve Madness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Relieve Madness)
Restore Sight (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Restore Sight)
Restore Hearing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Restore Hearing)
Restore Memory (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Restore Memory)
Restore Speech (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Restore Speech)
Stop Paralysis (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stop Paralysis)
Relieve Paralysis (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Relieve Paralysis)
Restoration (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Restoration)
Instant Restoration (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Instant Restoration)
Regeneration (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Regeneration)
Instant Regeneration (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Instant Regeneration)
Cleansing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Cleansing)
Suspended Animation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Suspended Animation)
Healing Slumber (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Healing Slumber)
Halt Aging (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Halt Aging)
Youth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Youth)
Resurrection (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resurrection)

Simple Illusion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Simple Illusion)
Complex Illusion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Complex Illusion)
Perfect Illusion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Perfect Illusion)
Illusion Shell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Illusion Shell)
Illusion Disguise (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Illusion Disguise)
Independence (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Independence)
Know Illusion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Know Illusion)
Control Illusion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Control Illusion)
Dispel Illusion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dispel Illusion)
Inscribe (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Inscribe)
Phantom (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Phantom)
Initiative (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Initiative)
Create Object (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Object)
Duplicate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Duplicate)
Create Servant (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Servant)
Create Warrior (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Warrior)
Create Animal (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Animal)
Create Mount (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Mount)
Control Creation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Control Creation)
Dispel Creation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dispel Creation)

Measurement (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Measurement)
Tell Time (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Tell Time)
Alarm (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Alarm)
Far-Feeling (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Far-Feeling)
Find Direction (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Find Direction)
Tell Position (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Tell Position)
Test Load (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Test Load)
Detect Magic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Detect Magic)
Sense Mana (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sense Mana)
Aura (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Aura)
Identify Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Identify Spell)
Mage Sight (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mage Sight)
Mage Sense (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mage Sense)
Seek Magic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Magic)
Analyze Magic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Analyze Magic)
Summon Shade (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Summon Shade)
Glass Wall (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Glass Wall)
Know Location (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Know Location)
Wizard Eye (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wizard Eye)
Invisible Wizard Eye (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Invisible Wizard Eye)
Wizard Mouth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wizard Mouth)
Wizard Nose (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wizard Nose)
Wizard Hand (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wizard Hand)
Astral Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Astral Vision)
Memorize (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Memorize)
Pathfinder (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Pathfinder)
Projection (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Projection)
Seeker (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seeker)
Trace (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Trace)
History (Fixed), +0, gives(=+"owner::ownerlevel" to SP:History)
Ancient History (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ancient History)
Prehistory (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Prehistory)
Reconstruct Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Reconstruct Spell)
Know True Shape (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Know True Shape)
Recall (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Recall)
Remember Path (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Remember Path)
See Secrets (Fixed), +0, gives(=+"owner::ownerlevel" to SP:See Secrets)
Scents of the Past (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Scents of the Past)
Images of the Past (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Images of the Past)
Echoes of the Past (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Echoes of the Past)
Divination (Astrology; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Astrology))
Divination (Augury; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Augury))
Divination (Cartomancy; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Cartomancy))
Divination (Crystal-Gazing; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Crystal-Gazing))
Divination (Dactylomancy; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Dactylomancy))
Divination (Extispicy; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Extispicy))
Divination (Gastromancy; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Gastromancy))
Divination (Geomancy; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Geomancy))
Divination (Lecanomancy; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Lecanomancy))
Divination (Numerology; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Numerology))
Divination (Oneiromancy; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Oneiromancy))
Divination (Psysiognomy; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Physiognomy))
Divination (Pyromancy; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Pyromancy))
Divination (Sortilege; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Sortilege))
Divination (Symbol-Casting; Fixed), +0, gives(+owner::ownerlevel to SP:Divination (Symbol-Casting))

Light (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Light)
Continual Light (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Continual Light)
Colors (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Colors)
Remove Shadow (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Remove Shadow)
Shape Light (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shape Light)
Bright Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Bright Vision)
Infravision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Infravision)
Night Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Night Vision)
Hawk Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hawk Vision)
Small Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Small Vision)
Dark Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dark Vision)
Darkness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Darkness)
Blackout (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Blackout)
Glow (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Glow)
Flash (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Flash)
Gloom (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Gloom)
Light Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Light Jet)
Mirror (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mirror)
Remove Reflection (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Remove Reflection)
Wall of Light (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wall of Light)
Blur (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Blur)
Shape Darkness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shape Darkness)
Hide (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hide)
See Invisible (Fixed), +0, gives(=+"owner::ownerlevel" to SP:See Invisible)
Mage Light (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mage Light)
Continual Mage Light (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Continual Mage Light)
Sunlight (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sunlight)
Continual Sunlight (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Continual Sunlight)
Invisibility (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Invisibility)
Body of Shadow (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Shadow)
Sunbolt (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sunbolt)

Inspired Creation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Inspired Creation)
Awaken Craft Spirit (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Awaken Craft Spirit)
Find Weakness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Find Weakness)
Weaken (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Weaken)
Restore (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Restore)
Clean (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Clean)
Soilproof (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Soilproof)
Dye (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dye)
Copy (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Copy)
Rejoin (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rejoin)
Shatter (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shatter)
Animate Object (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Animate Object)
Stiffen (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stiffen)
Knot (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Knot)
Reshape (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Reshape)
Rive (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rive)
Ruin (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ruin)
Explode (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Explode)
Fasten (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fasten)
Mapmaker (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mapmaker)
Repair (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Repair)
Shatterproof (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shatterproof)
Sharpen (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sharpen)
Toughen (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Toughen)
Transparency (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Transparency)
Mystic Mark (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mystic Mark)
Weapon Self (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Weapon Self)
Transform Object (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Transform Object)
Contract Object (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Contract Object)
Extend Object (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Extend Object)
Shrink Object (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shrink Object)
Enlarge Object (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Enlarge Object)
Disintegrate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Disintegrate)

Counterspell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Counterspell)
Scryguard (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Scryguard)
Suspend Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Suspend Spell)
Ward (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ward)
Conceal Magic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Conceal Magic)
Reflect (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Reflect)
Scrywall (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Scrywall)
Great Ward (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Great Ward)
False Aura (Fixed), +0, gives(=+"owner::ownerlevel" to SP:False Aura)
Magic Resistance (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Magic Resistance)
Scryfool (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Scryfool)
Penetrating Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Penetrating Spell)
Catch Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Catch Spell)
Suspend Magic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Suspend Magic)
Displace Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Displace Spell)
Spell Shield (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spell Shield)
Spell Wall (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spell Wall)
Pentagram (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Pentagram)
Suspend Curse (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Suspend Curse)
Suspend Mana (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Suspend Mana)
Dispel Magic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dispel Magic)
Lend Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lend Spell)
Remove Curse (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Remove Curse)
Charge Powerstone (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Charge Powerstone)
Spellguard (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spellguard)
Remove Aura (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Remove Aura)
Drain Mana (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Drain Mana)
Restore Mana (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Restore Mana)
Steal Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Spell)
Telecast (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Telecast)
Hang Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hang Spell)
Maintain Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Maintain Spell)
Throw Spell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Throw Spell)
Bless (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Bless)
Curse (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Curse)
Suspend Magery (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Suspend Magery)
Drain Magery (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Drain Magery)

//  Linking Spells
Delay (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Delay)
Link (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Link)
Reflex (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Reflex)

Keen Hearing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Keen Hearing)
Keen Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Keen Vision)
Keen Taste and Smell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Keen Taste and Smell)
Keen [Sense] (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Keen [Sense]),_
		x( #InputReplace("Select the sense you can improve:", "[Sense]", , "Keen Sense") )
Dull Hearing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dull Hearing)
Dull Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dull Vision)
Dull Taste and Smell (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dull Taste and Smell)
Dull [Sense] (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dull [Sense]),_
		x( #InputReplace("Select the sense you can Dull:", "[Sense]", , "Dull Sense") )
Alertness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Alertness)
Dullness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dullness)
Fear (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fear)
Panic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Panic)
Terror (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Terror)
Bravery (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Bravery)
Rear Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rear Vision)
Berserker (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Berserker)
Foolishness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Foolishness)
Daze (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Daze)
Mental Stun (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mental Stun)
Disorient (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Disorient)
Encrypt (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Encrypt)
Fascinate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fascinate)
Forgetfulness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Forgetfulness)
Sleep (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sleep)
Wisdom (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wisdom)
Weaken Will (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Weaken Will)
Strengthen Will (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Strengthen Will)
Loyalty (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Loyalty)
Command (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Command)
Drunkenness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Drunkenness)
Madness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Madness)
Emotion Control (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Emotion Control)
Mass Daze (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mass Daze)
Mindlessness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mindlessness)
Compel Lie (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Compel Lie)
Lure (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lure)
Mass Sleep (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mass Sleep)
Peaceful Sleep (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Peaceful Sleep)
Sickness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sickness)
Will Lock (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Will Lock)
Oath (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Oath)
Permanent Forgetfulness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Permanent Forgetfulness)
Vigil (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Vigil)
Charm (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Charm)
Ecstasy (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ecstasy)
Enthrall (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Enthrall)
Permanent Madness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Permanent Madness)
False Memory (Fixed), +0, gives(=+"owner::ownerlevel" to SP:False Memory)
Avoid (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Avoid)
Nightmare (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Nightmare)
Hallucination (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hallucination)
Lesser Geas (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lesser Geas)
Suggestion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Suggestion)
Mass Suggestion (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mass Suggestion)
Glib Tongue (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Glib Tongue)
Enslave (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Enslave)
Great Hallucination (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Great Hallucination)
Great Geas (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Great Geas)

Haste (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Haste)
Apportation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Apportation)
Glue (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Glue)
Grease (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Grease)
Deflect Missile (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Deflect Missile)
Hold Fast (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hold Fast)
Increase Burden (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Increase Burden)
Jump (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Jump)
Levitation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Levitation)
Lighten Burden (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lighten Burden)
Locksmith (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Locksmith)
Long March (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Long March)
Poltergeist (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Poltergeist)
Quick March (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Quick March)
Slow Fall (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Slow Fall)
Wallwalker (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wallwalker)
Dancing Object (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dancing Object)
Distant Blow (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Distant Blow)
Lockmaster (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lockmaster)
Manipulate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Manipulate)
Slow (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Slow)
Undo (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Undo)
Winged Knife (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Winged Knife)
Flight (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Flight)
Light Tread (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Light Tread)
Slide (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Slide)
Flying Carpet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Flying Carpet)
Hawk Flight (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hawk Flight)
Ethereal Body (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ethereal Body)
Great Haste (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Great Haste)
Pull (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Pull)
Repel (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Repel)
Swim (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Swim)
Teleport (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Teleport)
Teleport Other (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Teleport Other)
Blink (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Blink)
Blink Other (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Blink Other)
Freedom (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Freedom)
Cloud-Walking (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Cloud-Walking)
Cloud-Vaulting (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Cloud-Vaulting)

Death Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Death Vision)
Sense Spirit (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sense Spirit)
Summon Spirit (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Summon Spirit)
Animation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Animation)
Steal Energy (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Energy)
Steal Vitality (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Vitality)
Materialize (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Materialize)
Solidify (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Solidify)
Affect Spirits (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Affect Spirits)
Skull-Spirit (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Skull-Spirit)
Turn Spirit (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Turn Spirit)
Zombie (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Zombie)
Control Zombie (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Control Zombie)
Turn Zombie (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Turn Zombie)
Zombie Summoning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Zombie Summoning)
Mass Zombie (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mass Zombie)
Slow Healing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Slow Healing)
Stop Healing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stop Healing)
Command Spirit (Banshees; Fixed), +0, gives(+owner::ownerlevel to SP:Command Spirit (Banshees))
Command Spirit (Specters; Fixed), +0, gives(+owner::ownerlevel to SP:Command Spirit (Specters))
Command Spirit (Manitous; Fixed), +0, gives(+owner::ownerlevel to SP:Command Spirit (Manitous))
Command Spirit ([Spirit]; Fixed), +0, gives(+owner::ownerlevel to SP:Command Spirit),_
		x( #InputReplace("Select the Spirit type you can Command:", "[Spirit]", , "Command Spirit") )
Age (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Age)
Pestilence (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Pestilence)
Evisceration (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Evisceration)
Animate Shadow (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Animate Shadow)
Rotting Death (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rotting Death)
Soul Jar (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Soul Jar)
Summon Demon (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Summon Demon)
Banish (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Banish)
Entrap Spirit (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Entrap Spirit)
Repel Spirits (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Repel Spirits)
Bind Spirit (Banshees; Fixed), +0, gives(+owner::ownerlevel to SP:Bind Spirit (Banshees))
Bind Spirit (Specters; Fixed), +0, gives(+owner::ownerlevel to SP:Bind Spirit (Specters))
Bind Spirit (Manitous; Fixed), +0, gives(+owner::ownerlevel to SP:Bind Spirit (Manitous))
Bind Spirit ([type]; Fixed), +0, gives(+owner::ownerlevel to SP:Bind Spirit ([type])),_
		x( #InputReplace("Select the Spirit type you can Bind:", "[type]", , "Bind Spirit") )
Steal Grace (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Grace)
Steal Vigor (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Vigor)
Steal Might (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Might)
Steal Wisdom (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Wisdom)
Steal Skill (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Skill)
Steal Youth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Youth)
Steal Beauty (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Beauty)
Astral Block (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Astral Block)
Lich (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lich)
Wraith (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wraith)

Seek Plant (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Plant)
Identify Plant (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Identify Plant)
Heal Plant (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Heal Plant)
Shape Plant (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shape Plant)
Bless Plants (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Bless Plants)
Hide Path (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hide Path)
Plant Growth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Plant Growth)
Plant Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Plant Vision)
Pollen Cloud (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Pollen Cloud)
Blight (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Blight)
Blossom (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Blossom)
Conceal (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Conceal)
Forest Warning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Forest Warning)
Tangle Growth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Tangle Growth)
Create Plant (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Plant)
False Tracks (Fixed), +0, gives(=+"owner::ownerlevel" to SP:False Tracks)
Plant Sense (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Plant Sense)
Rejuvenate Plant (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rejuvenate Plant)
Wither Plant (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wither Plant)
Walk Through Plants (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Walk Through Plants)
Walk Through Wood (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Walk Through Wood)
Plant Control (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Plant Control)
Essential Wood (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Essential Wood)
Animate Plant (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Animate Plant)
Plant Form (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Plant Form)
Plant Speech (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Plant Speech)
Rain of Nuts (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rain of Nuts)
Arboreal Immurement (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Arboreal Immurement)
Plant Form Other (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Plant Form Other)
Body of Wood (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Wood)
Body of Slime (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Slime)

Sense Danger (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sense Danger)
Detect Poison (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Detect Poison)
Magelock (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Magelock)
Block (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Block)
Hardiness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hardiness)
Watchdog (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Watchdog)
Nightingale (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Nightingale)
Sense Observation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sense Observation)
Shield (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shield)
Armor (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Armor)
Turn Blade (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Turn Blade)
Bladeturning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Bladeturning)
Missile Shield (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Missile Shield)
Catch Missile (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Catch Missile)
Reverse Missiles (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Reverse Missiles)
Return Missile (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Return Missile)
Reflect Gaze (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Reflect Gaze)
Mystic Mist (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mystic Mist)
Shade (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shade)
Iron Arm (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Iron Arm)
Weather Dome (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Weather Dome)
Atmosphere Dome (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Atmosphere Dome)
Resist Pressure (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Pressure)
Teleport Shield (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Teleport Shield)
Force Dome (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Force Dome)
Force Wall (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Force Wall)
Utter Dome (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Utter Dome)
Utter Wall (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Utter Wall)

Sound (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sound)
Silence (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Silence)
Sound Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sound Vision)
Thunderclap (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Thunderclap)
Voices (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Voices)
Garble (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Garble)
Imitate Voice (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Imitate Voice)
Wall of Silence (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wall of Silence)
Hush (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hush)
Mage-Stealth (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Mage-Stealth)
Great Voice (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Great Voice)
Noise (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Noise)
Delayed Message (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Delayed Message)
Resist Sound (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Sound)
Sound Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Sound Jet)
Converse (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Converse)
Far-Hearing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Far-Hearing)
Scribe (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Scribe)
Musical Scribe (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Musical Scribe)
Message (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Message)
Silver Tongue (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Silver Tongue)
Wizard Ear (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wizard Ear)
Invisible Wizard Ear (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Invisible Wizard Ear)

Seek Machine (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Machine)
Reveal Function (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Reveal Function)
Machine Control (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Machine Control)
Machine Summoning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Machine Summoning)
Machine Speech (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Machine Speech)
Glitch (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Glitch)
Malfunction (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Malfunction)
Schematic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Schematic)
Rebuild (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rebuild)
Animate Machine (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Animate Machine)
Machine Possession (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Machine Possession)
Permanent Machine Possession (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Permanent Machine Possession)
Awaken Computer (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Awaken Computer)

//  Energy Spells
Seek Power (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Power)
Seek Fuel (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Fuel)
Test Fuel (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Test Fuel)
Preserve Fuel (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Preserve Fuel)
Purify Fuel (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Purify Fuel)
Create Fuel (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Fuel)
Essential Fuel (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Essential Fuel)
Stop Power (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Stop Power)
Lend Power (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lend Power)
Propel (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Propel)
Conduct Power (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Conduct Power)
Steal Power (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steal Power)
Draw Power (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Draw Power)
Magnetic Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Magnetic Vision)
Radio Hearing (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Radio Hearing)
Spectrum Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spectrum Vision)

//  Radiation Spells
See Radiation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:See Radiation)
Seek Radiation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Radiation)
Irradiate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Irradiate)
Extinguish Radiation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Extinguish Radiation)
Resist Radiation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Radiation)
Cure Radiation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Cure Radiation)
Radiation Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Radiation Jet)
Breathe Radiation (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Breathe Radiation)

//  Metal & Plastic Spells
Seek Plastic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Plastic)
Identify Metal (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Identify Metal)
Identify Plastic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Identify Plastic)
Shape Metal (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shape Metal)
Shape Plastic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shape Plastic)
Metal Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Metal Vision)
Plastic Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Plastic Vision)
Body of Metal (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Metal)
Body of Plastic (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Plastic)

Seek Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Water)
Seek Coastline (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Seek Coastline)
Purify Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Purify Water)
Create Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Water)
Destroy Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Destroy Water)
Icy Weapon (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Icy Weapon)
Shape Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shape Water)
Umbrella (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Umbrella)
Body of Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Water)
Foul Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Foul Water)
Freeze (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Freeze)
Ice Slick (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ice Slick)
Ice Sphere (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ice Sphere)
Icy Missiles (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Icy Missiles)
Melt Ice (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Melt Ice)
Resist Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Water)
Snow Shoes (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Snow Shoes)
Walk on Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Walk on Water)
Water Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Water Jet)
Water Vision (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Water Vision)
Whirlpool (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Whirlpool)
Coolness (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Coolness)
Create Ice (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Ice)
Dehydrate (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dehydrate)
Ice Dagger (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ice Dagger)
Icy Touch (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Icy Touch)
Walk Through Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Walk Through Water)
Dry Spring (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Dry Spring)
Essential Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Essential Water)
Frostbite (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Frostbite)
Snow Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Snow Jet)
Breathe Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Breathe Water)
Body of Ice (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Ice)
Boil Water (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Boil Water)
Condense Steam (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Condense Steam)
Create Acid (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Acid)
Create Spring (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Spring)
Flesh to Ice (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Flesh to Ice)
Create Steam (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Steam)
Resist Acid (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Acid)
Geyser (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Geyser)
Rain of Acid (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rain of Acid)
Steam Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Steam Jet)
Acid Ball (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Acid Ball)
Acid Jet (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Acid Jet)
Rain of Ice Daggers (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rain of Ice Daggers)
Icy Breath (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Icy Breath)
Breathe Steam (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Breathe Steam)
Spit Acid (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spit Acid)
Essential Acid (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Essential Acid)
Summon Water Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Summon Water Elemental)
Control Water Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Control Water Elemental)
Create Water Elemental (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Create Water Elemental)

Frost (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Frost)
Fog (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Fog)
Predict Weather (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Predict Weather)
Waves (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Waves)
Clouds (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Clouds)
Current (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Current)
Tide (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Tide)
Wind (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wind)
Rain (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Rain)
Snow (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Snow)
Hail (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Hail)
Warm (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Warm)
Cool (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Cool)
Storm (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Storm)
Resist Lightning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Resist Lightning)
Lightning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lightning)
Explosive Lightning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Explosive Lightning)
Lightning Whip (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lightning Whip)
Shocking Touch (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Shocking Touch)
Spark Cloud (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spark Cloud)
Spark Storm (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Spark Storm)
Wall of Lightning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Wall of Lightning)
Ball of Lightning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Ball of Lightning)
Lightning Stare (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lightning Stare)
Body of Lightning (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Body of Lightning)
Lightning Armor (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lightning Armor)
Lightning Weapon (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lightning Weapon)
Lightning Missiles (Fixed), +0, gives(=+"owner::ownerlevel" to SP:Lightning Missiles)

*******************************************************************************************************************
//  MODIFIERS
//  Equipment Modifiers
*******************************************************************************************************************
<Equipment>
Composition: Orichalcum Armor, *10/*30, upto(2), levelnames(x1/3 weight,), page(F23), shortname(Orichalcum),_
	gives(=*@if(me::level = 1 THEN 1/3 ELSE 1) to owner::baseweight, =*@if(me::level = 1 THEN 1 ELSE 3) to owner::DR)

<Sword Class Quality>
Composition: Orichalcum Weapon, *30, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 2), ("imp", 2) ) to owner::damage$ listAs "+2 to cut/imp damage from Orichalcum", -2 to owner::break), page(F23), group(Sword Class Quality), shortname(Orichalcum)

<Cutting Class Quality>
Composition: Orichalcum Weapon, *30, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Orichalcum", -2 to owner::break), page(F23), group(Cutting Class Quality), shortname(Orichalcum)

<Crushing/Imp Class Quality>
Composition: Orichalcum Weapon, *30, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Orichalcum", -2 to owner::break), page(F23), group(Crushing/Imp Class Quality), shortname(Orichalcum)

********************************************************************************************************\[STOP]
[SPELLS]
*******************************************************************************************************\[START]

<Air:Ai>
Rain, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Clouds), page(M195, F168), mods(Spells), cat(Weather, Air, Water), shortcat(We, Ai, Wa), prereqcount(5), magery(0), class(Area), time(1 min.), duration(1 hr.), castingcost(1/10/S#), description(Prereq Count: 5 Prerequisites: Clouds)

<Communication & Empathy:C>
Mind-Sending, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Mind-Reading), page(M47, F169), mods(Spells), cat(Communication & Empathy), shortcat(C), prereqcount(4), magery(0), class(Regular), time(4 sec.), duration(1 min.), castingcost(4/4), description(Prereq Count: 4 Prerequisites: Mind-Reading)

<Earth:Ea>
Shape Stone, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Shape Earth, 3 Earth), page(F169), mods(Spells), cat(Earth), shortcat(Ea), prereqcount(5), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(4/cy/H#), description(Prereq Count: 5 Prerequisites: Shape Earth, 3 Earth)
Walk Through Earth, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(4 Earth), page(M52, F169), mods(Spells), cat(Earth), shortcat(Ea), prereqcount(4), magery(0), class(Regular), time(1 sec.), duration(10 sec.), castingcost(3/3#), description(Prereq Count: 4 Prerequisites: 4 Earth)
Purify Earth, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Create Earth, Plant Growth), page(M54), mods(Spells), cat(Earth, Plant), shortcat(Ea, Pl), prereqcount(8), magery(1), class(Area), time(30 sec.), duration(Perm.), castingcost(2#), description(Prereq Count: 8 Prerequisites: Create Earth, Plant Growth)

<Enchantment:En>
Temporary Enchantment, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Enchant), page(M56, F23), mods(Spells), cat(Enchantment), shortcat(En), prereqcount(11), magery(2), class(Enchantment), time(-), duration(Indef.#), castingcost(Varies), description(Prereq Count: 11 Prerequisites: Enchant)

<Food:Fo>
Test Food, type(IQ/H), CountAsNeeds(Magical), ident(Magical), page(M77, F169), mods(Spells), cat(Food), shortcat(Fo), prereqcount(0), magery(0), class(Information), time(1 sec.), duration(Instant), castingcost(1 to 3#), description(Prereq Count: 0)

<Healing:H>
Stop Bleeding, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Lend Vitality), page(M91, F169), mods(Spells), cat(Healing), shortcat(H), prereqcount(2), magery(1), class(Regular), time(1 sec.), duration(Perm.), castingcost(1 or 10), description(Prereq Count: 2 Prerequisites: Lend Vitality)
Cure Disease, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Relieve Sickness, Major Healing), page(M91, F170), mods(Spells), cat(Healing), shortcat(H), prereqcount(5), magery(1), class(Regular), time(10 min.), duration(Instant), castingcost(4), description(Prereq Count: 5 Prerequisites: Relieve Sickness, Major Healing)

<Illusion & Creation:I>
Simple Illusion, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(ST:IQ = 11), page(M95, F170), mods(Spells), cat(Illusion & Creation), shortcat(I), prereqcount(0), magery(0), class(Area), time(1 sec.), duration(1 min.), castingcost(1/H), taboo(DI:Blindness), description(Prereq Count: 0 Prerequisites: IQ = 11)
Complex Illusion, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Sound, Simple Illusion), page(M96, F170), mods(Spells), cat(Illusion & Creation), shortcat(I), prereqcount(2), magery(0), class(Area), time(1 sec.), duration(1 min.), castingcost(2/H ), description(Prereq Count: 2 Prerequisites: Sound, Simple Illusion)
Illusion Shell, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Simple Illusion), page(M96, F170), mods(Spells), cat(Illusion & Creation), shortcat(I), prereqcount(1), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(1 or 2/H), description(Prereq Count: 1 Prerequisites: Simple Illusion)
Illusion Disguise, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Simple Illusion), page(M96, F170), mods(Spells), cat(Illusion & Creation), shortcat(I), prereqcount(1), magery(0), class(Regular), time(1 sec.), duration(Varies ), castingcost(3), description(Prereq Count: 1 Prerequisites: Simple Illusion)

<Light & Darkness:L>
Hide, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs((Blur | Forgetfulness)), page(M113, F170), mods(Spells), cat(Light & Darkness), shortcat(L), prereqcount(2), magery(1), class(Regular), time(5 sec.), duration(1 hr.), castingcost(1 to 5/S), description(Prereq Count: 2 Prerequisites: Blur or Forgetfulness)
Night Vision, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs((Keen Vision | 5 Light & Darkness)), page(M111, F170), mods(Spells), cat(Light & Darkness), shortcat(L), prereqcount(1), magery(0), class(Regular), time(1 sec.), duration(1 min.), castingcost(3/1), description(Prereq Count: 1 Prerequisites: Keen Vision or 5 Light & Darkness)
Invisibility, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(6 Light & Darkness, Blur), page(M114, F170), mods(Spells), cat(Light & Darkness), shortcat(L), prereqcount(6), magery(0), class(Regular), time(3 sec.), duration(1 min.), castingcost(5/3), description(Prereq Count: 6 Prerequisites: 6 Light & Darkness, Blur)

<Meta-Spells:Me>
Scryguard, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(AD:Magery 0, (AD:Magery = 1, ST:Magery = 1 | ST:Magery Meta-Spells = 1)), page(M121, F170), mods(Spells), cat(Meta-Spells), shortcat(Me), prereqcount(0), magery(1), class(Regular), time(5 sec.), duration(10 hrs.), castingcost(3/1), description(Prereq Count: 0 Prerequisites: Magery 1)

<Mind Control:Mi>
Fear, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs((Sense Emotion | AD:Empathy)), page(M134, F171), mods(Spells), cat(Mind Control), shortcat(Mi), prereqcount(0), magery(0), class(Area/R-Will), time(1 sec.), duration(10 min.), castingcost(1), description(Prereq Count: 0 Prerequisites: Sense Emotion or AD:Empathy)

<Movement:Mo>
Quick March, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(AD:Magery 0, (AD:Magery = 1, ST:Magery = 1 | ST:Magery Movement = 1), Haste), page(M144, F171), mods(Spells), cat(Movement), shortcat(Mo), prereqcount(1), magery(1), class(Regular), time(1 min.), duration(1 day's march), castingcost(4#), description(Prereq Count: 1 Prerequisites: Magery 1, Haste)
Lighten Burden, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Apportation), page(M143, F171), mods(Spells), cat(Movement), shortcat(Mo), prereqcount(1), magery(1), class(Regular), time(3 sec.), duration(10 min.), castingcost(3 or 5/H#), description(Prereq Count: 1 Prerequisites: Apportation)
Levitation, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Apportation), page(M143, F171), mods(Spells), cat(Movement), shortcat(Mo), prereqcount(1), magery(1), class(Regular/R-ST or Will), time(2 sec.), duration(1 min.), castingcost(1 per 80 lbs./H#), description(Prereq Count: 1 Prerequisites: Apportation)
Flight, type(IQ/VH), CountAsNeeds(Magical), ident(Magical), needs(AD:Magery 0, (AD:Magery = 2, ST:Magery = 2 | ST:Magery Movement = 2), Levitation), page(M145, F171), mods(Spells), cat(Movement), shortcat(Mo), prereqcount(2), magery(2), class(Regular), time(2 sec.), duration(1 min.), castingcost(5/3), description(Prereq Count: 2 Prerequisites: Magery 2, Levitation)
Teleport, type(IQ/VH), CountAsNeeds(Magical), ident(Magical), needs((ST:IQ = 13, 10 Colleges | Hawk Flight)), page(M147, F171), mods(Spells), cat(Movement, Gate), shortcat(Mo, G), prereqcount(4), magery(2), class(Special), time(1 sec.), duration(Instant), castingcost(Varies), description(Prereq Count: 4 Prerequisites: IQ = 13, 1 Spell from 10 Colleges or Hawk Flight)

<Plant:Pl>
Seek Plant, type(IQ/H), CountAsNeeds(Magical), ident(Magical), page(M161, F171), mods(Spells), cat(Plant), shortcat(Pl), prereqcount(0), magery(0), class(Information), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 0)
Identify Plant, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Seek Plant), page(M161, F171), mods(Spells), cat(Plant), shortcat(Pl), prereqcount(1), magery(0), class(Information), time(1 sec.), duration(Instant), castingcost(2), description(Prereq Count: 1 Prerequisites: Seek Plant)
Heal Plant, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Identify Plant), page(M161, F171), mods(Spells), cat(Plant), shortcat(Pl), prereqcount(2), magery(0), class(Area), time(1 min.), duration(Perm.), castingcost(3), description(Prereq Count: 2 Prerequisites: Identify Plant)
Bless Plants, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Heal Plant), page(M161, F172), mods(Spells), cat(Plant), shortcat(Pl), prereqcount(3), magery(0), class(Area), time(5 min.), duration(1 crop/ season), castingcost(1), description(Prereq Count: 3 Prerequisites: Heal Plant)

<Sound:S>
Sound, type(IQ/H), CountAsNeeds(Magical), ident(Magical), page(M171, F172), mods(Spells), cat(Sound), shortcat(S), prereqcount(0), magery(0), class(Regular), time(1 sec.), duration(Varies ), castingcost(Varies ), description(Prereq Count: 0)
Silence, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(Sound), page(M171, F172), mods(Spells), cat(Sound), shortcat(S), prereqcount(1), magery(0), class(Area), time(1 sec.), duration(1 min.), castingcost(2/1), description(Prereq Count: 1 Prerequisites: Sound)

********************************************************************************************************\[STOP]
[EQUIPMENT]
*******************************************************************************************************\[START]
<Fantasy, _Melee Weapons, Fantasy - Melee Weapons, _Melee Weapons - Fantasy>
Gaff, techlvl(1), lc(4), basecost(100), baseweight(7), page(F141), mods(Equipment, Melee Quality, Cutting Class Quality), damage(thr-1), damtype(cut), reach(2,3*), parry(0U), minst(10†), notes([1]), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4), description(TL:1 LC:4, Dam:thr-1 cut Reach:2,3* Parry:0U ST:10† Skill: Polearm Notes:[1] Primarily used by seamen; a large hook that can catch hold of an enemy vessel, a large fish, or a human foe and pull it closer - or climb up it if it's too heavy to move. A Quick Contest of ST determines which of two animate opponents is pulled toward the other. The hook also inflicts 1 point/second of cutting damage while pulling the target resisted by DR; when this equals the target's HP or crippling damage for a limb, it has cut through the target, freeing it to flee or fall.),_
	itemnotes(_
				{See description (Fantasy, p. 141).})
Fire Lance, techlvl(3), break(0), lc(4), basecost(50), baseweight(5), page(F141), mods(Equipment, Melee Quality, Cutting Class Quality), damage(1d-1), damtype(burn), reach(3-5), parry(-1U), minst(9†), notes([2,3]), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4), description(TL:3 LC:4, Dam:1d-1 burn Reach:3-5 Parry:-1U ST:9† Skill: Polearm Notes:[2,3] A rocket tied to the end of a pole, with the exhaust used as a weapon; divide damage by 4 for each additional 2 yards of range. Some lances have pieces of iron embed in the powder, these are not effective missiles but add 2 pi damage at the normal reach.),_
	itemnotes(_
				{A rocket tied to the end of a pole, with the exhaust used as a weapon; divide damage by 4 for each additional 2 yards of range.},_
				{Some fire lances have pieces of iron embedded in the powder; these are not effective missiles but add 2 pi to damage at the normal reach.}_
			)
Trident, techlvl(2), break(0), lc(4), basecost(40), baseweight(5), page(F141), mods(Equipment, Melee Quality, Crushing/Imp Class Quality),_
	itemnotes(_
				{The repeating crossbow has a magazine for its bolts; it requires cocking between shots (2 seconds) but does not need reloading until the magazine is empty.}_
			),_
	newmode(1H, damage(thr+3), damtype((0.5) imp), reach(1), parry(0U), minst(10), notes(), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),_
	newmode(2H, damage(thr+4), damtype((0.5) imp), reach(1,2*), parry(0), minst(10†), notes(), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)), description(TL:2 LC:4 \par [Mode:one-handed Dam:thr+3 (0.5) imp Reach:1 Parry:0U ST:10 Skill: Spear] \par [Mode:two-handed Dam:thr+4 (0.5) imp Reach:1,2* Parry:0 ST:10† Skill: Spear])
	
<Fantasy, _Muscle-Powered Ranged Weapons, _Muscle-Powered Ranged Weapons - Fantasy, Fantasy - Muscle-Powered Ranged Weapons>
Repeating Crossbow (ST%choice%), weaponst(%choicelist%), basecost(500), baseweight(10.6),_
	itemnotes(_
				{The repeating crossbow has a magazine of bolts; it requires cocking between shots (2 seconds) but does not need reloading until the magazine is empty.}_
			),_
	mods(Equipment, Bow Quality),_
	damage(@thr(me::weaponst)+2), damtype(imp), lc(4), techlvl(2), acc(4), calcrange(yes), rangehalfdam(me::weaponst*15), rangemax(me::weaponst*20), rof(1), shots(10(20)), minst(9), bulk(-5), skillused(SK:Crossbow, ST:DX-4), page(F141), notes([1]),
	description(TL:2 LC:4, Dam:thr+2 imp Acc:4 Range:ST*15/ST*20 RoF:1 Shots:10(20) ST:9 Bulk:-5 Skill: Crossbow Notes: [1] The repeating crossbow has a magazine of bolts; it requires cocking between shots (2 seconds) but does not need reloading until the magazine is empty.),
	x(#choice("  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100")), noresync(yes)
Woomera, basecost(40), baseweight(2), damage(), damtype(), lc(4), techlvl(0), acc(), rangehalfdam(), rangemax(), rof(), shots(), minst(), bulk(), skillused(SK:Spear Thrower, ST:DX-4, SK:Thrown Weapon (Spear)-4), page(F141), notes([2]), description(TL:0 LC:4, Dam:  Acc: Range: RoF: Shots: ST: Bulk: Skill: Spear Thrower Notes: [2] The Woomera is a true Spear thrower, larger than the atlatl, which is a dart or javelin thrower. It requires two hands to ready, but only one hand to attack.), mods(Equipment, Bow Quality),_
	itemnotes(_
				{The woomera is a true spear thrower, larger than the atlatl, which is a dart or javelin thrower. It requires two hands to ready, but only one hand to attack.}_
			)
Spear, techlvl(0), break(0), lc(4), basecost(40), baseweight(4), page(B273, B276, F141), cat(_Muscle-Powered Ranged Weapons), mods(Equipment, Melee Quality, Crushing/Imp Class Quality), calcrange(yes),_
	itemnotes(_
				{Can be thrown.}|_
				{}|_
				{}|_
				{}_
			),_
	newmode(1H Thrust, damage(thr+2), damtype(imp), reach(1*), parry(0), minst(9), notes([1]), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),_
	newmode(2H Thrust, damage(thr+3), damtype(imp), reach(1,2*), parry(0), minst(9†), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),_
	newmode(Thrown, damage(thr+3), damtype(imp), acc(2), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), minst(9), bulk(-3), shots(T(1)), skillused(SK:Thrown Weapon (Spear), ST:DX-4, SK:Spear Thrower-4, SK:Thrown Weapon (Harpoon)-2)),_
	newmode(Woomera, damage(sw+3), damtype(imp), acc(2), rangehalfdam(ST*1.5), rangemax(ST*2), rof(1), shots(1(1)), minst(7), bulk(-6), skillused(SK:Spear Thrower, ST:DX-4, SK:Thrown Weapon (Spear)-4)),_
	description(TL:0 LC:4 \par [Mode: thrown Dam:thr+3 imp Acc:2 Range:ST*1/ST*1.5 RoF:1 Shots:T(1) ST:9 Bulk:-3] \par [Mode:one-handed thrust Dam:thr+2 imp Reach:1* Parry:0 ST:9 Skill:Spear Notes: [1] Can be thrown. See Muscle Powered Ranged Weapon Table (p. 275)] \par [Mode:two-handed thrust Dam:thr+3 imp Reach:1,2* Parry:0 ST:9† Skill:Spear Notes: Requires two hands.], [Mode Woomera Dam:sw+3 imp Acc:2 Range:ST*1.5/ST*2 RoF:1 Shots:1(1) ST:7 Bulk:-6 Skill: Spear Thrower])
Discus, basecost(50), baseweight(2), mode(thrown), damage(thr+2), damtype(cr), lc(4), techlvl(2), acc(2), calcrange(yes), rangehalfdam(ST*4), rangemax(ST*6), rof(1), shots(1), minst(), bulk(-3), skillused(SK:Thrown Weapon (Disc), ST:DX-4), page(F141), description(TL:2 LC:4, Dam:thr+2 cr Acc:2 Range:ST*4/ST*6 RoF:1 Shots:1 ST: Bulk:-3 Skill: Thrown Weapon (Disc)), mods(Equipment, Crushing/Imp Class Quality)
Chakram, basecost(50), baseweight(2), mode(thrown), damage(thr+1), damtype(cut), lc(4), techlvl(2), acc(1), calcrange(yes), rangehalfdam(ST*1.5), rangemax(ST*2.6), rof(1), shots(1), minst(), bulk(-2), skillused(SK:Thrown Weapon (Disc), ST:DX-4), page(F141), description(TL:2 LC:4, Dam:thr+1 cut Acc:1 Range:ST*1.5/ST*2.6 RoF:1 Shots:1 ST: Bulk:-2 Skill: Thrown Weapon (Disc)), mods(Equipment, Cutting Class Quality)

<Fantasy, Fantasy - Vehicles - Ground, _Vehicles>
Palanquin, basecost(160), techlvl(1), description(TL:1 Skill:Lifting ST/HP:28† Hnd/SR:0/1 HT:12c Move:2/2 Lwt:0.145t Load:0.1t SM:+1 Occ:0+1 DR:1 Range:F Locations: 4A Notes:[1] Draft animals are men), page(F141), mods(Equipment)
Oxcart, basecost(250), techlvl(1), description(TL:1 Skill:Teamster ST/HP:33† Hnd/SR:-3/3 HT:12c Move:2/2* Lwt:0.6t Load:0.3t SM:+1 Occ:0 DR:1 Range:F Locations: 2A, O, 2W Notes:[1] Draft animals are oxen), page(F141), mods(Equipment)
Carroballista, basecost(7000), techlvl(2), description(TL:2 Skill:Teamster ST/HP:30† Hnd/SR:-3/2 HT:10c Move:1/4* Lwt:0.256 Load:0.05t SM:+1 Occ:0 DR:4 Range:F Locations: 2A, 3W Notes:[1] Draft animals are mules), page(F141), mods(Equipment)

<Fantasy, Fantasy - Vehicles - Watercraft, _Vehicles>
Fishing boat (10'), basecost(1200), techlvl(3), description(TL:3 Skill:Boating/TL (Sailboat) ST/HP:100† Hnd/SR:0/2 HT:12c Move:0.2/4 Lwt:3.2t Load:2.2t SM:+2 Occ:2 DR:2 Range:-- Locations: M, ODraft:2'), page(F142), mods(Equipment)
Elven sailboat, basecost(8100), techlvl(3+1), description(TL:3+1 Skill:Boating/TL (Sailboat) ST/HP:125† Hnd/SR:+2/1 HT:12c Move:1.5/8 Lwt:1.9t Load:1.2t SM:+2 Occ:3 DR:4 Range:-- Locations: M, ODraft:1.25'), page(F142), mods(Equipment)
Elven riverboat, basecost(6300), techlvl(1+1), description(TL:1+1 Skill:Boating/TL (Unpowered) ST/HP:70† Hnd/SR:+2/1 HT:13c Move:0.05/3 Lwt:0.425t Load:0.3t SM:+2 Occ:2 DR:1 Range:F Locations: ODraft:1' Notes:[1] Propelled by paddling, with two paddlers.), page(F142), mods(Equipment)
Rowboat, basecost(1500), techlvl(3), description(TL:3 Skill:Boating/TL (Unpowered) ST/HP:90† Hnd/SR:0/3 HT:12c Move:0.1/3 Lwt:1.65t Load:0.95t SM:+2 Occ:6+1 DR:2 Range:F Locations: ODraft:1' Notes:[2] Using oars, with six rowers, three per side.), page(F142), mods(Equipment)
Eioseres (50'), basecost(5900), techlvl(1), description(TL:1 Skill:Shiphandling/TL (Ship) ST/HP:130† Hnd/SR:-3/2 HT:11c Move:0.05/4 Lwt:5t Load:2.8t SM:+6 Occ:22 DR:3 Range:F Locations: M, ODraft:3' Notes:[3]Using oars, with 20 rowers. Under sail, Range -, Move 0.2/7 in fair wind.), page(F142), mods(Equipment)
Liburnian (60'), basecost(13400), techlvl(2), description(TL:2 Skill:Shiphandling/TL (Ship) ST/HP:180† Hnd/SR:-4/3 HT:11c Move:0.1/4 Lwt:13t Load:7t SM:+6 Occ:60 DR:5 Range:F Locations: M, ODraft:2' Notes:[4] Using oars, with 48 rowers in two rows. Under sail, Range -, Move 0.5/6 in fair wind.), page(F142), mods(Equipment)
Trireme (120'), basecost(56700), techlvl(2), description(TL:2 Skill:Shiphandling/TL (Ship) ST/HP:290† Hnd/SR:-3/3 HT:12c Move:0.1/5 Lwt:27t Load:21t SM:+8 Occ:186+14 DR:10/5 Range:F Locations: M, O, SuDraft:3' Notes:[5] Using oars, with 170 rowers in three rows. Under sail, Range -, Move 0.3/6 in fair wind. Has a bronze ram (+1/die collision damage).), page(F142), mods(Equipment)
Crusader ship (118'), basecost(106000), techlvl(3), description(TL:3 Skill:Shiphandling/TL (Ship) ST/HP:450 Hnd/SR:-4/4 HT:11c Move:0.1/5 Lwt:600t Load:510t SM:+8 Occ:72+50 DR:5 Range:-- Locations: M, O, SuDraft:7' Notes:[6] Using a single square-rigged sail. With all oars manned (15 oars on each side, two men per oar) Range F, Move 0.04/1.), page(F142), mods(Equipment)
Dhow (90'), basecost(27000), techlvl(3), description(TL:3 Skill:Shiphandling/TL (Ship) ST/HP:235† Hnd/SR:-3/2 HT:11c Move:0.2/7 Lwt:128t Load:94t SM:+8 Occ:12 DR:2 Range:-- Locations: M, ODraft:5' Notes:[7] Using a single, very large lateen sail.), page(F142), mods(Equipment)
Drakkar (150'), basecost(67000), techlvl(3), description(TL:3 Skill:Shiphandling/TL (Ship) ST/HP:330† Hnd/SR:-3/3 HT:12c Move:0.2/5 Lwt:60t Load:24t SM:+8 Occ:70+70 DR:10 Range:-- Locations: M, ODraft:4' Notes:[8] Using a single square-rigged sail. With all oars manned (30 men on each side) Range F, Move 0.25/3.), page(F142), mods(Equipment)
Elven sailing ship (90'), basecost(108000), techlvl(3+1), description(TL:3+1 Skill:Shiphandling/TL (Ship) ST/HP:340† Hnd/SR:-2/4 HT:13c Move:0.5/9 Lwt:42t Load:27t SM:+7 Occ:14 DR:10 Range:-- Locations: 2M, O, SuDraft:4' Notes:[9] Using sails, in an advanced Bermuda and jib rig. Armed with scorpion (see p. B268) mounted on a platform at the bow.), page(F142), mods(Equipment)
Pirate ship (75'), basecost(110000), techlvl(4), description(TL:4 Skill:Shiphandling/TL (Ship) ST/HP:370† Hnd/SR:-3/4 HT:12c Move:0.03/3 Lwt:64t Load:14t SM:+7 Occ:43 DR:10/5 Range:-- Locations: M, O, SuDraft:4' Notes:[10] Using sails, in a gaffsail and jib rig. Carries six 9-pound cannon per side (see Vehicular Weapons, p. F144).), page(F142), mods(Equipment)
Spanish galleon (150'), basecost(630000), techlvl(4), description(TL:4 Skill:Shiphandling/TL (Ship) ST/HP:680† Hnd/SR:-3/5 HT:12c Move:0.2/7 Lwt:930t Load:620t SM:+8 Occ:80+120 DR:15 Range:-- Locations: 3M, 2SuDraft:9' Notes:[11]Using sails, in a full-rigged configuration. Armed with two 24-lb. Guns, two 18-lb. Guns, five 10-lb. Guns, and five 7-lb. Guns on each side; typically carries 12 rounds of ammunition per gun (a total of 24 broadsides).), page(F142), mods(Equipment)

<Fantasy, Fantasy - Vehicles - Aircraft, _Vehicles>
Glider, basecost(850), techlvl(2), description(TL:2 Skill:Piloting/TL (Glider) ST/HP:20† Hnd/SR:0/2 HT:10c Move:5/20 Lwt:0.16t Load:0.1t SM:+4 Occ:1 DR:1 Range:-- Locations: WiStall:5 Notes:[1,2] Must descent 1/8 yard/turn (Enhanced Move 3) to maintain speed. For calculation of turning radius, Basic Move is 10. Can use thermal updrafts to ascend.), page(F143), mods(Equipment)
Ornithopter, basecost(33500), techlvl(4+1), description(TL:4+1 Skill:Piloting/TL (Light Airplane) ST/HP:40 Hnd/SR:0/2 HT:9c Move:1/17 Lwt:0.65t Load:0.1t SM:+4 Occ:1 DR:1 Range:17 Locations: 3W, WiStall:5 Notes:[3] Powered by a clockwork engine made of high-strength spring steel. Also has a ground move on unpowered small wheels, with thrust from flapping its wings: Move 1/5, Hnd 0/1.), page(F143), mods(Equipment)
Hot Air Balloon, basecost(75), techlvl(1), description(TL:1 Skill:Piloting/TL (Lighter-than-Air) ST/HP:27† Hnd/SR:-/3 HT:11 Move:0/0 Lwt:0.35t Load:0.2t SM:+9 Occ:1+1 DR:0/1 Range:12 Locations: GoStall:0 Notes:[4] A hot air balloon loses lift as it cools; this low-tech version carries no burner or fuel, but must land and reinflate after each day's flight.), page(F143), mods(Equipment)
Winged Harness, basecost(2500), techlvl(1+1), description(TL:1+1 Skill:Piloting/TL (Low-G Wings) ST/HP:12† Hnd/SR:-1/1 HT:10c Move:1/5 Lwt:0.115t Load:0.1t SM:+4 Occ:1 DR:1 Range:F Locations: O, WiStall:5 Notes:[5] Despite the name of the skill, the winged harness is designed for use in 1 G.), page(F143), mods(Equipment)

********************************************************************************************************\[STOP]
[TEMPLATES]
*******************************************************************************************************\[START]
<Racial Templates - Fantasy>
Centaur (Fantasy), displaycost(90), cost(5),_
	cat(Racial Templates),_
	description(A centaur is a six-limbed being with a head, arms, and torso of a man emerging from the shoulders of a horse. An average centaur weighs about 1,200 lbs. And is 3 hexes long.),_
	page(F105),_
	race(Centaur),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		-1 to ST:IQ,_
		+2 to ST:HT,_
		+1 to ST:Perception,_
		+1 to ST:Size Modifier _
		),_
	adds(_
			AD:Claws (Hooves),_
			AD:Enhanced Move (Ground) = 2,_
			AD:Extra Legs (4 Legs),_
			AD:Fearlessness,_
			DI:Impulsiveness,_
			DI:Overconfidence _
		),_
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=8,_
			"QU:Compulsive Carousing, -1, cat(Mental), noresync(yes)",_
			"QU:Finds the trappings of domesticated horses particularly odious, -1, cat(Mental), noresync(yes)" _
		)
Devilfish (Fantasy), displaycost(70), cost(10),_
	cat(Racial Templates),_
	description(Devilfish are creatures of the ocean, favoring reef environments though they can leave the water for a short time when necessary. Despite their name, they are neither devils nor fish, but intelligent cephalopods resembling large octopuses. They communicate by skin pattern changes and use those same changes to cast spells.),_
	page(F105),_
	race(Devilfish),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		-1 to ST:DX,_
		+1 to ST:IQ,_
		+1 to ST:HT,_
		+1 to ST:Size Modifier _
		),_
	adds(_
			AD:Absolute Direction _
			with "Only by Day, -20%, cat(_General)",_
			AD:Chameleon = 2,_
			AD:Constriction Attack,_
			AD:Doesn't Breathe _
			with "Oxygen Storage: 25x (When Out of Water), -50%, cat(Doesn't Breathe)" _
			and "Gills (When Underwater), +0%, cat(Doesn't Breathe)",_
			AD:Enhanced Move (Water) = 2_
			with "Costs 1 FP/Min, -5%, cat(_General)",_
			AD:Extra Arms = 6 _
			with "Extra-Flexible, +50%, cat(Extra Arms)" _
			and "No Physical Attack, -50%, cat(Extra Arms)",_
			AD:Extra-Flexible (2 Arms),_
			DI:No Physical Attack (2 Arms),_
			AD:Double-Jointed,_
			AD:Injury Tolerance _
			with "No Neck, +5, cat(Injury Tolerance)",_
			AD:Magery 0,_
			AD:Night Vision = 3,_
			AD:Sensitive Touch,_
			AD:Teeth (Sharp Beak),_
			DI:Mute,_
			DI:Cold-Blooded,_
			DI:Colorblindness,_
			DI:Deafness,_
			DI:Innumerate,_
			DI:Invertebrate,_
			DI:Selfish _
			with "You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), cat(Self-Control)",_
			DI:No Legs (Semi-Aquatic),_
			DI:Short Lifespan _
		),_
	creates(_
		"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=1,_
		"QU:Dislike of fire, -1, cat(Mental), noresync(yes)" _
		),_
	features(Cannot tell shape of objects by touch)
Devilfish - Abyssal (Fantasy), displaycost(70), cost(15),_
	cat(Racial Templates),_
	description(Some devilfish join the Abyssals, a secretive cult of the deeper oceans, lured by the promise of secret magical power. Abyssals have a Dread of sunlight and cannot come within three yards of the ocean's surface by day.),_
	page(F105),_
	race(Devilfish),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		-1 to ST:DX,_
		+1 to ST:IQ,_
		+1 to ST:HT,_
		+1 to ST:Will,_
		+1 to ST:Size Modifier _
		),_
	adds(_
			AD:Absolute Direction _
			with "Only by Day, -20%, cat(_General)",_
			AD:Chameleon = 2,_
			AD:Constriction Attack,_
			AD:Doesn't Breathe _
			with "Oxygen Storage: 25x (When Out of Water), -50%, cat(Doesn't Breathe)" _
			and "Gills (When Underwater), +0%, cat(Doesn't Breathe)",_
			AD:Enhanced Move (Water) = 2_
			with "Costs 1 FP/Min, -5%, cat(_General)",_
			AD:Extra Arms = 6 _
			with "Extra-Flexible, +50%, cat(Extra Arms)" _
			and "No Wounding, -50%, cat(Extra Arms)" _
			and "Modifiers apply to normal arms, +0, cat(Extra Arms)",_
			AD:Double-Jointed,_
			AD:Injury Tolerance _
			with "No Neck, +5, cat(Injury Tolerance)",_
			AD:Magery 0,_
			AD:Sensitive Touch,_
			AD:Teeth (Sharp Beak),_
			AD:Dark Vision,_
			AD:Power Investiture,_
			AD:Pressure Support = 2,_
			DI:Mute,_
			DI:Cold-Blooded,_
			DI:Colorblindness,_
			DI:Deafness,_
			DI:Innumerate,_
			DI:Invertebrate,_
			DI:Selfish _
			with "You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), cat(Self-Control)",_
			DI:No Legs (Semi-Aquatic),_
			DI:Short Lifespan,_
			DI:Curious,_
			DI:Discipline of Faith (Asceticism),_
			DI:Dread (Sunlight) _
			with "Larger Radius (3 yards), -2, cat(Dread)",_
			DI:Fanaticism _
		),_
	creates(_
		"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=1,_
		"QU:Dislike of fire, -1, cat(Mental), noresync(yes)" _
		),_
	features(Cannot tell shape of objects by touch)
Superior Horse (Fantasy), displaycost(75), cost(-20),_
	cat(Racial Templates),_
	description(Gods and legendary heroes often have extraordinarily gifted horses, such as Odin's Sleipnir, Alexander the Great's Bucephalus, and Gandalf's Shadowfax. Such a horse might have this template.),_
	page(F106),_
	race(Superior Horse),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		-1 to ST:DX,_
		-5 to ST:IQ,_
		+1 to ST:HT,_
		+6 to ST:Will,_
		+7 to ST:Perception,_
		+5 to ST:Basic Move,_
		+1 to ST:Size Modifier _
		),_
	adds(_
			AD:Racial Skill Point Bonus ([Skill]) = 2 respond "Brawling",_
			AD:Racial Skill Point Bonus ([Skill]) = 16 respond "Mount",_
			AD:Claws (Hooves),_
			AD:Combat Reflexes,_
			AD:Empathy,_
			AD:Enhanced Move (Ground) = 2,_
			AD:Fit,_
			AD:Higher Purpose (Devotion to Rider),_
			AD:Peripheral Vision,_
			DI:Cannot Speak,_
			DI:Social Stigma (Valuable Property),_
			QU:Dull,_
			SK:Brawling==0pts#DoNotOwn,_
			SK:Mount==0pts#DoNotOwn,_
			PA:Quadruped _
		),_
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes) | No Fine Manipulators, -40%, group(No Fine Manipulators Stat), formula(-@if(ST:No Fine Manipulators >0 then 40 else 0)), forceformula(yes))"=12 _
		)
Djinni (Fantasy), displaycost(245), cost(107),_
	cat(Racial Templates),_
	description(Arabic legends say that Allah made men from earth, but djinn from smokeless fire. The natural form of a djinni is a cloud of vapor, which can be either visible or invisible. Djinn can also materialize in the shape of tall, powerfully built humans (determine height and weight according to the rules for Gigantism, p. B15). When dematerialized they can only speak in peculiar breathy whispers.),_
	page(F107),_
	race(Djinni),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+2 to ST:DX,_
		+2 to ST:IQ,_
		+2 to ST:HT,_
		+5 to ST:Hit Points,_
		+1 to ST:Size Modifier _
		),_
	adds(_
			AD:Alternate Form  respond "Materialized Djinni",_
			AD:Doesn't Eat or Drink,_
			AD:Invisibility _
			with "Can Carry Objects (No Encumbrance), +10%, cat(Invisibility)" _
			and "Normally On, +0%, cat(_General)" _
			and "Switchable, +10%, cat(_General)",_
			AD:Magery 0,_
			AD:Magery = 3,_
			AD:Unaging,_
			DI:Dread (Solomon's Seal) _
			with "Rarity: Occasional, *1, cat(Dread)",_
			DI:Disturbing Voice,_
			QU:Proud,_
			PA:Body of Air _
		)
Djinni - Materialized Djinni (Fantasy), displaycost(200), cost(100),_
	cat(Racial Templates),_
	description(Arabic legends say that Allah made men from earth, but djinn from smokeless fire. The natural form of a djinni is a cloud of vapor, which can be either visible or invisible. Djinn can also materialize in the shape of tall, powerfully built humans (determine height and weight according to the rules for Gigantism, p. B15). When dematerialized they can only speak in peculiar breathy whispers.),_
	page(F107),_
	race(Materialized Djinni),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+2 to ST:DX,_
		+2 to ST:IQ,_
		+2 to ST:HT,_
		+1 to ST:Size Modifier _
		),_
	adds(_
			AD:Appearance = 4,_
			AD:Magery 0,_
			AD:Magery = 3,_
			AD:Unaging,_
			DI:Dread (Solomon's Seal) _
			with "Rarity: Occasional, *1, cat(Dread)",_
			QU:Proud _
		),_
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=5 _
		)
Dragons (Fantasy), displaycost(300), cost(30),_
	cat(Racial Templates),_
	description(These dragons are a version of winged, fire-breathing reptiles of European myth. This template represents a large, old dragon, more powerful than the template on p. B261.),_
	page(F107),_
	race(Dragon),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+4 to ST:Size Modifier,_
		+3 to ST:Will,_
		+3 to ST:Perception _
		),_
	adds(_
			AD:Burning Attack = 4 _
			with "Limited Use: Expanded, -10%/-10%/-10%/-10%/-10%/-10%/-20%/-20%/-30%/-40%, shortname(Limited Use), levelnames(10/day,9/day,8/day,7/day,6/day,5/day,4/day,3/day,2/day,1/day), upto(10), group(_General), page(B112), gives(=nobase to owner::shots$, =$solver(owner::charrof * (11 - me::level)) to owner::shots$), level(5)" _
			and "Reduced Range, -10%/-20%, levelnames(x1/2, x1/5, x1/10), upto(3), group(_Attack Limitations), page(B115), gives(=*@indexedvalue(me::level,0.5,0.2,0.1) to owner::rangehalfdam, =*@indexedvalue(me::level,0.5,0.2,0.1) to owner::rangemax), level(2)" _
			and "Cone, +60%/+70%, group(_Attack Enhancements), page(B103), description(The first level of Cone *includes* the base +50% cost and the +10% for the first yard of width.), level(5)",_
			AD:Claws (Long Talons),_
			AD:Discriminatory Smell,_
			AD:Damage Resistance = 6 _
			with "Can't Wear Armor, -40%, cat(Damage Resistance)",_
			AD:Eidetic Memory,_
			AD:Enhanced Move (Air) = 2,_
			AD:Extra Attack,_
			AD:Extra Legs (4 Legs),_
			AD:Flight _
			with "Winged, -25%, cat(Flight)",_
			AD:Hard to Kill = 5,_
			AD:Longevity,_
			AD:Magery 0,_
			AD:Magery,_
			AD:Night Vision = 8,_
			AD:Striker (Crushing; [Description]) respond "Tail",_
			AD:Teeth (Fangs),_
			DI:Bad Grip = 3,_
			DI:Gluttony,_
			DI:Greed,_
			DI:Horizontal,_
			DI:Miserliness _
		),_
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=20 _
		)
Dwarf (Fantasy), displaycost(35), cost(15),_
	cat(Racial Templates),_
	description(Dwarves are a race of miners, metalworkers, and craftsmen. They live underground, which is their workplace and protection from enemies. Dwarves are small but strong and enduring, with highly developed combat skills. They may become alchemists or specialize in enchanting, if they are magically gifted, but few dwarves practice other sorts of magic. Many have Magic Resistance. Dwarves might be only 2/3 as tall as humand, but they are much longer lived, with a nose for gold and a flair for all the forms of craftsmanship. Dwarves often live in underground halls, and their eyes are adapted to dim light. Many dwarves have Miserliness, but this is not a racial trait.),_
	page(F107),_
	race(Dwarf),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+1 to ST:HT,_
		-1 to ST:Size Modifier,_
		+1 to ST:Will _
		),_
	adds(_
			PO:Alcohol Tolerance,_
			AD:Artificer,_
			AD:Detect (Gold) _
			with "Vague, -50%, cat(Detect)",_
			AD:Extended Lifespan,_
			AD:Lifting ST = 2,_
			AD:Night Vision = 5,_
			DI:Greed _
			with "You resist on a roll of 15 or less (almost all the time), *0.5, shortname(15 or less), cat(Self-Control)" _
		)
Elf (Fantasy), displaycost(70), cost(25),_
	cat(Racial Templates),_
	description(Elves are the quintessential fantasy race: very similar to humans (and cross-fertile with them, in many settings), but exceptionally beautiful, ageless, and naturally magical.),_
	page(F108),_
	race(Elf),_
	owns(yes),_
	noresync(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+1 to ST:DX,_
		+1 to ST:Perception_
		),_
	adds(_
			AD:Racial Skill Point Bonus ([Skill]) = 1 respond "Connoisseur (Natural Environments)",_
		AD:Appearance=1,_
		AD:Magery 0,_
		AD:Perfect Balance,_
		AD:Telescopic Vision=1,_
		AD:Unaging,_
		AD:Voice,_
		SK:Connoisseur (Natural Environments)==0pts#DoNotOwn _
		),_
	creates(_
			"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))" _
		)
Faerie (Fantasy), displaycost(140), cost(50),_
	cat(Racial Templates),_
	description(Faeries are a naturally magical race. Their bodies are magically created, with little actual substance. This lets them change their appearance and apparent size freely. Many of them are masters of magic, though their spells cannot create or change anything substantial. Among other things, the touch of iron dispels faerie magic, and iron weapons are especially deadly to the faeries. Faeries can wear, handle, or even consume illusions. Many of them are skilled in illusion spells and in using Art (Illusion) to shape illusionary objects.),_
	page(F108),_
	race(Faerie),_
	owns(yes),_
	noresync(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+2 to ST:DX,_
		-2 to ST:Will,_
		+2 to ST:Perception,_
		+0.5 to ST:Basic Speed _
		),_
	adds(_
			AD:Appearance = 4,_
			AD:Chameleon = 5,_
			AD:Doesn't Eat or Drink,_
			AD:Insubstantiality _
			with "Can Carry Objects (No Encumbrance), +10%, cat(Insubstantiality)" _
			and "Always On, -50%, cat(Insubstantiality)" _
			and "Illusionary Form, -15%, cat(Insubstantiality)",_
			AD:Magery 0 _
			with "Impermanent (Dispelled by Iron), -0%",_
			AD:Morph _
			with "Cosmetic, -50%, cat(Morph)",_
			AD:Unaging,_
			DI:Dependency (Mana) _
			with "Frequency Needed: Constantly, *5, shortname(Constantly), cat(Dependency)",_
			DI:Impulsiveness,_
			DI:Vulnerability (Iron) = 2 _
			with "Wounding Multiplier x3, *1.5, shortname(x3), cat(Vulnerability)" _
		),_
	creates(_
			"QU:Annoyed when mortals talk about them, -1, cat(Mental), noresync(yes)",_
			"QU:Keep their promises, -1, cat(Mental), noresync(yes)" _
		),_
	features( _
		"Can use illusionary objects as if they were substantial",_
		"Felt as ghostly touches by material beings",_
		"Must take on winged shape to move vertically" _
		)
Ghoul (Fantasy), displaycost(0), cost(0),_
	cat(Racial Templates),_
	description(Though as mortal as humans, ghouls are often confused with undead beings because they need to feed on the dead. The only food that sustains them properly is human flesh, though it doesn't have to be freshly dead. Ghouls can pass for human, especially if they conceal their sharp teeth, but they look slightly unappealing. A ghoul who has recently eaten or handled human remains may cover the unpleasant smell by washing or using perfumes.),_
	page(F108),_
	race(Ghoul),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Acute Taste and Smell = 2,_
			AD:Night Vision = 5,_
			AD:Reduced Consumption = 4 _
			with "Cast-Iron Stomach, -50%, cat(Reduced Consumption)",_
			AD:Silence,_
			AD:Teeth (Sharp Teeth),_
			DI:Appearance,_
			DI:Restricted Diet (Human Flesh) = 2 _
			with "Substitution (Other Flesh), -50%, cat(Restricted Diet)",_
			DI:Secret = 3,_
			DI:Skinny _
		),_
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=2 _
		)

Ghoul - in Hiding (Fantasy), displaycost(5), cost(0),_
	cat(Racial Templates),_
	description(Though as mortal as humans, ghouls are often confused with undead beings because they need to feed on the dead. The only food that sustains them properly is human flesh, though it doesn't have to be freshly dead. Ghouls can pass for human, especially if they conceal their sharp teeth, but they look slightly unappealing. A ghoul who has recently eaten or handled human remains may cover the unpleasant smell by washing or using perfumes.),_
	page(F108),_
	race(Ghoul),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Acute Taste and Smell = 2,_
			AD:Night Vision = 5,_
			AD:Reduced Consumption = 4 _
			with "Cast-Iron Stomach, -50%, cat(Reduced Consumption)",_
			AD:Silence,_
			AD:Teeth (Sharp Teeth),_
			DI:Appearance,_
			DI:Restricted Diet (Human Flesh) = 2 _
			with "Substitution (Other Flesh), -50%, cat(Restricted Diet)",_
			DI:Social Stigma (Monster),_
			DI:Skinny _
		),_
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"= _
		)
Halfling (Fantasy), displaycost(20), cost(50),_
	cat(Racial Templates),_
	description(Short and fond of comfort, halflings seldom leave their farms, but those who do sometimes make surprisingly good adventurers, thanks to natural stealth, superb marksmanship, and resilient health. They're not at their best in a stand-up fight, but make fine skirmishers, with thrown rocks, slings, bows, crossbows, or even muskets. The ability to move noiselessly through grass or underbrush also helps. Halflings seldom seek out a fight. They are fairly egalitarian, with chieftains but no kings. Many cultures expect chieftains to give feasts and hand out presents to guests. An average halfling (ST5) stands 2'8'' to 3' tall and weighs 18 to 29 lbs. (This takes Overweight into account.) Adjust height by 1 to 2'' and weight by 2 to 4 lbs. per point of ST above or below 5.),_
	page(F109),_
	race(Halfling),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+1 to ST:DX,_
		+2 to ST:HT,_
		-2 to ST:Size Modifier,_
		+2 to ST:Will _
		),_
	adds(_
			AD:Green Thumb,_
			AD:Hard to Kill = 4,_
			AD:Silence = 4,_
			DI:Mundane Background,_
			DI:Overweight _
		),_
	creates(_
			"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=5,_
			"QU:Fond of Food & Drink, -1, cat(Mental), noresync(yes)",_
			"QU:Prefers to live underground, -1, cat(Mental), noresync(yes)" _
		)
Imp (Fantasy), displaycost(125), cost(-70),_
	cat(Racial Templates),_
	description(Imps are the small change of hell, just capable enough to cause mischief and frustration. They tempt their mortal victims into minor sins of anger. Imps can't physically manifest on the material plane and thus their actions speak louder than their appearance. To those who can see spirits they appear as very small, repulsive humanoids, about 18 inches tall, like children with unnaturally nasty expressions.),_
	page(F109),_
	noresync(yes),_
	race(Imp),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		-8 to ST:ST,_
		-1 to ST:IQ,_
		-4 to ST:Size Modifier,_
		+2 to ST:Perception,_
		+1 to ST:Basic Speed _
		),_
	adds(_
			AD:Affliction (Bad Temper (12)) _
			with "Disadvantage, +10%, cat(Affliction)" _
			and "Malediction, +100%/+150%/+200%, upto(3), group(_Attack Enhancements), page(B106), levelnames(Recieves -1/yard range, Uses Speed/Range Table, Uses Long-Distance Modifiers), gives(=nobase to owner::reach$, =nobase to owner::acc$, =nobase to owner::rangehalfdam$, =nobase to owner::rangemax$, =nobase to owner::rof$, =nobase to owner::shots$, =nobase to owner::rcl$, =" mal" to owner::damtype$, =0 to owner::rangemax$, =$indexedvalue(me::level, "-1/yard range", "Speed/Range", "Long-Distance") to owner::rof$)",_
			DI:Appearance = 2,_
			DI:Callous,_
			DI:Dread (Holy Objects),_
			DI:Duty (Tempt or harass mortals) = 3 _
			with "Nonhazardous, +5, cat(Duty), page(B134)",_
			DI:Enemy (Formidable group) = 2 respond "Celestial heirarchy" _
			with "Intent: Rival (Celestial Heirarchy), *1/2, round(Down), cat(Enemy), page(B135)" _
			and "Frequency: roll of  6 or less (Quite rarely), *1/2, shortname(6 or less), cat(Frequency of Appearance), page(B36)",_
			DI:Enemy (One Person) = 3 respond "Immediate infernal supervisor" _
			with "Intent: Watcher (Immediate infernal superior), *1/4, round(Down), cat(Enemy), page(B135)" _
			and "Frequency: roll of  6 or less (Quite rarely), *1/2, shortname(6 or less), cat(Frequency of Appearance), page(B36)",_
			DI:Odious Personal Habit,_
			DI:Selfish _
			with "You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), cat(Self-Control)",_
			AD:Doesn't Breathe,_
			AD:Doesn't Eat or Drink,_
			AD:Doesn't Sleep,_
			AD:Invisibility _
			with "Substantial Only, -10%, cat(_General)",_
			AD:Unaging,_
			DI:Mute _
			with "Substantial Only, -10%, cat(_General)",_
			AD:Insubstantiality _
			with "Always On, -50%, cat(Insubstantiality)" _
			and "Affects Substantial, +100%, cat(Insubstantiality)" _
		),_
	creates(_
			"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical), noresync(yes)" _
		),_
	features(Infernal Rank 0)
Myrmidon - Worker (Fantasy), displaycost(0), cost(-10),_
	cat(Racial Templates),_
	description(In ancient Greek myth, the myrmidons were warriors magically created from ants. When humans encountered a sapient insect race, scholars gave it the same name. Myrmidons look like ants, but stand erect on a single pair of legs, using the other two pairs for manipulators. Like ants or termites, they have castes of workers, warriors, and breeders or "queens," plus an extra caste of "priests" who preserve the memory of a nest.),_
	page(F109),_
	race(Myrmidon (Worker)),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		-1 to ST:IQ,_
		+1 to ST:HT _
		),_
	adds(_
			AD:Discriminatory Taste,_
			AD:Damage Resistance = 2,_
			AD:Extra Arms = 2,_
			AD:High Pain Threshold,_
			AD:Payload = 6 _
			with "Liquids Only, -40%, cat(Payload)",_
			AD:Peripheral Vision _
			with "Vulnerable, -20%, cat(360°+Peripheral Vision)",_
			AD:Social Chameleon,_
			AD:Single-Minded,_
			DI:Combat Paralysis,_
			DI:Deafness,_
			DI:Hidebound,_
			DI:Mute,_
			DI:Selfless _
			with "You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), cat(Self-Control)",_
			QU:Sexless _
		),_
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=1 _
		)
Myrmidon - Warrior (Fantasy), displaycost(101), cost(40),_
	cat(Racial Templates),_
	description(In ancient Greek myth, the myrmidons were warriors magically created from ants. When humans encountered a sapient insect race, scholars gave it the same name. Myrmidons look like ants, but stand erect on a single pair of legs, using the other two pairs for manipulators. Like ants or termites, they have castes of workers, warriors, and breeders or "queens," plus an extra caste of "priests" who preserve the memory of a nest.),_
	page(F109),_
	race(Myrmidon (Warrior)),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+1 to ST:DX,_
		-1 to ST:IQ,_
		+3 to ST:HT,_
		+1 to ST:Size Modifier,_
		+2 to ST:Perception _
		),_
	adds(_
			AD:Combat Reflexes,_
			AD:Damage Resistance = 3,_
			AD:Extra Arms = 2,_
			AD:Extra Attack,_
			AD:Fearlessness = 2,_
			AD:High Pain Threshold,_
			AD:Payload = 2 _
			with "Liquids Only, -40%, cat(Payload)",_
			AD:Peripheral Vision _
			with "Vulnerable, -20%, cat(360°+Peripheral Vision)",_
			AD:Social Chameleon,_
			AD:Single-Minded,_
			AD:Teeth (Sharp Beak),_
			DI:Bloodlust,_
			DI:Deafness,_
			DI:Hidebound,_
			DI:Mute,_
			DI:Selfless _
			with "You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), cat(Self-Control)",_
			QU:Sexless _
		),_
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=2 _
		)
Orc (Fantasy), displaycost(-9), cost(5),_
	cat(Racial Templates),_
	description(Orcs are to humans what humans are to elves: short-lived, shortsighted, aggressive, and disliked. All this makes them the natural warrior race of many fantasy worlds. With short generations and intense territoriality, orcs have split into many subspecies. These statistics are for an orcs the same weight as a human, but about 2'' shorter because of bowleggedness and a squat overall build. Other breeds may be larger or smaller.),_
	page(F110),_
	noresync(yes),_
	race(Orc),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		-1 to ST:IQ,_
		+1 to ST:HT,_
		+0.75 to ST:Basic Speed _
		),_
	adds(_
			AD:Acute Taste and Smell = 2,_
			AD:Combat Reflexes,_
			AD:Fearlessness = 2,_
			AD:Fit _
			with "Only at Night, -20%, cat(_General)",_
			AD:Infravision,_
			AD:Rapid Healing,_
			AD:Resistant = 2 _
			with "Degree: +3 to HT rolls to resist, *1/3, round(Down), shortname(+3), cat(Resistant)" _
			respond {Disease},_
			DI:Appearance,_
			DI:Bad Temper,_
			DI:Callous,_
			DI:Disturbing Voice,_
			DI:Impulsiveness,_
			DI:Sadism,_
			DI:Unfit _
			with "Only by Day, -20%, cat(_General)",_
			QU:Bowlegged _
		)
Selkie - Seal Form (Fantasy), displaycost(90), cost(54),_
	cat(Racial Templates),_
	description(A Selkie is a seal with the peculiar ability to remove his skin and turn into a man. If a selkie's skin is lost, stolen, or destroyed, he's trapped in his mortal form. Selkies are one of the faerie races and share the common weakness of that kindred for iron. However, their bodies are fully substantial in both forms. In human form, they're exceptionally handsome with graceful movements.),_
	page(F110),_
	noresync(yes),_
	race(Selkie),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+2 to ST:DX,_
		+2 to ST:HT,_
		+2 to ST:Perception _
		),_
	adds(_
			AD:Racial Skill Point Bonus ([Skill]) = 4 respond "Survival (Open Ocean)",_
			AD:Alternate Form _
			with "Skinbound/Breakable: DR 2 or less, -10%, page(F131), cat(Alternate Form)" _
			and "Skinbound/Breakable: Size -3 or -4, -7.5%, page(F131), cat(Alternate Form)" _
			and "Skinbound/Can Be Stolen: Can only be taken by stealth or trickery (Does not work for the Thief), -5%, page(F131), cat(Alternate Form)" _
			and "Skinbound/Unique, -12.5%, page(F131), cat(Alternate Form)" _
			and "Difference in point costs (+4), 4, tier(1), cat(Alternate Form)" _
			respond "Human",_
			AD:Damage Resistance = 1,_
			AD:Doesn't Breathe _
			with "Oxygen Storage, -50%, levelnames(x25), cat(Doesn't Breathe)",_
			AD:Enhanced Move (Water) = 4 _
			with "Handling Bonus +5, +25%, cat(Enhanced Move)",_
			PO:Fur,_
			AD:Nictitating Membrane,_
			PO:Penetrating Voice,_
			AD:Perfect Balance,_
			AD:Pressure Support,_
			AD:Teeth (Sharp Teeth),_
			AD:Temperature Tolerance (Cold) = 1,_
			AD:Unaging,_
			DI:Chummy,_
			DI:Colorblindness,_
			DI:Horizontal,_
			DI:Impulsiveness,_
			DI:No Fine Manipulators,_
			DI:No Legs (Semi-Aquatic),_
			DI:Vulnerability (Iron) = 2 _
			with "Wounding Multiplier x2, *1, shortname(x2), cat(Vulnerability)",_
			SK:Survival (Open Ocean)==0pts#DoNotOwn _
		),_
	creates(_
			"QU:Distractible, -1, cat(Mental), noresync(yes)",_
			"QU:Sexually attracted to mortals, -1, cat(Mental), noresync(yes)" _
		)
Selkie - Human Form (Fantasy), displaycost(80), cost(50),_
	cat(Racial Templates),_
	description(A Selkie is a seal with the peculiar ability to remove his skin and turn into a man. If a selkie's skin is lost, stolen, or destroyed, he's trapped in his mortal form. Selkies are one of the faerie races and share the common weakness of that kindred for iron. However, their bodies are fully substantial in both forms. In human form, they're exceptionally handsome, with graceful movements.),_
	page(F110),_
	noresync(yes),_
	race(Selkie (Human Form)),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+2 to ST:DX,_
		+1 to ST:HT _
		),_
	adds(_
			AD:Racial Skill Point Bonus ([Skill]) = 2 respond "Acrobatics",_
			AD:Racial Skill Point Bonus ([Skill]) = 2 respond "Sex Appeal",_
			AD:Appearance = 2,_
			AD:Charisma,_
			AD:Perfect Balance,_
			AD:Unaging,_
			DI:Impulsiveness,_
			DI:Vulnerability (Iron) _
			with "Wounding Multiplier x2, *1, shortname(x2), cat(Vulnerability)",_
			SK:Acrobatics==0pts#DoNotOwn,_
			SK:Sex Appeal==0pts#DoNotOwn _
		),_
	creates(_
			"QU:Sea-aspected moods, -1, cat(Mental), noresync(yes)" _
		)
Troll - Male (Fantasy), displaycost(70), cost(10),_
	cat(Racial Templates),_
	description(This version of the troll is based on folklore. Male and female trolls have different templates. Female trolls have almost always studied magic and are often skilled enchanters; male trolls rely on strength. Both sexes are larger than most other humanoid races, though not as large as giants. Their greatest weakness is turning to stone in sunlight. Trolls are incapable of learning to read but have retentive memories and a large body of oral tradition. Male trolls average 900 to 1,400lbs.; female trolls average 400 to 600 lbs. Increase weight by 100 lbs. per point of difference from racial average ST. Both sexes average 8 to 9' tall; the difference is in bulk, not height. Adjust height by 3'' per point of difference from racial average ST.),_
	page(F110),_
	noresync(yes),_
	race(Troll),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		-2 to ST:IQ,_
		+4 to ST:HT,_
		+1 to ST:Size Modifier,_
		+2 to ST:Perception _
		),_
	adds(_
			AD:Acute Hearing = 2,_
			AD:Amphibious,_
			AD:Breath-Holding = 2,_
			AD:Combat Reflexes,_
			AD:Damage Resistance = 4,_
			AD:Discriminatory Smell,_
			AD:Extended Lifespan,_
			AD:Fearlessness = 4,_
			AD:Night Vision = 8 _
			with "Visually impaired by day, *0, cat(Night Vision)",_
			AD:Photographic Memory _
			with "Preparation Required: 1 hour, -50%, cat(_General)",_
			DI:Appearance = 2 _
			with "Not to Own Kind, -25%, cat(Appearance)",_
			DI:Bad Temper,_
			DI:Disturbing Voice,_
			DI:Dyslexia,_
			DI:Gluttony,_
			DI:Nocturnal _
			with "Permanent Paralysis: Turn to Stone, +100%, cat(Nocturnal)",_
			DI:Social Stigma (Monster),_
			QU:Uncongenial _
		),_
	creates(_
			"DI:Odious Racial Habit (Eats sapient beings), -5/-10, upto(3), page(B22), cat(Mundane Social, Mundane, Social, Other Physical Features), conditional(-1 to ST:Reaction), noresync(yes)" = 3,_
			"QU:Code of Honor (Carries out spoken agreements), -1, cat(Mental), noresync(yes)",_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=10 _
		)
Troll - Female (Fantasy), displaycost(65), cost(10),_
	cat(Racial Templates),_
	description(This version of the troll is based on folklore. Male and female trolls have different templates. Female trolls have almost always studied magic and are often skilled enchanters; male trolls rely on strength. Both sexes are larger than most other humanoid races, though not as large as giants. Their greatest weakness is turning to stone in sunlight. Trolls are incapable of learning to read but have retentive memories and a large body of oral tradition. Male trolls average 900 to 1,400lbs.; female trolls average 400 to 600 lbs. Increase weight by 100 lbs. per point of difference from racial average ST. Both sexes average 8 to 9' tall; the difference is in bulk, not height. Adjust height by 3'' per point of difference from racial average ST.),_
	page(F110),_
	noresync(yes),_
	race(Troll),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		-2 to ST:IQ,_
		+4 to ST:HT,_
		+1 to ST:Size Modifier,_
		+2 to ST:Perception _
		),_
	adds(_
			AD:Acute Hearing = 2,_
			AD:Amphibious,_
			AD:Breath-Holding = 2,_
			AD:Damage Resistance = 2,_
			AD:Discriminatory Smell,_
			AD:Extended Lifespan,_
			AD:Fearlessness = 4,_
			AD:Magery 0,_
			AD:Magery = 4,_
			AD:Night Vision = 8 _
			with "Visually impaired by day, *0, cat(Night Vision)",_
			AD:Photographic Memory _
			with "Preparation Required: 1 hour, -50%, cat(_General)",_
			AD:Single-Minded,_
			DI:Appearance = 2 _
			with "Not to Own Kind, -25%, cat(Appearance)",_
			DI:Disturbing Voice,_
			DI:Dyslexia,_
			DI:Nocturnal _
			with "Permanent Paralysis: Turn to Stone, +100%, cat(Nocturnal)",_
			DI:Social Stigma (Monster),_
			QU:Proud,_
			QU:Uncongenial _
		),_
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=5,_
			"DI:Odious Racial Habit (Eats sapient beings), -5/-10, upto(3), page(B22), cat(Mundane Social, Mundane, Social, Other Physical Features), conditional(-1 to ST:Reaction), noresync(yes)" = 3 _
		)
Vampire (Fantasy), displaycost(80), cost(22),_
	cat(Racial Templates),_
	description(This vampire, from Eastern European folklore, differs from the one on p. B262. It doesn't gain control of those it infects with vampirism. It's Dread is limited to objects actually imbued with divine power, such as a consecrated host, though a symbol of divine power in the hands of anyone with True Faith can intimidate it. It doesn't suffer from Draining, as fantasy vampires often go much longer than a day without feeding. It picks up some additional advantages from the Intact Corpse meta-trait as well. This version can recover from injury by immersion in blood (at the GM's option, contact with blood may restore 1 HP) or through Vampiric Bite, which grants the ability to inflict thrust-1 cutting damage by biting. The basic vampire is mainly a combat monster; for the more mystical powers of a vampire see the Vampire Mage template.),_
	page(F111),_
	noresync(yes),_
	race(Vampire),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+2 to ST:Perception,_
		+6 to ST:Hit Points _
		),_
	adds(_
			AD:Acute Taste and Smell = 2,_
			AD:Doesn't Breathe,_
			AD:High Pain Threshold,_
			AD:Injury Tolerance _
			with "No Blood, 5, cat(Injury Tolerance)" _
			and "Unliving, 20, cat(Injury Tolerance)",_
			AD:Night Vision = 5,_
			AD:Temperature Tolerance = 10,_
			AD:Unaging,_
			AD:Unkillable = 2 _
			with "Vulnerability: Wood, -50%, cat(Unkillable)",_
			AD:Vampiric Bite,_
			DI:Dependency (Coffin with soil of homeland) = 3 _
			with "Frequency Needed: Daily, *3, shortname(Daily), cat(Dependency)",_
			DI:Divine Curse (Cannot enter dwelling for first time unless invited) = 10,_
			DI:Dread (Garlic),_
			DI:Dread (Holy objects) _
			with "5 yards, -4, cat(Dread)",_
			DI:Dread (Running water) _
			with "Rarity: Common, *2, cat(Dread)",_
			DI:Infectious Attack,_
			DI:Supernatural Feature _
			with "No Body Heat: Can gain warmth temporarily, -1, cat(Supernatural Feature)" _
			and "No Reflection, -10, cat(Supernatural Feature)" _
			and "Pallor: can gain the flush of life temporarily, -5, cat(Supernatural Feature)",_
			DI:Uncontrollable Appetite (Human Blood),_
			DI:Weakness (Sunlight) = 3 _
			with "Rarity: Very Common, *3, shortname(Very Common), cat(Weakness)",_
			DI:Unhealing _
		),_
	creates(_
			"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -0%, group(Size ST), formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes))"=9,_
			"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical), noresync(yes)",_
			"QU:Ages temporarily when unfed, -1, cat(Physical), noresync(yes)" _
		),_
	features(_
		Can be turned by those with True Faith,_
		Sterile _
		)
Vampire Mage (Fantasy), displaycost(135), cost(40),_
	cat(Racial Templates),_
	description(Some vampires can learn a special magical discipline (see Blood Magic, p. F167) that draws on their peculiar nature when working magic. Access to spells through this discipline is the source of many of the more impressive legendary powers of vampires. Ordinary vampires lack those powers, being mainly very dangerous combatants in a physical fight. A trained vampire mage has the skill of Ritual Magic (Vampiric Blood Magic) and spells based upon it.),_
	page(F111),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+2 to ST:IQ _
		),_
	adds(_
			AD:Magery 0,_
			"AD:Speak with Animals" _
			with "Wolves and bats only, -60%, cat(Speak with Animals)",_
			"TE:Vampire (Fantasy)" _
		)
Werewolf (Fantasy), displaycost(29), cost(0),_
	cat(Racial Templates),_
	description(This is more or less a classic horror movie werewolf: ferocious, nearly indestructible but vulnerable to silver weapons, driven to change under the full moon, and coming back to human form with only vague, troubled memories - the victim may mistake this for Nightmares. A victim's bite transmits this form of lycanthropy, which is why it's treated as a racial template.),_
	page(F112),_
	noresync(yes),_
	owns(yes),_
	hides(yes),_
	adds(_
			AD:Alternate Form _
			with "Nuissance Effect: Partial Amnesia, -10%, cat(_General), page(B112)" _
			and "Trigger: Full Moon, -40%, cat(_General), page(B115)" _
			and "Difference in point costs, +40/+44, init(44), formula(@int(44 * 0.9 + 0.9)), forceformula(yes), tier(1), cat(Alternate Form), page(B84)" _
			respond "Wolf",_
			DI:Compulsive Behavior (Lycanthropy) = 3 _
			with "Trigger: Full Moon, -40%, cat(_General), page(B115)" _
			and "You resist on a roll of  6 or less (quite rarely), *2, shortname(6 or less), cat(Self-Control)" _
		),_
	creates(_
			"QU:Unnatural Feature (any one classic mark of lycanthropy), -1, cat(Mental), noresync(yes)" _
		)
Werewolf - Wolf Form (Fantasy), displaycost(25), cost(49),_
	cat(Racial Templates),_
	description(This is more or less a classic horror movie werewolf: ferocious, nearly indestructible but vulnerable to silver weapons, driven to change under the full moon, and coming back to human form with only vague, troubled memories - the victim may mistake this for Nightmares. A victim's bite transmits this form of lycanthropy, which is why it's treated as a racial template.),_
	page(F112),_
	race(Werewolf (Wolf Form)),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+2 to ST:DX,_
		-4 to ST:IQ,_
		+2 to ST:HT,_
		+6 to ST:Will,_
		+8 to ST:Perception,_
		+3 to ST:Basic Move _
		),_
	adds(_
			AD:Discriminatory Smell,_
			AD:Damage Resistance,_
			PE:Fur,_
			AD:Night Vision = 2,_
			PE:Penetrating Voice,_
			AD:Regeneration = 2,_
			AD:Teeth (Sharp Teeth),_
			AD:Temperature Tolerance,_
			AD:Unkillable,_
			DI:Bad Temper,_
			DI:Berserk,_
			DI:Infectious Attack,_
			DI:Loner,_
			DI:Vulnerability (Silver) = 2 _
			with "Wounding Multiplier x3, *1.5, shortname(x3), cat(Vulnerability), page(B161)",_
			PA:Quadruped,_
			PA:Wild Animal_
		)

<Racial Templates - Fantasy - Undead Lenses>
Ancestral Spirit (Fantasy), displaycost(125), cost(0),_
	cat(Racial Templates),_
	description(In ancestor worship, the living honor and propitiate their dead kindres, and the dead may retain some power to influence the fates of the living. For the most part, they retain the personal and racial traits they had in life, seldom learning anything new.),_
	page(F112),_
	race(Ancestral Spirit),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			DI:Hidebound,_
			DI:Maintenance (Prayer) = 2 _
			with "Maintenance Interval: Weekly, *1/2, shortname(Weekly), cat(Maintenance), page(B143)",_
			DI:Odious Personal Habit (Bossy),_
			DI:Sense of Duty (Family) = 2,_
			PA:Unmanifested Spirit _
		),_
	creates(_
			"PE:Sanctity, 1, cat(Perks), noresync(yes)" _
		)
Ghost (Fantasy), displaycost(175), cost(10),_
	cat(Racial Templates),_
	description(A ghost is the spirit of a dead person, returned to haunt the living. Ghosts are normally invisible, but can become visible when it serves their purposes. Typical ghosts can do no physical or magical harm, but cause unreasoning terror in witnesses. Ghosts are preoccupied with the circumstances of their deaths or with other unfinished business from their lives and have little interest in anything else.),_
	page(F113),_
	race(Ghost),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+2 to ST:Will _
		),_
	adds(_
			AD:Terror,_
			AD:Doesn't Breathe,_
			AD:Doesn't Eat or Drink,_
			AD:Doesn't Sleep,_
			AD:Insubstantiality _
			with "Always On, -50%, cat(Insubstantiality)",_
			AD:Invisibility _
			with "Substantial Only, -10%, cat(_General)" _
			and "Usually On, +5%, cat(Invisibility)",_
			AD:Unaging,_
			DI:Flashbacks = 2,_
			DI:Hidebound,_
			DI:Incurious,_
			DI:Obsession = 2 _
			with "You resist on a roll of  9 or less (fairly often), *1.5, shortname(9 or less), cat(Self-Control), page(B121)" _
		),_
	creates(_
			"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical), noresync(yes)",_
			"QU:Difficult Speech, -1, cat(Physical), noresync(yes)",_
			"QU:Carries signs of his obsession or of the manner of his death, -1, cat(Mental), noresync(yes)",_
			"QU:Haunts a specific place, -1, cat(Mental), noresync(yes)" _
		),_
	features(_
		Can be exorcised,_
		Can be turned using True Faith _
		)
Lich (Fantasy), displaycost(105), cost(67),_
	cat(Racial Templates),_
	description(A lich is a powerful wizard or sorcerer who has used potent spells to transform himself into an undead being. The wizard may have deliberately sought death, seeing the undead form as more powerful and less vulnerable, or simply kept the necessary spells in reserve until he was dying from other causes. If his death was at the hands of mortal foes, he may be eager for vengeance against them.),_
	page(F113),_
	noresync(yes),_
	race(Lich),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		-1 to ST:ST,_
		+2 to ST:DX,_
		+2 to ST:HT,_
		+3 to ST:Hit Points,_
		+3 to ST:Fatigue Points,_
		+1 to SK:Thanatology _
		),_
	adds(_
			AD:Doesn't Sleep,_
			AD:Unfazeable,_
			DI:Dependency (Mana) = 2 _
			with "Frequency Needed: Constantly, *5, shortname(Constantly), cat(Dependency)",_
			DI:Fragile (Unnatural) _
			with "Mitigator: monthly treatment (Potion), -70%, cat(_General), mitigator(yes)",_
			PA:Skeletal Undead _
		),_
	features(Can be turned using True Faith)
Wight - Skeletal (Fantasy), displaycost(80), cost(130),_
	cat(Racial Templates),_
	description(Many cultures bury their dead with grave goods, ranging from a small sample of their wealth to a vast hoard. Those especially attached to their goods may return from the dead to guard them or avenge their theft. Most tomb guardians were originally human, but this lens could apply to other races; a dragon, for example, might be unwilling to surrender his hoard even in death. Skeletal wights are only one option: some wights are mummified instead. That template costs 67 points. The other classic "tomb guardian" undead, the mummy, is fairly similar.),_
	page(F113),_
	noresync(yes),_
	race(Wight),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+4 to ST:ST,_
		+2 to ST:DX,_
		+5 to ST:HT _
		),_
	adds(_
			AD:Dark Vision,_
			AD:Fatigue Attack _
			with "Damage Modifier: Freezing Hazard, +20%, shortname(Freezing Hazard), group(Fatigue Attack Enhancements), page(B104), gives(=" frz haz" to owner::damtype$)" _
			and "Melee Attack: Reach C, -30%, group(_Attack Limitations), page(B112), gives(=nobase to owner::rangehalfdam$, =nobase to owner::rangemax$, =nobase to owner::reach$, ="C" to owner::reach$)" _
			and "Melee Attack: Cannot Parry, -5%, shortname(Cannot Parry), group(_Attack Limitations), page(B112), gives(=nobase to owner::parry$, ="N/A" to owner::parry$)",_
			AD:Indomitable,_
			AD:Magic Resistance = 4,_
			AD:Single-Minded,_
			DI:Dependency (Grave) = 3 _
			with "Frequency Needed: Daily, *3, shortname(Daily), cat(Dependency), page(B130)",_
			DI:Disturbing Voice,_
			DI:Frightens Animals,_
			DI:Hidebound,_
			DI:Incurious,_
			DI:Unhealing = 2,_
			DI:Weakness (Sunlight) = 3 _
			with "Rarity: Very Common, *3, shortname(Very Common), cat(Weakness), page(B161)",_
			PA:Skeletal Undead _
		),_
	features(Can be turned using True Faith)
Wight - Mummified (Fantasy), displaycost(92), cost(130),_
	cat(Racial Templates),_
	description(Many cultures bury their dead with grave goods, ranging from a small sample of their wealth to a vast hoard. Those especially attached to their goods may return from the dead to guard them or avenge their theft. Most tomb guardians were originally human, but this lens could apply to other races; a dragon, for example, might be unwilling to surrender his hoard even in death. Skeletal wights are only one option: some wights are mummified instead. That template costs 67 points. The other classic "tomb guardian" undead, the mummy, is fairly similar.),_
	page(F113),_
	noresync(yes),_
	race(Wight),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+4 to ST:ST,_
		+2 to ST:DX,_
		+5 to ST:HT _
		),_
	adds(_
			AD:Dark Vision,_
			AD:Fatigue Attack _
			with "Damage Modifier: Freezing Hazard, +20%, shortname(Freezing Hazard), group(Fatigue Attack Enhancements), page(B104), gives(=" frz haz" to owner::damtype$)" _
			and "Melee Attack: Reach C, -30%, group(_Attack Limitations), page(B112), gives(=nobase to owner::rangehalfdam$, =nobase to owner::rangemax$, =nobase to owner::reach$, ="C" to owner::reach$)" _
			and "Melee Attack: Cannot Parry, -5%, shortname(Cannot Parry), group(_Attack Limitations), page(B112), gives(=nobase to owner::parry$, ="N/A" to owner::parry$)",_
			AD:Indomitable,_
			AD:Magic Resistance = 4,_
			AD:Single-Minded,_
			DI:Dependency (Grave) = 3 _
			with "Frequency Needed: Daily, *3, shortname(Daily), cat(Dependency), page(B130)",_
			DI:Disturbing Voice,_
			DI:Frightens Animals,_
			DI:Hidebound,_
			DI:Incurious,_
			DI:Unhealing = 2,_
			DI:Weakness (Sunlight) = 3 _
			with "Rarity: Very Common, *3, shortname(Very Common), cat(Weakness), page(B161)",_
			PA:Mummified Undead _
		),_
	features(Can be turned using True Faith)

<Meta-Traits - Corporeal Undead>
Intact Undead, displaycost(95), cost(0),_
	description(The dead person recently died and has not decayed significantly.),_
	page(F133),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Doesn't Breathe,_
			AD:High Pain Threshold,_
			AD:Injury Tolerance _
			with "No Blood, +5, cat(Injury Tolerance)" _
			and "Unliving, +20, cat(Injury Tolerance)",_
			AD:Temperature Tolerance = 10,_
			AD:Unaging,_
			DI:Supernatural Feature _
			with "No Body Heat, -5, cat(Supernatural Feature)" _
			and "Pallor, -10, cat(Supernatural Feature)" _
		),_
	creates(_
			"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical), noresync(yes)" _
		),_
	features(_
		Sterile,_
		May become a rotting corpse_
		)
Rotting Undead, displaycost(59), cost(0),_
	description(The dead person's body had time to decay before revival, or (in some versions) decayed after revival.),_
	page(F133),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Doesn't Breathe,_
			AD:Doesn't Eat or Drink,_
			AD:High Pain Threshold,_
			AD:Injury Tolerance _
			with "No Blood, +5, cat(Injury Tolerance)" _
			and "Unliving, +20, cat(Injury Tolerance)",_
			AD:Temperature Tolerance = 10,_
			AD:Unaging,_
			DI:Appearance = 4 _
			with "Universal, +25%, cat(Appearance)",_
			DI:Bad Smell,_
			DI:No Sense of Smell/Taste,_
			QU:Sexless,_
			DI:Social Stigma (Dead) _
		),_
	creates(_
			"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical), noresync(yes)" _
		)
Skeletal Undead, displaycost(68), cost(20),_
	description(The dead person's flesh has mostly or entirely rotted away; only the bones and teeth remain, held together by scraps of dried tendons or unseen magic. He's light and fast-moving, but somewhat breakable),_
	page(F133),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	gives(_
		+1 to ST:Basic Speed _
		),_
	adds(_
			AD:Doesn't Breathe,_
			AD:Doesn't Eat or Drink,_
			AD:Damage Resistance = 2,_
			AD:High Pain Threshold,_
			AD:Injury Tolerance _
			with "No Blood, +5, cat(Injury Tolerance)" _
			and "No Brains, +5, cat(Injury Tolerance)" _
			and "No Eyes, +5, cat(Injury Tolerance)" _
			and "No Vitals, +5, cat(Injury Tolerance)" _
			and "Unliving, +20, cat(Injury Tolerance)",_
			AD:Temperature Tolerance = 10,_
			AD:Unaging,_
			AD:Vacuum Support,_
			DI:Appearance = 4 _
			with "Universal, +25%, cat(Appearance)",_
			DI:Fragile (Brittle),_
			DI:No Sense of Smell/Taste,_
			DI:Social Stigma (Dead),_
			DI:Vulnerability (Crushing Attacks) = 3 _
			with "Wounding Multiplier x2, *1, shortname(x2), cat(Vulnerability)",_
			QU:Cannot Float,_
			QU:Sexless _
		),_
	creates(_
			"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical), noresync(yes)",_
			"DI:Skinny, -5, gives(-2 To SK:Disguise), conditional(-2 to ST:ST when "you resist knockback", -2 to SK:Shadowing when "you are trying to follow someone in a crowd"), page(B18), cat(Mundane Physical, Mundane, Physical, Build), noresync(yes)" _
		),_
	features(_
		Skull has only 2 total DR,_
		Sterile _
		)
Mummified Undead, displaycost(80), cost(0),_
	description(Whether by artificial preservation or exposure to a dry natural environment, the dead person dried out instead of rotting. The resulting dried tissues catch fire easily, the major vulnerability of this type of corporeal undead.),_
	page(F134),_
	noresync(yes),_
	race(Mummified Undead),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Doesn't Breathe,_
			AD:Doesn't Eat or Drink,_
			AD:High Pain Threshold,_
			AD:Injury Tolerance _
			with "No Blood, +5, cat(Injury Tolerance)" _
			and "No Brains, +5, cat(Injury Tolerance)" _
			and "No Vitals, +5, cat(Injury Tolerance)" _
			and "Unliving, +20, cat(Injury Tolerance)",_
			AD:Temperature Tolerance = 10,_
			AD:Unaging,_
			DI:Appearance = 4 _
			with "Universal, +25%, cat(Appearance)",_
			DI:Fragile (Combustible),_
			DI:Social Stigma (Dead) _
		),_
	creates(_
			"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical), noresync(yes)" _
		),_
	features(_
		Sterile _
		)

<Meta-Traits - Spirit Traits>
Unmanifested Spirit, displaycost(149), cost(0),_
	description(You are a completely immaterial entity. You can perceive the physical world, but you can't affect it in any way, and you're undetectable to normal physical senses. Your continued existence does not depend on anything physical, and you are immune to physical harm.),_
	page(F134),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Doesn't Breathe,_
			AD:Doesn't Eat or Drink,_
			AD:Doesn't Sleep,_
			AD:Insubstantiality _
			with "Always On, -50%, cat(Insubstantiality)",_
			AD:Invisibility _
			with "Substantial Only, -10%, cat(_General)",_
			AD:Unaging,_
			DI:Mute _
			with "Substantial Only, -10%, cat(_General)" _
		),_
	creates(_
			"AD:Immunity to Metabolic Hazards, 30, cat(Exotic, Physical, Exotic Physical), noresync(yes)" _
		)

Unmanifested Spirit - Difficult Speech, displaycost(+21), cost(0),_
	description(),_
	page(F134),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	creates(_
			"AD:Not Mute, 22, page(F134), cat(Physical)",_
			"QU:Difficult Speech (1 FP/Min), -1, page(F134)" _
		)

Unmanifested Spirit - Not Mute, displaycost(+22), cost(0),_
	needs(TE:Unmanifested Spirit),_
	description(),_
	page(F134),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	creates(_
			"AD:Not Mute, 22, page(F134), cat(Physical)"_
		)

Unmanifested Spirit - Apparition, displaycost(+2), cost(0),_
	needs(TE:Unmanifested Spirit),_
	description(),_
	page(F134),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Invisibility (Apparition) _
			with "Substantial Only, -10%, cat(_General)" _
			and "Usually On, +5%, group(Invisibility), page(B63)" _
		),_
	creates(_
			"AD:Replaces standard Invisibility, -36, page(F134)" _
		)

Unmanifested Spirit - Phantasm, displaycost(+4), cost(0),_
	needs(TE:Unmanifested Spirit),_
	description(),_
	page(F134),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Invisibility (Phantasm) _
			with "Substantial Only, -10%, cat(_General)" _
			and "Switchable, +10%, group(Invisibility), page(B63)" _
		),_
	creates(_
			"AD:Replaces standard Invisibility, -36, page(F134)" _
		)

Unmanifested Spirit - Materialization (1FP/Sec), displaycost(+6), cost(0),_
	needs(TE:Unmanifested Spirit),_
	description(),_
	page(F134),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Insubstantiality (Materialization) _
			with "Usually On, -40%, group(Insubstantiality), page(B63)",_
			AD:Invisibility (Materialization) _
			with "Substantial Only, -10%, cat(_General)" _
			and "Only in Spirit Form, -10%, page(F134)",_
			DI:Mute (Materialization) _
			with "Substantial Only, -10%, cat(_General)" _
			and "Only in Spirit Form, -10%, page(F134)"  _
		),_
	creates(_
			"AD:Replaces standard Insubstantiality, -40, page(F134)",_
			"AD:Replaces standard Invisibility, -36, page(F134)",_
			"AD:Replaces standard Mute, 22, page(F134)" _
		)

Unmanifested Spirit - Materialization (1FP/Minute), displaycost(+22), cost(0),_
	needs(TE:Unmanifested Spirit),_
	description(),_
	page(F134),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Insubstantiality (Materialization) _
			with "Difficult Materialization, -20%, group(Insubstantiality), page(F128)",_
			AD:Invisibility (Materialization) _
			with "Substantial Only, -10%, cat(_General)" _
			and "Only in Spirit Form, -10%, page(F134)",_
			DI:Mute (Materialization) _
			with "Substantial Only, -10%, cat(_General)" _
			and "Only in Spirit Form, -10%, page(F134)"  _
		),_
	creates(_
			"AD:Replaces standard Insubstantiality, -40, page(F134)",_
			"AD:Replaces standard Invisibility, -36, page(F134)",_
			"AD:Replaces standard Mute, 22, page(F134)" _
		)

Unmanifested Spirit - Magical Spirit, displaycost(+80), cost(0),_
	needs(TE:Unmanifested Spirit),_
	description(),_
	page(F134),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	locks(yes),_
	hides(yes),_
	adds(_
			AD:Insubstantiality (Magical Spirit) _
			with "Affect Substantial, +100%, group(Insubstantiality), page(B63)" _
			and "Always On, -50%, group(Insubstantiality), page(B63)" _
		),_
	creates(_
			"AD:Replaces standard Insubstantiality, -40, page(F134)" _
		)

Unmanifested Spirit - Poltergeist, displaycost(+4/level), cost(0),_
	x(#InputReplace("Please enter the level of Telekinesis you wish to have:", "[level]", "1", "Telekinesis")),_
	needs(TE:Unmanifested Spirit),_
	description(),_
	page(F134),_
	cat(Meta-Traits),_
	noresync(yes),_
	owns(yes),_
	hides(yes),_
	adds(_
			AD:Telekinesis = [level] _
			with {"Melee Attack: Reach C,1", -20%, group(_Attack Limitations), page(B112), gives(_ =nobase to owner::rangehalfdam$, =nobase to owner::rangemax$, =nobase to owner::reach$, ="C,1" to owner::reach$)} _
		)

<Character Templates - Fantasy>
Archer (Fantasy), displaycost(75*),_
	cat(Character Templates),_
	description(This template works for any light missile troops who provide support to cavalry or heavier infantry. The longbow is the classic weapon, but other options are available. The cost includes one of the Archer Lenses: Bowman; Crossbowman; Rifleman; Slingman; Spearman),_
	page(F114),_
	sets(_
			ST:DX = 12,_
			ST:Basic Speed = 6 _
	),_
	adds(_
			AD:Acute Vision=2,_
			AD:Fit,_
			AD:Striking ST=2,_
			SK:Hiking=4pts,_
			SK:Soldier=2pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose -20 points selected from among these disadvantages."),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Bloodlust,_
			DI:Chummy,_
			DI:Code of Honor (Soldier's),_
			DI:Duty #codes(upto 4),_
			DI:Overconfidence,_
			#newitem(DI:Sense of Duty (Comrades), -5, levelnames(Small Group), page(B153), cat(Mundane Mental, Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
			DI:Stubbornness,_
			DI:Wealth_
		)_
	),_
	select4(_
		text("Secondary Skills: Choose 1 skill."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Camouflage #codes(upto 2pts, downto 2pts),_
			SK:Stealth #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select5(_
		text("Secondary Skills: Choose 2 points in the following skills."),_
		pointswanted(2),_
		itemswanted(atleast 1, upto 2),_
		list(_
			SK:Knife #codes(upto 2pts, downto 2pts),_
			SK:Smallsword #codes(upto 2pts, downto 2pts),_
			SK:Shortsword #codes(upto 2pts),_
			SK:Shield (Shield) #codes(upto 1pts)_
		)_
	),_
	select6(_
		text("Background Skills: Choose 1 of these survival skills."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Survival (Arctic) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Bank) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Deep Ocean Vent) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Desert) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Fresh-Water Lake) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Island/Beach) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Jungle) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Mountain) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Open Ocean) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Plains) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Radioactive Wasteland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Reef) #codes(upto 2pts, downto 2pts),_
			SK:Survival (River/Stream) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Salt-Water Sea) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Swampland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Tropical Lagoon) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Woodlands) #codes(upto 2pts, downto 2pts) _
		)_
	),_
	select7(_
		text("Background Skills: Choose 1 of the following skills."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Brawling #codes(upto 2pts, downto 2pts),_
			SK:First Aid #codes(upto 2pts, downto 2pts),_
			SK:Savoir-Faire (Military) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Missile Weapons) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Small Arms) #codes(upto 2pts, downto 2pts),_
			SK:Leadership #codes(upto 2pts, downto 2pts),_
			SK:Observation #codes(upto 2pts, downto 2pts),_
			SK:Tracking #codes(upto 2pts, downto 2pts) _
		)_
	),_
	select8(#list(QuirkSelection))

Archer - Bowman (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(Specialising in Bows. NEEDS the Archer Template),_
	page(F114),_
	needs(TE:Archer (Fantasy)),_
	adds(_
			SK:Bow=8pts,_
			SK:Fast-Draw (Arrow)=4pts_
	)
Archer - Crossbowman (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(Specialising in Crossbows. NEEDS the Archer Template),_
	page(F114),_
	needs(TE:Archer (Fantasy)),_
	adds(_
			SK:Crossbow=8pts,_
			SK:Fast-Draw (Arrow)=4pts_
	)
Archer - Rifleman (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(Specialising in Rifles. NEEDS the Archer Template),_
	page(F114),_
	needs(TE:Archer (Fantasy)),_
	adds(_
			SK:Guns (Musket)=8pts,_
			SK:Fast-Draw (Ammo)=4pts_
	)
Archer - Slingman (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(Specialising in Slings. NEEDS the Archer Template),_
	page(F114),_
	needs(TE:Archer (Fantasy)),_
	adds(_
			SK:Sling=12pts_
	)
Archer - Spearman (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(Specialising in Spears. NEEDS the Archer Template),_
	page(F114),_
	needs(TE:Archer (Fantasy)),_
	adds(_
			SK:Thrown Weapon (Spear)=12pts_
	)

Artificer (Fantasy), displaycost(75*),_
	cat(Character Templates),_
	description(Artificers are the technology specialists of fantasy worlds. They can't use spells or other forms of magic, but they can make devices that seem equally wonderful and mysterious to the untrained, such as singing birds made from gold, temple doors that open by themselves, or Greek fire. The cost of this template includes the cost of one of the artificer lenses: Artillery; Chemistry; Heavy Equipment; Mechanisms.),_
	page(F114),_
	sets(_
			ST:ST = 11,_
			ST:IQ = 13_
	),_
	adds(_
			SK:Current Affairs (Science & Technology)=1pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 15 points chosen from among these advantages."),_
		pointswanted(15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Artificer,_
			AD:Flexibility,_
			AD:High Manual Dexterity,_
			AD:Master Builder,_
			AD:Military Rank,_
			AD:Versatile,_
			AD:Wealth_
		)_
	),_
	select4(_
		text("Choose -30 points selected from among these disadvantages."),_
		pointswanted(-30),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Bad Temper,_
			DI:Combat Paralysis,_
			DI:Curious,_
			DI:Hard of Hearing,_
			DI:Lame (Crippled Legs),_
			DI:Loner,_
			DI:Missing Digit,_
			DI:Workaholic_
		)_
	),_
	select5(_
		text("Secondary Skills: Choose 1 skill."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Artist (Drawing) #codes(upto 2pts, downto 2pts),_
			SK:Artist (Sculpting) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select6(_
		text("Secondary Skills: Choose 1 skill."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Administration #codes(upto 1pts),_
			SK:Leadership #codes(upto 1pts)_
		)_
	),_
	select7(_
		text("Background Skills: Choose 1 skill."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Mathematics (Applied) #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Computer Science) #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Cryptology) #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Pure) #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Statistics) #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Surveying) #codes(upto 2pts, downto 2pts),_
			SK:Astronomy #codes(upto 2pts, downto 2pts),_
			SK:Expert Skill (Natural Philosophy) #codes(upto 2pts, downto 2pts) _
		)_
	),_
	select8(_
		text("Background Skills: Choose 2 skills."),_
		pointswanted(2),_
		itemswanted(2),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Brawling #codes(upto 1pts),_
			SK:Knot-Tying #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Scrounging #codes(upto 1pts),_
			SK:Carousing #codes(upto 1pts),_
			SK:Freight Handling #codes(upto 1pts)_
		)_
	),_
	select9(#list(QuirkSelection))

Artificer - Artillery (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(Artificer specializing in Artillery. NEEDS the Artificer template),_
	page(F114),_
	needs(TE:Artificer (Fantasy)),_
	adds(_
			SK:Armoury (Heavy Weapons)=1pts,_
			SK:Engineer (Artillery)=8pts,_
			SK:Gunner (Catapult)=2pts,_
			SK:Artillery (Catapult)=1pts_
	)
Artificer - Chemistry (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(Artificer specializing in Chemistry. NEEDS the Artificer template),_
	page(F114),_
	needs(TE:Artificer (Fantasy)),_
	adds(_
			SK:Chemistry=8pts,_
			SK:Poisons=2pts,_
			SK:Explosives (Fireworks)=1pts,_
			SK:Professional Skill ([IQ based])=1pts respond "Glassblowing"_
	)
Artificer - Heavy Equipment (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(Artificer specializing in Heavy Equipment. NEEDS the Artificer template),_
	page(F114),_
	needs(TE:Artificer (Fantasy)),_
	adds(_
			SK:Engineer (Civil)=8pts,_
			SK:Mechanic ([type])=2pts respond "Muscle Engine",_
			SK:Carpentry=2pts_
	)
Artificer - Mechanisms (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(Artificer specializing in mechanisms. NEEDS the Artificer template),_
	page(F114),_
	needs(TE:Artificer (Fantasy)),_
	adds(_
			SK:Engineer ([type])=8pts respond "Clockwork",_
			SK:Mechanic ([type])=2pts respond "Clockwork" _
	),_
	select1(_
		text("Select one Skill."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Traps #codes(upto 2pts, downto 2pts),_
			SK:Lockpicking #codes(upto 2pts, downto 2pts) _
		)_
	)

Assassin (Fantasy), displaycost(125),_
	cat(Character Templates),_
	description(Assassins kill people for impersonal reasons, in service to a cause or because someone paid them. Fantasy literature often describes assassins' guilds selling their services to the highest bidder, no questions asked. This template is for a professional assassin, whether a loyal guild member or a freelancer.),_
	page(F115),_
	sets(_
			ST:ST = 10,_
			ST:DX = 14,_
			ST:IQ = 11,_
			ST:HT = 10_
	),_
	adds(_
			AD:Single-Minded,_
			AD:Wealth=1,_
			DI:Secret (Assassin)=4,_
			SK:Holdout = 8pts,_
			SK:Acting = 4pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 15 points chosen from among these advantages."),_
		pointswanted(15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			#newitem(PE:Above Suspicion, 1, page(B100)),_
			AD:Absolute Direction,_
			AD:3D Spatial Sense,_
			AD:Claim to Hospitality #codes(upto 3, downto 3),_
			#newitem(AD:Contact (Go-Between), 1/2/3/4, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),_
						upto(4), cat(Mundane, Social), mods(Contact, Frequency of Appearance, Reliability, Favor), page(B44),_
						initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) | Frequency: roll of  9 or less (Fairly often), *1,_
						shortname(9 or less), group(Frequency of Appearance))_
					),_
			AD:Fit,_
			AD:Very Fit,_
			AD:Night Vision,_
			AD:Smooth Operator,_
			AD:Striking ST_
		)_
	),_
	select4(_
		text("Choose one of the following disadvantages."),_
		pointswanted(-5),_
		itemswanted(1),_
		list(_
			#list(GMDisadvantages),_
			DI:Callous,_
			DI:Code of Honor (Professional)_
		)_
	),_
	select5(_
		text("Choose -10 points chosen from among these disadvantages."),_
		pointswanted(-10),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Loner,_
			DI:Overconfidence,_
			DI:Trademark_
		)_
	),_
	select6(_
		text("Choose one of the following Skills at 8 points."),_
		pointswanted(8),_
		itemswanted(1),_
		list(_
			SK:Shadowing #codes(upto 8pts, downto 8pts),_
			SK:Stealth #codes(upto 8pts, downto 8pts)_
		)_
	),_
	select7(_
		text("Choose one of the following Skills at 4 points."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Crossbow #codes(upto 4pts, downto 4pts),_
			SK:Garrote #codes(upto 4pts, downto 4pts),_
			SK:Knife #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Knife) #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Shuriken) #codes(upto 4pts, downto 4pts),_
			SK:Rapier #codes(upto 4pts, downto 4pts),_
			SK:Smallsword #codes(upto 4pts, downto 4pts),_
			SK:Blowpipe #codes(upto 4pts, downto 4pts),_
			SK:Sleight of Hand #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select8(_
		text("Choose one of the following Skills at 4 points."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Savoir-Faire (High Society) #codes(upto 4pts, downto 4pts),_
			SK:Savoir-Faire (Servant) #codes(upto 4pts, downto 4pts),_
			SK:Streetwise #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select9(_
		text("Choose one of the following Skills at 8 points."),_
		pointswanted(8),_
		itemswanted(1),_
		list(_
			SK:Armoury (Melee Weapons) #codes(upto 8pts, downto 8pts),_
			SK:Armoury (Missile Weapons) #codes(upto 8pts, downto 8pts),_
			SK:Armoury (Small Arms) #codes(upto 8pts, downto 8pts),_
			SK:Traps #codes(upto 8pts, downto 8pts),_
			SK:Poisons #codes(upto 8pts, downto 8pts)_
		)_
	),_
	select10(_
		text("Choose one of the following Skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Guns (Pistol) #codes(upto 2pts, downto 2pts),_
			SK:Cloak #codes(upto 2pts, downto 2pts),_
			SK:Main-Gauche #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select11(_
		text("Choose one of the following Skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Scrounging #codes(upto 2pts, downto 2pts),_
			SK:Climbing #codes(upto 2pts, downto 2pts),_
			SK:Architecture #codes(upto 2pts, downto 2pts),_
			SK:Disguise #codes(upto 2pts, downto 2pts),_
			SK:Observation #codes(upto 2pts, downto 2pts),_
			SK:Cryptography #codes(upto 2pts, downto 2pts),_
			SK:Forgery #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore (Conspiracies) #codes(upto 2pts, downto 2pts),_
			SK:Intelligence Analysis #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select12(#list(QuirkSelection))

Bandit (Fantasy), displaycost(75),_
	cat(Character Templates),_
	description(Of all outlaws, bandits and highwaymen attract the most hero worship. Anywhere the common people resent the rulers, a bandit may be seen as a defender of the poor, like Robin Hood. In a conquered province, the old aristocrats may actually become bandits; in any society, the bandit's weapons - and often horses - make him look like an aristocrat. Cinematic heros such as Zoro may deliberately assume the role of bandits for noble motives. Real bandits are usually less noble, even if they take advantage of the heroic image. This template defines an outlaw who really is honorable, relying on stealth and concealment rather than overwhelming force in his struggle against the ruling class.),_
	page(F116),_
	sets(_
			ST:ST = 11,_
			ST:DX = 12,_
			ST:HT = 11,_
			ST:Perception = 11_
	),_
	adds(_
			SK:Riding (Horses) = 4pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 20 points chosen from among these advantages."),_
		pointswanted(20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Ally,_
			AD:Ambidexterity,_
			#newitem(AD:Contact (Fence), 1/2/3/4, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18,_
						Effective Skill 21), upto(4), cat(Mundane, Social), mods(Contact, Frequency of Appearance, Reliability, Favor),_
						page(B44), initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) | Frequency: roll of  9 or less (Fairly often), *1,_
						shortname(9 or less), group(Frequency of Appearance))_
					),_
			AD:Combat Reflexes,_
			AD:Daredevil,_
			AD:Fearlessness,_
			AD:Social Regard (Feared)_
		)_
	),_
	select4(_
		text("Choose -30 points chosen from among these disadvantages."),_
		pointswanted(-30),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Code of Honor (Highwayman's),_
			DI:Code of Honor (Pirate's),_
			DI:Compulsive Carousing,_
			DI:Compulsive Generosity,_
			#newitem(DI:Compulsive Behavior (Spendthrift), -5/-10, displaycost(-5*), mods(Self-Control), page(B128), upto(3), cat(Mundane, Mental),_
							initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121))_
					) #codes(upto 1, downto 1),_
			#newitem(DI:Enemy (One Law Enforcment Officer), -5/-10/-20, upto(3), mods(Enemy, Evil Twin, Frequency of Appearance), page(B135),_
						cat(Mundane, Social), levelnames("Less powerful than the PC", "Equal in power to the PC", "More powerful than the PC"),_
					initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
				),_
			#newitem(DI:Enemy (Less Powerful Law Enforcement Officers), -10/-20/-30, upto(3), mods(Enemy, Frequency of Appearance),_
								page(B135), cat(Mundane, Social), levelnames("Small group (3-5 people)", "Medium-sized group (6-20 people)",_
								"A large group (21-1,000 people)"),  initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less),_
								group(Frequency of Appearance))_
					),_
			#newitem(DI:Enemy (Formidable Law Enforcement Officers), -30/-40, upto(2), mods(Enemy, Frequency of Appearance),_
							page(B135), cat(Mundane, Social), levelnames("medium-sized group, some formidable or super-human",_
							"utterly formidable group"), initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less),_
							group(Frequency of Appearance))_
					),_
			DI:Impulsiveness,_
			DI:Lecherousness,_
			DI:Overconfidence,_
			DI:Pacifism (Cannot Harm Innocents),_
			DI:Secret Identity,_
			#newitem(DI:Sense of Duty (Comrades), -5, levelnames(Small Group), page(B153), cat(Mundane Mental, Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
			#newitem(DI:Sense of Duty (Oppressed People), -10, levelnames(Large Group), page(B153), cat(Mundane Mental, Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
			DI:Social Stigma (Disowned),_
			DI:Trademark_
		)_
	),_
	select5(_
		text("Choose one of the following Skills at 4 points."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Crossbow #codes(upto 4pts, downto 4pts),_
			SK:Guns (Pistol) #codes(upto 4pts, downto 4pts),_
			SK:Bow #codes(upto 4pts, downto 4pts),_
			SK:Broadsword #codes(upto 4pts, downto 4pts),_
			SK:Saber #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select6(_
		text("Choose one of the following Skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Navigation (Land) #codes(upto 2pts, downto 2pts),_
			SK:Area Knowledge ([Area]) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Choose one of the following Skills at 4 points."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Intimidation #codes(upto 4pts, downto 4pts),_
			SK:leadership #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select8(_
		text("Choose one of the following Skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Camouflage #codes(upto 2pts, downto 2pts),_
			SK:Stealth #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select9(_
		text("Choose one of the following Skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Brawling #codes(upto 2pts, downto 2pts),_
			SK:Broadsword #codes(upto 2pts, downto 2pts),_
			SK:Saber #codes(upto 2pts, downto 2pts),_
			SK:Shortsword #codes(upto 2pts, downto 2pts),_
			SK:Whip #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select10(_
		text("Choose one of the following Skills at 1 point."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Brawling #codes(upto 1pts),_
			SK:Carousing #codes(upto 1pts),_
			SK:Gambling #codes(upto 1pts)_
		)_
	),_
	select11(_
		text("Choose one."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Savoir-Faire #codes(upto 1pts),_
			SK:Savoir-Faire (Dojo) #codes(upto 1pts),_
			SK:Savoir-Faire (High Society) #codes(upto 1pts),_
			SK:Savoir-Faire (Mafia) #codes(upto 1pts),_
			SK:Savoir-Faire (Magical) #codes(upto 1pts),_
			SK:Savoir-Faire (Military) #codes(upto 1pts),_
			SK:Savoir-Faire (Police) #codes(upto 1pts),_
			SK:Savoir-Faire (Servant) #codes(upto 1pts) _
		)_
	),_
	select12(#list(QuirkSelection))

Barbarian (Fantasy), displaycost(75*),_
	cat(Character Templates),_
	description(The half-naked warrior from a primitive land is a stereotype in heroic fantasy. This version is a midpoint between actual tribal peoples and mighty-thewed pulp or cinematic heroes. Includes the cost of one of the barbarian lenses.),_
	page(F116),_
	sets(_
			ST:ST = 12,_
			ST:DX = 11,_
			ST:IQ = 9,_
			ST:HT = 12,_
			ST:Perception = 11,_
			ST:Tech level = ST:Tech Level - 1_
	),_
	adds(_
			AD:Fit,_
			AD:Hard to Kill = 2,_
			AD:Temperature Tolerance =1,_
			DI:Code of Honor (Pirate's),_
			DI:Social Stigma (Uneducated),_
			SK:Brawling=1pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 15 points chosen from among these advantages. Or choose 5 points from among these advantages and replace the advantage Fit with Very Fit"),_
		pointswanted(atleast 5, upto 15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Absolute Direction,_
			AD:Animal Empathy,_
			AD:Animal Friend,_
			AD:Combat Reflexes,_
			AD:Fearlessness,_
			AD:High Pain Threshold,_
			AD:Mariner,_
			AD:Outdoorsman_
		)_
	),_
	select4(_
		text("Choose -20 points chosen from among these disadvantages."),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			LA:Language - Native (Written),_
			DI:Alcoholism,_
			DI:Low TL,_
			DI:Bad Temper,_
			DI:Berserk,_
			DI:Bloodlust,_
			DI:Bully,_
			DI:Compulsive Carousing,_
			DI:Greed,_
			DI:Impulsiveness,_
			DI:Innumerate,_
			#newitem(DI:Intolerance (Civilized People), -5, page(B140), cat(Mundane, Mental)),_
			DI:Lecherousness,_
			DI:Mundane Background,_
			DI:No Sense of Humor,_
			DI:Overconfidence,_
			DI:Stubbornness,_
			#newitem(DI:Sense of Duty (Clan/Tribe), -5, levelnames(Small Group), page(B153), cat(Mundane Mental, Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known"))_
		)_
	),_
	select5(_
		text("Primary Skills: Choose 1 of these survival skills."),_
		pointswanted(8),_
		itemswanted(1),_
		list(_
			SK:Survival (Arctic) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Bank) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Deep Ocean Vent) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Desert) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Fresh-Water Lake) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Island/Beach) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Jungle) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Mountain) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Open Ocean) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Plains) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Radioactive Wasteland) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Reef) #codes(upto 8pts, downto 8pts),_
			SK:Survival (River/Stream) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Salt-Water Sea) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Swampland) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Tropical Lagoon) #codes(upto 8pts, downto 8pts),_
			SK:Survival (Woodlands) #codes(upto 8pts, downto 8pts) _
		)_
	),_
	select6(_
		text("Primary Skills: Choose 12 points from these skills"),_
		pointswanted(12),_
		itemswanted(upto 2),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Axe/Mace #codes(upto 8pts, downto 4pts),_
			SK:Broadsword #codes(upto 8pts, downto 8pts),_
			SK:Spear #codes(upto 8pts, downto 4pts),_
			SK:Shield (Shield) #codes(upto 4pts, downto 4pts),_
			SK:Bow #codes(upto 8pts, downto 8pts),_
			SK:Knife #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Disc) #codes(upto 4pts, downto 4pts),_
			SK:Shortsword #codes(upto 8pts, downto 8pts),_
			SK:Thrown Weapon (Harpoon) #codes(upto 8pts, downto 8pts),_
			SK:Thrown Weapon (Stick) #codes(upto 4pts, downto 4pts),_
			SK:Two-Handed Axe/mace #codes(upto 12pts, downto 12pts),_
			SK:Two-Handed Sword #codes(upto 12pts, downto 12pts)_
		)_
	),_
	select7(_
		text("Choose two of the following Skills at 1 point."),_
		pointswanted(2),_
		itemswanted(2),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Intimidation #codes(upto 1pts),_
			SK:Carousing #codes(upto 1pts),_
			SK:Sex Appeal #codes(upto 1pts)_
		)_
	),_
	select8(#list(QuirkSelection))

Barbarian - Desert (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(barbarian from the desert. NEEDS the Barbarian template),_
	page(F117),_
	needs(TE:Barbarian (Fantasy)),_
	adds(_
			SK:Navigation (Land)=8pts,_
			SK:Riding=2pts,_
			SK:Stealth=2pts_
	)
Barbarian - Plains (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(barbarian from the Plains. NEEDS the Barbarian template),_
	page(F117),_
	needs(TE:Barbarian (Fantasy)),_
	adds(_
			SK:Navigation (Land)=4pts,_
			SK:Tracking=2pts,_
			SK:Stealth=2pts_
	),_
	select1(_
		text("Select one Skill."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Riding #codes(upto 4pts, downto 4pts),_
			SK:Running #codes(upto 4pts, downto 4pts),_
			SK:Teamster #codes(upto 4pts, downto 4pts)_
		)_
	)
Barbarian - Seafaring (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(barbarian from the sea. NEEDS the Barbarian template),_
	page(F117),_
	needs(TE:Barbarian (Fantasy)),_
	adds(_
			SK:Meteorology (Earthlike)=4pts,_
			SK:Navigation (Sea)=4pts,_
			SK:Seamanship=2pts,_
			SK:Swimming=2pts_
	)
Barbarian - Woodland (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(barbarian from the woodlands. NEEDS the Barbarian template),_
	page(F117),_
	needs(TE:Barbarian (Fantasy)),_
	adds(_
			SK:Camouflage=2pts,_
			SK:Climbing=2pts,_
			SK:Tracking=2pts,_
			SK:Traps=4pts,_
			SK:Stealth=2pts_
	)

Bard (Fantasy), displaycost(75),_
	cat(Character Templates),_
	description(Bards range from wandering minstrels who perform in taverns to divinely inspired singers in royal courts or great temples. Legend and fantasy often show them as specially privileged. This template can be used to create combat ready adventures who sing and tell tales when the battles are over; for such an adventurer, use most of the unspent points on weapon skills. Light infantry weapons such as bows are traditional for bards.),_
	page(F117),_
	sets(_
			ST:DX = 11,_
			ST:IQ = 12,_
			ST:HT = 11,_
			ST:Will = 10_
	),_
	adds(_
			AD:Charisma=1,_
			SK:Literature=4pts,_
			SK:Poetry=2pts,_
			SK:Singing=2pts,_
			SK:Musical Instrument=2pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 1 of the following advantages."),_
		pointswanted(10),_
		itemswanted(1),_
		list(_
			AD:Musical Ability #codes(upto 2, downto 2),_
			AD:Voice_
		)_
	),_
	select4(_
		text("Choose 15 points from amongst the following advantages, or take extra levels of Charisma [5/level] later:"),_
		pointswanted(upto 15),_
		itemswanted(upto 15),_
		list(_
			#list(GMAdvantages),_
			#newitem(AD:Additional Charisma, 5/10, existing(AD:Charisma)),_
			AD:Appearance #codes(upto 5, downto 1),_
			AD:Bard #codes(upto 3, downto 1),_
			AD:Cultural Adaptability,_
			AD:Eidetic Memory,_
			AD:Photographic Memory,_
			AD:Language talent,_
			#newitem(AD:Legal Immunity (Bardic Immunity), 10, mods(Legal Immunity), page(B65), cat(Mundane, Social)),_
			AD:Status #codes(upto 1, downto 1),_
			AD:Channeling_
		)_
	),_
	select5(_
		text("Choose -30 points chosen from among these disadvantages."),_
		pointswanted(-30),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Alcoholism,_
			DI:Bully,_
			DI:Chummy,_
			DI:Compulsive Carousing,_
			DI:Impulsiveness,_
			DI:Jealousy,_
			DI:Lecherousness,_
			DI:Post-Combat Shakes_
		)_
	),_
	select6(_
		text("Choose one of the following secondary Skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Hidden Lore #codes(upto 2pts, downto 2pts),_
			SK:Expert Skill (Bardic Lore) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Choose one of the following background Skills at 1 point."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Savoir-Faire (High Society) #codes(upto 1pts),_
			SK:Carousing #codes(upto 1pts),_
			SK:Public Speaking #codes(upto 1pts)_
		)_
	),_
	select8(_
		text("Choose two of the following background Skills at 1 point."),_
		pointswanted(2),_
		itemswanted(2),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#newitem(SK:Games (Riddles), IQ/E, default(IQ - 4), page(B197)) #codes(upto 1pts),_
			SK:Connoisseur (Literature) #codes(upto 1pts),_
			SK:Connoisseur (Music) #codes(upto 1pts),_
			SK:Connoisseur (Wine) #codes(upto 1pts),_
			SK:Heraldry #codes(upto 1pts),_
			SK:Propaganda #codes(upto 1pts),_
			SK:Observation #codes(upto 1pts),_
			SK:Sex Appeal #codes(upto 1pts),_
			SK:Diplomacy #codes(upto 1pts),_
			SK:Religious Ritual #codes(upto 1pts),_
			SK:Area Knowledge([Area]) #codes(upto 1pts),_
			SK:Current Affairs ([Regional]) #codes(upto 1pts),_
			SK:Current Affairs (Business) #codes(upto 1pts),_
			SK:Current Affairs (Headline News) #codes(upto 1pts),_
			SK:Current Affairs (High Culture) #codes(upto 1pts),_
			SK:Current Affairs (People) #codes(upto 1pts),_
			SK:Current Affairs (Politics) #codes(upto 1pts),_
			SK:Current Affairs (Popular Culture) #codes(upto 1pts),_
			SK:Current Affairs (Science & Technology) #codes(upto 1pts),_
			SK:Current Affairs (Sports) #codes(upto 1pts),_
			SK:Current Affairs (Travel) #codes(upto 1pts)_
		)_
	),_
	select9(#list(QuirkSelection))

Battle Wizard (Fantasy), displaycost(125*),_
	cat(Character Templates),_
	description(A rare breed. Battle wizards can master the intellectual intricacies of magic, but also keep alive - and concentrate on casting spells - amid the chaos of battle. Having a high enough skill level to reduce the energy cost of spells has a big payoff for them; high IQ and Magery give them this ability with all Hard spells. Includes the cost of one of the spell package lenses.),_
	page(F118),_
	sets(_
			ST:IQ = 14,_
			ST:HT = 11_
	),_
	ident(Magical),_
	adds(_
			AD:Magery=3,_
			AD:Magery 0,_
			AD:Military Rank=2,_
			DI:Duty=3,_
			SK:Thaumatology=1pts,_
			SK:Games (Magical Challenges)=1pts,_
			SK:Savoir-Faire (Military)=1pts_
			{SP:Lend Energy}=1pts,_
			{SP:Recover Energy}=1pts _
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 15 points from amongst the following advantages, or take extra levels of Military Rank [5/level] later:"),_
		pointswanted(upto 15),_
		itemswanted(upto 15),_
		list(_
			#list(GMAdvantages),_
			#newitem(AD:Additional Military Rank, 5/10, existing(AD:Military Rank)),_
			AD:Absolute Direction,_
			AD:3D Spatial Sense,_
			AD:Charisma,_
			AD:Combat Reflexes,_
			AD:Eidetic Memory,_
			AD:Photographic Memory,_
			AD:Fit,_
			AD:Very Fit,_
			LA:Language,_
			AD:Single-Minded,_
			AD:Versatile,_
			AD:Wealth #codes(upto 1, downto 1),_
			#newitem(AD:Ally (Bodyguard), 1/2/3/5/10, upto(5), levelnames(25% of starting points, 50% of starting points, 75% of starting points, 100% of starting points, 150% of starting points),_
						mods(Ally, Frequency of Appearance, Favor), page(B36), cat(Mundane, Social), initmods(Frequency: roll of  9 or less (Fairly often),_
						*1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			AD:Extra Will_
		)_
	),_
	select4(_
		text("Choose -40 points chosen from among these disadvantages."),_
		pointswanted(-40),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Bad Temper,_
			DI:Bloodlust,_
			DI:Callous,_
			DI:Code of Honor (Soldier's),_
			DI:Fanaticism,_
			DI:Greed,_
			DI:Impulsiveness,_
			DI:Overconfidence,_
			DI:Post-Combat Shakes,_
			DI:Pyromania,_
			DI:Selfish,_
			DI:Sense of Duty,_
			DI:Workaholic_
		)_
	),_
	select5(_
		text("Choose one of the following navigational Skills at 1 point."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Navigation (Air) #codes(upto 1pts),_
			SK:Navigation (Hyperspace) #codes(upto 1pts),_
			SK:Navigation (Land) #codes(upto 1pts),_
			SK:Navigation (Sea) #codes(upto 1pts),_
			SK:Navigation (Space) #codes(upto 1pts)_
		)_
	),_
	select6(_
		text("Choose one of the following secondary Skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Hiking #codes(upto 2pts, downto 2pts),_
			SK:Riding #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Choose one of the following secondary Skills at 4 points."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Innate Attack (Beam) #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Projectile) #codes(upto 4pts, downto 4pts),_
			SK:Broadsword #codes(upto 4pts, downto 4pts),_
			SK:Shortsword #codes(upto 4pts, downto 4pts),_
			SK:Staff #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select8(_
		text("Choose one of the following background Skills at 1 point."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Administration #codes(upto 1pts),_
			SK:Engineer (Combat) #codes(upto 1pts),_
			SK:Tactics #codes(upto 1pts),_
			SK:Leadership #codes(upto 1pts)_
		)_
	),_
	select9(_
		text("Choose one of the following background Skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Astronomy (Observational) #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore #codes(upto 2pts, downto 2pts),_
			SK:Occultism #codes(upto 2pts, downto 2pts),_
			SK:Research #codes(upto 2pts, downto 2pts),_
			SK:Cryptography #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Applied) #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Cryptology) #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Computer Science) #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Pure) #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Statistics) #codes(upto 2pts, downto 2pts),_
			SK:Mathematics (Surveying) #codes(upto 2pts, downto 2pts),_
			SK:Expert Skill (Military Science) #codes(upto 2pts, downto 2pts),_
			SK:Naturalist #codes(upto 2pts, downto 2pts),_
			SK:Theology #codes(upto 2pts, downto 2pts),_
			SK:Dreaming #codes(upto 2pts, downto 2pts),_
			SK:Meditation #codes(upto 2pts, downto 2pts),_
			SK:Alchemy #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select10(#list(QuirkSelection))

Battle Wizard - Bodyguard - Aura (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Battle Wizard template.),_
	page(F119),_
	needs(TE:Battle Wizard (Fantasy)),_
	ident(Magical),_
	adds(_
			SP:Armor=1pts,_
			SP:Great Haste=1pts,_
			SP:Haste=1pts,_
			SP:Lend Vitality=1pts,_
			SP:Magelock=1pts,_
			SP:Scryguard=1pts,_
			SP:Sense Foes=1pts,_
			SP:Shield=1pts,_
			SP:Aura=1pts,_
			SP:Detect Magic=1pts_
	)
Battle Wizard - Bodyguard - Apportation (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Battle Wizard template.),_
	page(F119),_
	needs(TE:Battle Wizard (Fantasy)),_
	ident(Magical),_
	adds(_
			SP:Armor=1pts,_
			SP:Great Haste=1pts,_
			SP:Haste=1pts,_
			SP:Lend Vitality=1pts,_
			SP:Magelock=1pts,_
			SP:Scryguard=1pts,_
			SP:Sense Foes=1pts,_
			SP:Shield=1pts,_
			SP:Apportation=1pts,_
			SP:Deflect Missile=1pts_
	)
Battle Wizard - Bodyguard - Fire (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Battle Wizard template.),_
	page(F119),_
	ident(Magical),_
	needs(TE:Battle Wizard (Fantasy)),_
	adds(_
			SP:Armor=1pts,_
			SP:Great Haste=1pts,_
			SP:Haste=1pts,_
			SP:Lend Vitality=1pts,_
			SP:Magelock=1pts,_
			SP:Scryguard=1pts,_
			SP:Sense Foes=1pts,_
			SP:Shield=1pts,_
			SP:Extinguish Fire=1pts,_
			SP:Ignite Fire=1pts_
	)
Battle Wizard - Bodyguard - Emotion (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Battle Wizard template.),_
	page(F119),_
	needs(TE:Battle Wizard (Fantasy)),_
	ident(Magical),_
	adds(_
			SP:Armor=1pts,_
			SP:Great Haste=1pts,_
			SP:Haste=1pts,_
			SP:Lend Vitality=1pts,_
			SP:Magelock=1pts,_
			SP:Scryguard=1pts,_
			SP:Sense Foes=1pts,_
			SP:Shield=1pts,_
			SP:Sense Emotion=1pts,_
			SP:Truthsayer=1pts_
	)
Battle Wizard - Kineticist (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Battle Wizard template.),_
	page(F119),_
	needs(TE:Battle Wizard (Fantasy)),_
	ident(Magical),_
	adds(_
			SP:Apportation=1pts,_
			SP:Armor=1pts,_
			SP:Deflect Missile=2pts,_
			SP:Flight=1pts,_
			SP:Haste=1pts,_
			SP:Levitation=1pts,_
			SP:Lighten Burden=1pts,_
			SP:Quick March=1pts,_
			SP:Shield=1pts_
	)
Battle Wizard - Pyrurge (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Battle Wizard template.),_
	page(F119),_
	needs(TE:Battle Wizard (Fantasy)),_
	ident(Magical),_
	adds(_
			SP:Continual Light=1pts,_
			SP:Create Fire=1pts,_
			SP:Deflect Energy=1pts,_
			SP:Explosive Fireball=1pts,_
			SP:Extinguish Fire=1pts,_
			SP:Fireball=2pts,_
			SP:Ignite Fire=1pts,_
			SP:Light=1pts,_
			SP:Shape Fire=1pts_
	)

Enchanter (Fantasy), displaycost(125*),_
	cat(Character Templates),_
	description(The enchanter specializes in creating magical objects. The wizard is more often an ally or patron for the adventurer than a member of the party. He may travel in search of rare magical materials or information, but might also recruit other people for such jobs. On the other hand, his knowledge of a wide range of commonly used spells can make him unexpectedly formidable. In some campaigns, GMs will want to allow enchanters as NPCs only. Cost includes one of the Enchanter lenses.),_
	page(F118),_
	sets(_
			ST:IQ = 14_
	),_
	ident(Magical),_
	adds(_
			AD:Single-Minded,_
			AD:Magery 0,_
			AD:Magery=2,_
			SK:Merchant=1pts,_
			SK:Accounting=1pts,_
			SK:Hazardous Materials (Magical Items)=1pts,_
			SK:Occultism=1pts,_
			SP:Analyze Magic=1pts,_
			SP:Apportation=1pts,_
			SP:Detect Magic=1pts,_
			SP:Enchant=4pts,_
			SP:Identify Spell=1pts,_
			SP:Ignite Fire=1pts,_
			SP:Lend Energy=1pts,_
			SP:Light=1pts,_
			SP:Purify Air=1pts,_
			SP:Recover Energy=1pts,_
			SP:Seek Earth=1pts,_
			SP:Seek Water=1pts,_
			SP:Sense Foes=1pts,_
			SP:Sound=1pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 20 points from amongst the following advantages."),_
		pointswanted(20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:High Manual Dexterity,_
			LA:Language,_
			AD:Lightning Calculator,_
			AD:Intuitive Mathematician,_
			AD:Wealth #codes(upto 2, downto 1),_
			#newitem(AD:Contact (Business Agent), 1/2/3/4, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),_
						upto(4), cat(Mundane, Social), mods(Contact, Frequency of Appearance, Reliability, Favor), page(B44),_
						initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
						| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			#newitem(AD:Ally (Apprentice), 1/2/3/5/10, upto(5), levelnames(25% of starting points, 50% of starting points, 75% of starting points, 100% of starting points, 150% of starting points),_
						mods(Ally, Frequency of Appearance, Favor), page(B36), cat(Mundane, Social), initmods(Frequency: roll of  9 or less (Fairly often),_
						*1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			#newitem(AD:Ally (Familiar), 1/2/3/5/10, upto(5), levelnames(25% of starting points, 50% of starting points, 75% of starting points, 100% of starting points, 150% of starting points),_
						mods(Ally, Frequency of Appearance, Favor), page(B36), cat(Mundane, Social), initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less),_
						group(Frequency of Appearance))_
					),_
			AD:Extra Will,_
			#newitem(AD:Patron (Wealthy Buyer), 10/15/20/25/30, mods(Frequency of Appearance, Patron, Favor), page(B72), cat(Mundane, Social),_
						initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			#newitem(AD:Signature Gear (Enchanted Items), 1/2, page(B85), cat(Mundane, Social)),_
			AD:Tenure,_
			#newitem(AD:Wild Talent (Spells at IQ+Magery), 20, displaycost(16), mods(Wild Talent), page(B99), cat(Supernatural, Mental), initmods(Focused, -20%, group(Wild Talent))),_
			AD:Versatile_
		)_
	),_
	select4(_
		text("Choose -40 points chosen from among these disadvantages."),_
		pointswanted(-40),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Absent-Mindedness,_
			DI:Code of Honor (Professional),_
			DI:Combat Paralysis,_
			DI:Curious,_
			DI:Greed,_
			DI:Loner,_
			DI:Miserliness,_
			DI:Wealth #codes(upto1, downto 1),_
			DI:Workaholic_
		)_
	),_
	select5(_
		text("Choose One of the following skills at 4 points."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Ritual Magic #codes(upto 4pts, downto 4pts),_
			SK:Thaumatology #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select6(_
		text("Choose three of the following skills."),_
		pointswanted(3),_
		itemswanted(3),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Animal Handling #codes(upto 1pts),_
			SK:Fortune-Telling #codes(upto 1pts),_
			SK:Hidden Lore #codes(upto 1pts),_
			SK:Research #codes(upto 1pts),_
			SK:Teaching #codes(upto 1pts),_
			SK:Archaeology #codes(upto 1pts),_
			SK:Artist #codes(upto 1pts),_
			SK:Astronomy #codes(upto 1pts),_
			SK:Jeweler #codes(upto 1pts),_
			SK:Mathematics (Applied) #codes(upto 1pts),_
			SK:Religious Ritual #codes(upto 1pts),_
			SK:Symbol Drawing #codes(upto 1pts),_
			SK:Alchemy #codes(upto 1pts),_
			SK:Herb Lore #codes(upto 1pts)_
		)_
	),_
	select7(_
		text("Choose One of the following Savoir-Faire skills."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Savoir-Faire (High Society) #codes(upto 1pts),_
			SK:Savoir-Faire (Magical) #codes(upto 1pts)_
		)_
	),_
	select8(#list(QuirkSelection))

Enchanter - Armour Maker (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Enchanter template.),_
	page(F119),_
	needs(TE:Enchanter (Fantasy)),_
	select1(_
		text("Select one Skill at 2 points and one at 4 points."),_
		pointswanted(6),_
		itemswanted(2),_
		list(_
			SP:Deflect #codes(upto 4pts, downto 2pts),_
			SP:Fortify #codes(upto 4pts, downto 2pts)_
		)_
	)
Enchanter - Magical Device Maker (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Enchanter template.),_
	page(F119),_
	needs(TE:Enchanter (Fantasy), SP:Enchant=8pts),_
	ident(Magical),_
	adds(_
			SP:Staff=2pts _
	)
Enchanter - Weapon Maker - Puissance (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Enchanter template.),_
	page(F119),_
	needs(TE:Enchanter (Fantasy)),_
	ident(Magical),_
	adds(_
			SP:Puissance=2pts _
	),_
	select1(_
		text("Select four spells from the Earth Collage, or add them later."),_
		pointswanted(upto 4),_
		itemswanted(upto 4),_
		list(_
			SP:Shape Earth #codes(upto 1pts),_
			SP:Seek Pass #codes(upto 1pts),_
			SP:Earth Vision #codes(upto 1pts),_
			SP:Earth to Stone #codes(upto 1pts),_
			SP:Create Earth #codes(upto 1pts),_
			SP:Earth to Air #codes(upto 1pts),_
			SP:Flesh to Stone #codes(upto 1pts),_
			SP:Stone to Earth #codes(upto 1pts),_
			SP:Predict Earth Movement #codes(upto 1pts),_
			SP:Sand Jet #codes(upto 1pts),_
			SP:Mud Jet #codes(upto 1pts),_
			SP:Stone Missile #codes(upto 1pts),_
			SP:Walk Through Earth #codes(upto 1pts),_
			SP:Earth to Water #codes(upto 1pts),_
			SP:Partial Petrifaction #codes(upto 1pts),_
			SP:Rain of Stones #codes(upto 1pts),_
			SP:Entombment #codes(upto 1pts),_
			SP:Essential Earth #codes(upto 1pts),_
			SP:Stone to FleshBody of Stone #codes(upto 1pts),_
			SP:Steelwraith #codes(upto 1pts),_
			SP:Purify Earth #codes(upto 1pts),_
			SP:Sandstorm #codes(upto 1pts),_
			SP:Earthquake #codes(upto 1pts),_
			SP:Volcano #codes(upto 1pts),_
			SP:Alter Terrain #codes(upto 1pts),_
			SP:Move Terrain #codes(upto 1, downto 1)_
		)_
	)
Enchanter - Weapon Maker - Accuracy (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Enchanter template.),_
	page(F119),_
	needs(TE:Enchanter (Fantasy)),_
	ident(Magical),_
	adds(_
			SP:Accuracy=2pts _
	),_
	select1(_
		text("Select four spells from the Air Collage."),_
		pointswanted(upto 4),_
		itemswanted(upto 4),_
		list(_
			SP:Seek Air #codes(upto 1pts),_
			SP:Create Air #codes(upto 1pts),_
			SP:No-Smell #codes(upto 1pts),_
			SP:Stench #codes(upto 1pts),_
			SP:Destroy Air #codes(upto 1pts),_
			SP:Odor #codes(upto 1pts),_
			SP:Shape Air #codes(upto 1pts),_
			SP:Air Jet #codes(upto 1pts),_
			SP:Air Vision #codes(upto 1pts),_
			SP:Body of Air #codes(upto 1pts),_
			SP:Devitalize Air #codes(upto 1pts),_
			SP:Walk on Air #codes(upto 1pts),_
			SP:Wall of Wind #codes(upto 1pts),_
			SP:Windstorm #codes(upto 1pts),_
			SP:Earth to Air #codes(upto 1pts),_
			SP:Clouds #codes(upto 1pts),_
			SP:Predict Weather #codes(upto 1pts),_
			SP:Wind #codes(upto 1pts),_
			SP:Rain #codes(upto 1pts),_
			SP:Concussion #codes(upto 1pts),_
			SP:Breathe Water #codes(upto 1pts),_
			SP:Breathe Water #codes(upto 1pts),_
			SP:Essential Air #codes(upto 1pts),_
			SP:Resist Lightning #codes(upto 1pts),_
			SP:Lightning #codes(upto 1pts),_
			SP:Air Vortex #codes(upto 1pts),_
			SP:Explosive Lightning #codes(upto 1pts),_
			SP:Lightning Whip #codes(upto 1pts),_
			SP:Shocking Touch #codes(upto 1pts),_
			SP:Spark Cloud #codes(upto 1pts),_
			SP:Spark Storm #codes(upto 1pts),_
			SP:Wall of Lightning #codes(upto 1pts),_
			SP:Warm #codes(upto 1pts),_
			SP:Cool #codes(upto 1pts),_
			SP:Ball of Lightning #codes(upto 1pts),_
			SP:Lightning Stare #codes(upto 1pts),_
			SP:Body of Lightning #codes(upto 1pts),_
			SP:Lightning Weapon #codes(upto 1pts),_
			SP:Sandstorm #codes(upto 1pts),_
			SP:Storm #codes(upto 1pts),_
			SP:Lightning Missiles #codes(upto 1pts),_
			SP:Lightning Armor #codes(upto 1pts),_
			SP:Body of Wind #codes(upto 1, downto 1)_
		)_
	)

Hedge Wizard (Fantasy), displaycost(75*),_
	cat(Character Templates),_
	description(Not every wizard is a mighty wonder-worker or an intellectual giant. In a magical setting, some mages are only talented enough to learn a few basic spells. Some specializations require specific advantages; for example, a healer needs either Empathy or Magery 1. Includes the cost of one of the Hedge Wizard lenses.),_
	page(F119),_
	sets(_
			ST:IQ = 12_
	),_
	ident(Magical),_
	adds(_
			AD:Magery 0,_
			AD:Social Regard (Feared)=1,_
			DI:Wealth=1,_
			SK:Occultism=4pts,_
			SK:Teaching=2pts,_
			SK:Hazardous Materials (Magic)=1pts,_
			SK:Staff=1pts_
	),_
	creates(_
				"SK:Area Knowledge (town/village), IQ/E, default(IQ - 4, "SK:Geography (local)" - 3), page(B176), cat(Everyman, Knowledge)" =1pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 15 points from amongst the following advantages."),_
		pointswanted(15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			#newitem(AD:Ally (Familiar), 1/2/3/5/10, upto(5), levelnames(25% of starting points, 50% of starting points, 75% of starting points, 100% of starting points, 150% of starting points),_
						mods(Ally, Frequency of Appearance, Favor), page(B36), cat(Mundane, Social), initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less),_
						group(Frequency of Appearance))_
					),_
			AD:Animal Empathy,_
			AD:Empathy,_
			AD:Magery #codes(upto 1, downto 1),_
			AD:Plant Empathy,_
			AD:Spirit Empathy,_
			AD:Unusual Background_
		)_
	),_
	select4(_
		text("Choose -15 points from amongst the following disadvantages."),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Bully,_
			DI:Code of Honor (Professional),_
			DI:Loner,_
			DI:Pacifism (Reluctant Killer),_
			#newitem(DI:Sense of Duty (Village), -5, levelnames(Small Group), page(B153), cat(Mundane Mental, Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
			DI:Pacifism (Cannot Harm Innocents)_
		)_
	),_
	select5(_
		text("Choose Three of the following Secondary Skills at 2 points."),_
		pointswanted(6),_
		itemswanted(3),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:First Aid #codes(upto 2pts, downto 2pts),_
			SK:Gardening #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore #codes(upto 2pts, downto 2pts),_
			SK:Meteorology (Earthlike) #codes(upto 2pts, downto 2pts),_
			SK:Meteorology (Gas Giants) #codes(upto 2pts, downto 2pts),_
			SK:Meteorology (Hostile Terrestrial) #codes(upto 2pts, downto 2pts),_
			SK:Meteorology (Ice Dwarfs) #codes(upto 2pts, downto 2pts),_
			SK:Meteorology (Ice Worlds) #codes(upto 2pts, downto 2pts),_
			SK:Meteorology (Rock Worlds) #codes(upto 2pts, downto 2pts),_
			SK:Navigation (Air) #codes(upto 2pts, downto 2pts),_
			SK:Navigation (Hyperspace) #codes(upto 2pts, downto 2pts),_
			SK:Navigation (Land) #codes(upto 2pts, downto 2pts),_
			SK:Navigation (Sea) #codes(upto 2pts, downto 2pts),_
			SK:Navigation (Space) #codes(upto 2pts, downto 2pts),_
			#newitem(SK:Professional Skill (Midwife), IQ/A, default(IQ - 5), page(B215), cat(Knowledge)) #codes(upto 2pts, downto 2pts),_
			SK:Expert Skill (Bardic Lore) #codes(upto 2pts, downto 2pts),_
			SK:Diagnosis #codes(upto 2pts, downto 2pts),_
			SK:Naturalist #codes(upto 2pts, downto 2pts),_
			SK:Pharmacy (Herbal) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select6(#list(QuirkSelection))

Hedge Wizard - Generalist (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Hedge Wizard template.),_
	page(F120),_
	needs(TE:Hedge Wizard (Fantasy)),_
	ident(Magical),_
	adds(_
			SP:Extinguish Fire=4pts,_
			SP:Ignite Fire=2pts,_
			SP:Light=2pts,_
			SP:Purify Water=2pts,_
			SP:Seek Plant=2pts,_
			SP:Seek Water=4pts,_
			SP:Sense Foes=2pts,_
			SP:Test Food=2pts_
	)
Hedge Wizard - Healer (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Hedge Wizard template.),_
	page(F120),_
	needs(TE:Hedge Wizard (Fantasy)),_
	ident(Magical),_
	adds(_
			SP:Awaken=2pts,_
			SP:Identify Plant=2pts,_
			SP:Lend Energy=4pts,_
			SP:Lend Vitality=2pts,_
			SP:Minor Healing=2pts,_
			SP:Seek Plant=2pts,_
			SP:Stop Bleeding=4pts,_
			SP:Test Food=2pts_
	)
Hedge Wizard - Weatherworker (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Hedge Wizard template.),_
	page(F120),_
	needs(TE:Hedge Wizard (Fantasy)),_
	ident(Magical),_
	adds(_
			SP:Create Air=2pts,_
			SP:Predict Weather=12pts,_
			SP:Purify Air=2pts,_
			SP:Shape Air=2pts,_
			SP:Walk on Air=2pts_
	)

Holy Man (Fantasy), displaycost(75),_
	cat(Character Templates),_
	description(The holy man isn't necessarily an ordained priest; the gods make their own choices of who they should favor. The mark of a holy man is his possession of supernatural powers and his ability to inspire others to worship his god. Holy men often have taken vows of poverty.),_
	page(F120),_
	sets(_
			ST:IQ = 12,_
			ST:HT = 11,_
			ST:Will = 14_
	),_
	adds(_
			AD:Charisma=2,_
			SK:Public SPeaking=2pts,_
			SK:Teaching=4pts,_
			SK:Religious Ritual=4pts,_
			SK:Theology=4pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose one of the following advantages."),_
		pointswanted(10),_
		itemswanted(atleast 1),_
		list(_
			AD:Blessed,_
			AD:Channeling,_
			AD:Medium,_
			AD:Power Investiture #codes(upto 1, downto 1)_
		)_
	),_
	select4(_
		text("Choose 15 points from amongst the following advantages, or take an extra levels Charisma [5/level] of Power Investiture [10/level] later:"),_
		pointswanted(upto 15),_
		itemswanted(upto 15),_
		list(_
			#list(GMAdvantages),_
			#newitem(AD:Additional Power Investiture, 5/10, existing(AD:Power Investiture)),_
			#newitem(AD:Additional Charisma, 5/10, existing(AD:Charisma)),_
			#newitem(LA:Language (Scriptural), 2/4, page(B24), mods(Language), upto(3 LimitingTotal), levelnames([None], Broken, Accented, Native), cat(Mundane, Social, Language, Language Spoken, Language Written)) #codes(upto 3, downto 3),_
			#newitem(AD:Ally (Disciple), 1/2/3/5/10, upto(5), levelnames(25% of starting points, 50% of starting points, 75% of starting points, 100% of starting points, 150% of starting points),_
						mods(Ally, Frequency of Appearance, Favor), page(B36), cat(Mundane, Social), initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less),_
						group(Frequency of Appearance))_
					),_
			AD:Animal Empathy,_
			AD:Empathy,_
			AD:Clerical Investment,_
			AD:Devotion,_
			AD:Empathy,_
			AD:Sensitive,_
			AD:Hard to Kill,_
			AD:Higher Purpose,_
			AD:Plant Empathy,_
			AD:Reawakened,_
			AD:Religious Rank,_
			AD:Spirit Empathy,_
			AD:True Faith,_
			AD:Voice _
		)_
	),_
	select5(_
		text("Choose -40 points from amongst the following disadvantages."),_
		pointswanted(-40),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Charitable,_
			DI:Discipline of Faith,_
			DI:Discipline of Faith (Asceticism),_
			DI:Discipline of Faith (Monasticism),_
			DI:Discipline of Faith (Mysticism),_
			DI:Discipline of Faith (Ritualism),_
			DI:Fanaticism,_
			DI:Pacifism (Cannot Kill),_
			DI:Pacifism (Self-Defense Only),_
			DI:Pacifism (Reluctant Killer),_
			DI:Pacifism (Cannot Harm Innocents),_
			DI:Honesty,_
			DI:Selfish,_
			DI:Sense of Duty,_
			DI:Social Stigma (Excommunicated),_
			DI:Vow_
		)_
	),_
	select6(_
		text("Choose 4 points in the following skills, or take 2 divinly granted spells"),_
		pointswanted(upto 4),_
		itemswanted(upto 2),_
		list(_
			SK:Detect Lies #codes(upto 4pts, downto 4pts),_
			SK:Mental Strength #codes(upto 4pts, downto 4pts),_
			SK:Hidden Lore (Spirit Lore) #codes(upto 4pts, downto 4pts),_
			SK:Enthrallment (Persuade) #codes(upto 2pts, downto 2pts),_
			SK:Enthrallment (Sway Emotions) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Choose one of the following skills."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Singing #codes(upto 1pts),_
			SK:Dancing #codes(upto 1pts),_
			SK:Administration #codes(upto 1pts),_
			SK:Architecture #codes(upto 1pts),_
			SK:Poetry #codes(upto 1pts),_
			SK:Writing #codes(upto 1pts),_
			SK:Musical Instrument #codes(upto 1pts)_
		)_
	),_
	select8(_
		text("Choose one of the following skills."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Expert Skill (Thanatology) #codes(upto 1pts),_
			SK:Dreaming #codes(upto 1pts),_
			SK:Exorcism #codes(upto 1pts),_
			SK:Meditation #codes(upto 1pts)_
		)_
	),_
	select9(#list(QuirkSelection))

Knight (Fantasy), displaycost(75),_
	cat(Character Templates),_
	description(A knight is an aristocratic warrior, able to afford the costliest battle gear and the time to practice its use. The standard medieval version is a heavy cavalry man. This template defines a heroic knight who actually lives by the chivalric standards of honor.),_
	page(F121),_
	sets(_
			ST:ST = 11,_
			ST:DX = 11,_
			ST:HT = 11_
	),_
	adds(_
			AD:Fit,_
			AD:Status=1,_
			DI:Code of Honor (Chivalry),_
			SK:Lance=4pts,_
			SK:Riding (Horse)=4pts,_
			SK:Shield (Shield)=2pts,_
			SK:Heraldry=2pts,_
			SK:Leadership=2pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 30 points from the following advantages (either Very wealthy [30] or Wealthy [20] and Signature Gear [10])."),_
		pointswanted(30),_
		itemswanted(atleast 1),_
		list(_
			AD:Wealth #codes(upto 3, downto 2),_
			AD:Signature Gear #codes(upto 10, downto 10)_
		)_
	),_
	select4(_
		text("Choose 15 points chosen from among these advantages. Or choose 5 points from among these advantages and replace the advantage Fit with Very Fit [+10] later:"),_
		pointswanted(atleast 5, upto 15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Charisma,_
			AD:Combat Reflexes,_
			AD:Fearlessness,_
			AD:Higher Purpose,_
			AD:Independent Income,_
			AD:Legal Enforcement Powers_
		)_
	),_
	select5(_
		text("Choose -25 points chosen from among these disadvantages."),_
		pointswanted(-25),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Compulsive Carousing,_
			DI:Compulsive Generosity,_
			DI:Debt,_
			DI:Discipline of Faith (Monasticism),_
			DI:Duty,_
			DI:Fanaticism,_
			#newitem(DI:Intolerance (Commoners), -5, page(B140), cat(Mundane, Mental)),_
			#newitem(DI:Intolerance (Unbelievers), -5, page(B140), cat(Mundane, Mental)),_
			DI:Overconfidence,_
			DI:Selfish,_
			DI:Stubbornness,_
			#newitem(DI:Sense of Duty (The Weak), -10, levelnames(Large Group), page(B153), cat(Mundane Mental, Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
			#newitem(DI:Sense of Duty (Vassals), -5, levelnames(Small Group), page(B153), cat(Mundane Mental, Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
			DI:Vow_
		)_
	),_
	select6(_
		text("Choose One of the following weapon skills."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Axe/Mace #codes(upto 2pts, downto 2pts),_
			SK:Broadsword #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Choose Two of the following  skills."),_
		pointswanted(2),_
		itemswanted(2),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Brawling #codes(upto 1pts),_
			SK:Jumping #codes(upto 1pts),_
			SK:Carousing #codes(upto 1pts),_
			SK:Singing #codes(upto 1pts),_
			SK:Dancing #codes(upto 1pts),_
			SK:Falconry #codes(upto 1pts),_
			SK:Tracking #codes(upto 1pts),_
			SK:Religious Ritual #codes(upto 1pts),_
			SK:Tactics #codes(upto 1pts),_
			#newitem(SK:Games (Tournament Rules), IQ/E, default(IQ - 4), page(B197)) #codes(upto 1pts)_
		)_
	),_
	select8(_
		text("Choose one."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Savoir-Faire #codes(upto 2pts, downto 2pts),_
			SK:Savoir-Faire (Dojo) #codes(upto 2pts, downto 2pts),_
			SK:Savoir-Faire (High Society) #codes(upto 2pts, downto 2pts),_
			SK:Savoir-Faire (Mafia) #codes(upto 2pts, downto 2pts),_
			SK:Savoir-Faire (Magical) #codes(upto 2pts, downto 2pts),_
			SK:Savoir-Faire (Military) #codes(upto 2pts, downto 2pts),_
			SK:Savoir-Faire (Police) #codes(upto 2pts, downto 2pts),_
			SK:Savoir-Faire (Servant) #codes(upto 2pts, downto 2pts) _
		)_
	),_
	select9(#list(QuirkSelection))

Merchant (Fantasy), displaycost(75),_
	cat(Character Templates),_
	description(Merchants come in many varieties. This template fits somewhere in between the fast-talking man at the stall in the marketplace and the merchant prince whose house is a castle in all but name. This merchant is rich enough to engage in long-distance trade, but not rich enough to hire other people to journey for him - the kind most likely to have adventures, or create them for other people. Earnings from his trade venture are not represented by monthly job rolls. The merchant has no earnings while he's travelling, but only when he stops to sell his goods, at the end of the journey or along the way. At that point, determine what his goods sell for, and what, if anything, he can buy to carry back.),_
	page(F121),_
	sets(_
			ST:IQ = 12,_
			ST:HT = 11_
	),_
	adds(_
			AD:Wealth=3,_
			DI:Code of Honor (Professional),_
			SK:Merchant=4pts,_
			SK:Accounting=2pts,_
			SK:Leadership=1pts_
	),_
	creates(_
				"AD:Reputation (Keeps his Bargins), 5/10, mods(Reputation, Reputation Advantage), page(B27),upto(4), cat(Mundane, Social, Influence), initmods(People Affected: All Tradesmen, *2/5, shortname(All Tradesmen), group(Reputation) | Frequency of Recognition: All the time, *1, shortname(All the time), group(Reputation)), conditional(+1 to ST:Reaction)",_
				"SK:Area Knowledge (Trade route), IQ/E, default(IQ - 4, "SK:Geography (local)" - 3), page(B176), cat(Everyman, Knowledge)" =2pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 20 points chosen from among these advantages, or take extra levels of Status [5/level], or increase wealth from Very Wealthy to Filthy Rich for [+20] later:"),_
		pointswanted(upto 20),_
		itemswanted(upto 20),_
		list(_
			#list(GMAdvantages),_
			#newitem(AD:Additional Status, 5/10, existing(AD:Status)),_
			#newitem(AD:Ally (Caravan Guards), 1/2/3/5/10, upto(5), levelnames(25% of starting points, 50% of starting points, 75% of starting points, 100% of starting points, 150% of starting points),_
						mods(Ally, Frequency of Appearance, Favor), page(B36), cat(Mundane, Social), initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less),_
						group(Frequency of Appearance))_
					),_
			#newitem(AD:Ally (Sailors), 1/2/3/5/10, upto(5), levelnames(25% of starting points, 50% of starting points, 75% of starting points, 100% of starting points, 150% of starting points),_
						mods(Ally, Frequency of Appearance, Favor), page(B36), cat(Mundane, Social), initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less),_
						group(Frequency of Appearance))_
					),_
			#newitem(AD:Ally (Junior Partner), 1/2/3/5/10, upto(5), levelnames(25% of starting points, 50% of starting points, 75% of starting points, 100% of starting points, 150% of starting points),_
						mods(Ally, Frequency of Appearance, Favor), page(B36), cat(Mundane, Social), initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less),_
						group(Frequency of Appearance))_
					),_
			AD:Business Acumen,_
			AD:Charisma,_
			#newitem(AD:Contact (Banker), 1/2/3/4, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),_
						upto(4), cat(Mundane, Social), mods(Contact, Frequency of Appearance, Reliability, Favor), page(B44),_
						initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
						| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			#newitem(AD:Contact (Guildmaster), 1/2/3/4, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),_
						upto(4), cat(Mundane, Social), mods(Contact, Frequency of Appearance, Reliability, Favor), page(B44),_
						initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
						| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			#newitem(AD:Contact (Innkeeper), 1/2/3/4, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),_
						upto(4), cat(Mundane, Social), mods(Contact, Frequency of Appearance, Reliability, Favor), page(B44),_
						initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
						| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			#newitem(AD:Contact (Foreign Merchant), 1/2/3/4, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),_
						upto(4), cat(Mundane, Social), mods(Contact, Frequency of Appearance, Reliability, Favor), page(B44),_
						initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
						| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			#newitem(AD:Contact Group (Bankers), 5/10/15/20, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),_
						upto(4), cat(Mundane, Social), mods(Contact Group, Frequency of Appearance, Reliability, Favor), page(B44),_
						initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
						| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			#newitem(AD:Contact Group (Guildmasters), 5/10/15/20, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),_
						upto(4), cat(Mundane, Social), mods(Contact Group, Frequency of Appearance, Reliability, Favor), page(B44),_
						initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
						| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			#newitem(AD:Contact Group (Innkeepers), 5/10/15/20, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),_
						upto(4), cat(Mundane, Social), mods(Contact Group, Frequency of Appearance, Reliability, Favor), page(B44),_
						initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
						| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			#newitem(AD:Contact Group (Foreign Merchants), 5/10/15/20, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21),_
						upto(4), cat(Mundane, Social), mods(Contact Group, Frequency of Appearance, Reliability, Favor), page(B44),_
						initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) _
						| Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			LA:Language,_
			AD:Language Talent,_
			AD:Lightning Calculator_
		)_
	),_
	select4(_
		text("Choose -35 points chosen from among these disadvantages."),_
		pointswanted(-35),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Bad Temper,_
			DI:Bully,_
			DI:Debt,_
			DI:Gluttony,_
			DI:Greed,_
			DI:Jealousy,_
			DI:Lecherousness,_
			DI:Miserliness,_
			DI:Overweight,_
			DI:Fat,_
			#newitem(DI:Odious Personal Habit (Ostentatious), -5/-10, upto(3), page(B22), cat(Mundane, Social, Other Physical Features),_
						conditional(-1 to ST:Reaction when "people notice your problem")_
					) #codes(upto1, downto 1),_
			DI:Selfish,_
			DI:Workaholic_
		)_
	),_
	select5(_
		text("Choose One of the following skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Riding #codes(upto 2pts, downto 2pts),_
			SK:Shiphandling (Ship) #codes(upto 2pts, downto 2pts),_
			SK:Hiking #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select6(_
		text("Choose Two of the following  skills."),_
		pointswanted(2),_
		itemswanted(2),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Crossbow #codes(upto 1pts),_
			SK:Knife #codes(upto 1pts),_
			SK:Thrown Weapon (Spear) #codes(upto 1pts),_
			SK:Guns (Musket) #codes(upto 1pts),_
			SK:Guns (Pistol) #codes(upto 1pts),_
			SK:Guns (Rifle) #codes(upto 1pts),_
			SK:Guns (Shotgun) #codes(upto 1pts),_
			SK:Current Affairs (Business) #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Savoir-Faire (High Society) #codes(upto 1pts),_
			SK:Savoir-Faire (Military) #codes(upto 1pts),_
			SK:Savoir-Faire (High Society) #codes(upto 1pts),_
			SK:Seamanship #codes(upto 1pts),_
			SK:Scrounging #codes(upto 1pts),_
			SK:Carousing #codes(upto 1pts),_
			SK:Bow #codes(upto 1pts),_
			SK:Staff #codes(upto 1pts),_
			SK:Finance #codes(upto 1pts),_
			SK:Smuggling #codes(upto 1pts),_
			SK:Streetwise #codes(upto 1pts),_
			SK:Sling #codes(upto 1pts),_
			SK:Diplomacy #codes(upto 1pts),_
			SK:Administration #codes(upto 1pts),_
			SK:Connoisseur (Wine) #codes(upto 1pts),_
			SK:Connoisseur (Visual Arts) #codes(upto 1pts),_
			SK:Fast-Talk #codes(upto 1pts),_
			SK:Freight Handling #codes(upto 1pts),_
			SK:Meteorology (Earthlike) #codes(upto 1pts),_
			SK:Navigation (Land) #codes(upto 1pts),_
			SK:NAvigation (Sea) #codes(upto 1pts),_
			SK:Packing #codes(upto 1pts),_
			SK:Politics #codes(upto 1pts),_
			SK:Public Speaking #codes(upto 1pts),_
			SK:Law #codes(upto 1pts),_
			SK:Veterinary #codes(upto 1pts),_
			SK:Detect Lies #codes(upto 1pts)_
		)_
	),_
	select7(#list(QuirkSelection))

Peasant Adventurer (Fantasy), displaycost(75),_
	cat(Character Templates),_
	description(Not content with life on the farm, you've left home to look for a more interesting life. Better pay wouldn't hurt, but money's not your main motivation; you never seem to stay ahead despite occasional windfalls. You aren't an outright bandit or rebel, though you may think you're as good a man as any aristocrat. You remain a simple soul, with the virtues and vices of a common man - on a bigger scale than usual.),_
	page(F122),_
	sets(_
			ST:ST = 12,_
			ST:DX = 11,_
			ST:HT = 12,_
			ST:Perception = 11_
	),_
	adds(_
			AD:Fit,_
			DI:Wealth=1,_
			SK:Brawling=4pts,_
			SK:Knife=4pts,_
			SK:Hiking=2pts,_
			SK:Scrounging=1pts,_
			SK:Stealth=2pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 15 points chosen from among these advantages. Or choose 5 points from among these advantages and replace the advantage Fit with Very Fit [+10] later:"),_
		pointswanted(atleast 5, upto 15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Animal Empathy,_
			PE:Alcohol Tolerance,_
			AD:Animal Friend,_
			AD:Charisma,_
			AD:Combat Reflexes,_
			AD:Green Thumb,_
			AD:Hard to Kill,_
			AD:High Pain Threshold,_
			AD:Luck,_
			AD:Outdoorsman,_
			AD:Rapid Healing,_
			AD:Very Rapid Healing,_
			AD:Temperature Tolerance_
		)_
	),_
	select4(_
		text("Choose -30 points chosen from among these disadvantages."),_
		pointswanted(-30),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Alcoholism,_
			DI:Berserk,_
			DI:Chummy,_
			DI:Compulsive Carousing,_
			DI:Compulsive Generosity,_
			DI:Delusion,_
			DI:Gluttony,_
			DI:Ham-Fisted,_
			DI:Impulsiveness,_
			DI:Intolerance,_
			DI:Overconfidence,_
			DI:Pacifism (Cannot Harm Innocents),_
			#newitem(DI:Sense of Duty (Village), -5, levelnames(Small Group), page(B153), cat(Mundane Mental, Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
			#newitem(DI:Sense of Duty (Poor People), -10, levelnames(Large Group), page(B153), cat(Mundane Mental, Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
			DI:Stubbornness_
		)_
	),_
	select5(_
		text("Choose One of the following weapon skills."),_
		pointswanted(8),_
		itemswanted(1),_
		list(_
			SK:Axe/Mace #codes(upto 8pts, downto 8pts),_
			SK:Spear #codes(upto 8pts, downto 8pts),_
			SK:Staff #codes(upto 8pts, downto 8pts),_
			SK:Two-Handed Axe/Mace #codes(upto 8pts, downto 8pts)_
		)_
	),_
	select6(_
		text("Choose 4 points from the following skills."),_
		pointswanted(4),_
		itemswanted(atleast 1),_
		list(_
			SK:Farming #codes(upto 4pts, downto 4pts),_
			SK:Boating (Sailboat) #codes(upto 2pts, downto 2pts),_
			SK:Boating (Unpowered) #codes(upto 2pts, downto 2pts),_
			SK:Fishing #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Choose One of the following weapon skills."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),_
			SK:Bow #codes(upto 4pts, downto 4pts),_
			SK:Sling #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select8(_
		text("Choose One of the following skills."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Games #codes(upto 1pts),_
			SK:Carousing #codes(upto 1pts),_
			SK:Dancing #codes(upto 1pts),_
			SK:Sports #codes(upto 1pts)_
		)_
	),_
	select9(_
		text("Choose One of the following skills."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Carpentry #codes(upto 1pts),_
			SK:Leatherworking #codes(upto 1pts),_
			SK:Masonry #codes(upto 1pts),_
			SK:Teamster #codes(upto 1pts)_
		)_
	),_
	select10(_
		text("Choose One of the following skills."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Meteorology (Earthlike) #codes(upto 2pts, downto 2pts),_
			SK:Tracking #codes(upto 2pts, downto 2pts),_
			SK:Naturalist #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select11(#list(QuirkSelection))

Scholar (Fantasy), displaycost(76),_
	cat(Character Templates),_
	description(Scholars most often appear as NPCs, giving cryptic advice to bands of adventurers who come to consult them. But nothing prevents a scholar from picking up a few combat skills and going out to find his own answers. This template provides a start in that direction by including a few less sedate skills picked up during the scholars student days.),_
	page(F123),_
	sets(_
			ST:IQ = 14,_
			ST:Perception = 10_
	),_
	x(#InputReplace("Specify a second language here:", "[Language]", , "Language")),_
	adds(_
			LA:Language (Spoken) = 2 respond "[Language]",_
			LA:Language (Written) = 3 respond "[Language]",_
			DI:Code of Honor (Professional),_
			SK:Research=2pts,_
			SK:Writing=1pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 20 points chosen from among these advantages."),_
		pointswanted(20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Wealth #codes(upto 1, downto 1),_
			AD:Eidetic Memory,_
			AD:Photographic Memory,_
			AD:Language Talent,_
			AD:Less Sleep,_
			AD:Sage,_
			AD:Single-Minded,_
			AD:Status_
		)_
	),_
	select4(_
		text("Choose -30 points chosen from among these disadvantages."),_
		pointswanted(-30),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Absent-Mindedness,_
			DI:Bad Sight (Nearsighted),_
			DI:Bad Temper,_
			DI:Bully,_
			DI:Combat Paralysis,_
			DI:Curious,_
			DI:Discipline of Faith (Monasticism),_
			#newitem(DI:Duty (Teaching), -2/-5/-10/-15, displaycost(-5/-10), mods(Duty), page(B134), cat(Mundane, Social), levelnames("6 or less (quite rarely)", "9 or less (fairly often)", "12 or less (quite often)", "15 or less (almost always)")) #codes(upto 3, downto 2),_
			DI:Indecisive,_
			DI:Jealousy,_
			DI:Lame (Crippled Legs),_
			DI:Loner,_
			#newitem(DI:Odious Personal Habit (Lecturing), -5/-10, upto(3), page(B22), cat(Mundane, Social, Other Physical Features),_
						conditional(-1 to ST:Reaction when "people notice your problem")_
					) #codes(upto1, downto 1),_
			DI:Pacifism (Cannot Kill),_
			DI:Pacifism (Self-Defense Only),_
			DI:Pacifism (Reluctant Killer),_
			DI:Pacifism (Cannot Harm Innocents),_
			DI:Pacifism (Total Nonviolence),_
			DI:Selfish,_
			DI:Skinny,_
			DI:Truthfulness,_
			DI:Unfit,_
			DI:Very Unfit,_
			DI:Wealth #codes(upto 1, downto 1)_
		)_
	),_
	select5(_
		text("Choose One primary field of study from the following skills at 16pts. If you take Astronomy you must take Mathematics (Applied) in the next selection window."),_
		pointswanted(16),_
		itemswanted(1),_
		list(_
			SK:Occultism #codes(upto 16pts, downto 16pts),_
			SK:Astronomy #codes(upto 16pts, downto 16pts),_
			SK:Astronomy (Observational) #codes(upto 16pts, downto 16pts),_
			SK:Geography ([Regional]) #codes(upto 16pts, downto 16pts),_
			SK:Geography (Earthlike) #codes(upto 16pts, downto 16pts),_
			SK:Geography (Gas Giants) #codes(upto 16pts, downto 16pts),_
			SK:Geography (Hostile Terrestrial) #codes(upto 16pts, downto 16pts),_
			SK:Geography (Ice Dwarfs) #codes(upto 16pts, downto 16pts),_
			SK:Geography (Ice Worlds) #codes(upto 16pts, downto 16pts),_
			SK:Geography (Political) #codes(upto 16pts, downto 16pts),_
			SK:Geography (Rock Worlds) #codes(upto 16pts, downto 16pts),_
			SK:History #codes(upto 16pts, downto 16pts),_
			SK:Expert Skill (Military Science) #codes(upto 16pts, downto 16pts),_
			SK:Expert Skill (Natural Philosophy) #codes(upto 16pts, downto 16pts),_
			SK:Philosophy #codes(upto 16pts, downto 16pts),_
			SK:Expert Skill (Political Science) #codes(upto 16pts, downto 16pts),_
			SK:Theology #codes(upto 16pts, downto 16pts),_
			SK:Thaumatology #codes(upto 16pts, downto 16pts)_
		)_
	),_
	select6(_
		text("Choose Two secondary field of study from the following skills at 1pt each.  If you took Astronomy in the last selection window, or take it here, you must also take Mathematics (Applied)."),_
		pointswanted(2),_
		itemswanted(2),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Occultism #codes(upto 1pts),_
			SK:Astronomy #codes(upto 1pts),_
			SK:Astronomy (Observational) #codes(upto 1pts),_
			SK:Mathematics (Applied) #codes(upto 1pts),_
			SK:Geography ([Regional]) #codes(upto 1pts),_
			SK:Geography (Earthlike) #codes(upto 1pts),_
			SK:Geography (Gas Giants) #codes(upto 1pts),_
			SK:Geography (Hostile Terrestrial) #codes(upto 1pts),_
			SK:Geography (Ice Dwarfs) #codes(upto 1pts),_
			SK:Geography (Ice Worlds) #codes(upto 1pts),_
			SK:Geography (Political) #codes(upto 1pts),_
			SK:Geography (Rock Worlds) #codes(upto 1pts),_
			SK:History #codes(upto 1pts),_
			SK:Expert Skill (Military Science) #codes(upto 1pts),_
			SK:Expert Skill (Natural Philosophy) #codes(upto 1pts),_
			SK:Philosophy #codes(upto 1pts),_
			SK:Expert Skill (Political Science) #codes(upto 1pts),_
			SK:Theology #codes(upto 1pts),_
			SK:Thaumatology #codes(upto 1pts)_
		)_
	),_
	select7(_
		text("Choose One from the following skills at 1pt."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Administration #codes(upto 1pts),_
			SK:Public Speaking #codes(upto 1pts),_
			SK:Teaching #codes(upto 1pts)_
		)_
	),_
	select8(_
		text("Choose Two from the following skills at 2pts each."),_
		pointswanted(4),_
		itemswanted(2),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Brawling #codes(upto 2pts, downto 2pts),_
			SK:Games #codes(upto 2pts, downto 2pts),_
			SK:Savoir-Faire (High Society) #codes(upto 2pts, downto 2pts),_
			SK:Scrounging #codes(upto 2pts, downto 2pts),_
			SK:Carousing #codes(upto 2pts, downto 2pts),_
			SK:Singing #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select9(#list(QuirkSelection))

Slayer (Fantasy), displaycost(125),_
	cat(Character Templates),_
	description(Most warriors specialize in fighting a single race or similar races. The slayer specializes in defeating foes with extraordinary abilities: gigantic monsters, undead, evil sorcerers, or the like.),_
	page(F123),_
	sets(_
			ST:ST = 11,_
			ST:DX = 12,_
			ST:IQ = 12,_
			ST:HT = 11_
	),_
	adds(_
			AD:Fit,_
			AD:Higher Purpose,_
			DI:Pacifism (Cannot Harm Innocents)_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose one from among these advantages."),_
		pointswanted(15),_
		itemswanted(1),_
		list(_
			AD:Combat Reflexes,_
			AD:Danger Sense,_
			AD:Peripheral Vision_
		)_
	),_
	select4(_
		text("Choose 15 points from among these advantages. or chose 5 points and replace fit with Very Fit"),_
		pointswanted(atleast 5, upto 15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Ambidexterity,_
			AD:Blessed (Heroic Feat; [Attribute]),_
			AD:Fearlessness,_
			AD:Hard to Kill,_
			AD:Night Vision,_
			AD:Signature Gear,_
			AD:Single-Minded,_
			AD:True Faith_
		)_
	),_
	select5(_
		text("Choose -30 points chosen from among these disadvantages."),_
		pointswanted(-30),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Bloodlust,_
			DI:Callous,_
			DI:Compulsive Generosity,_
			#newitem(DI:Enemy (Specific Monster), -5/-10/-20, upto(3), mods(Enemy, Evil Twin, Frequency of Appearance), page(B135),_
						cat(Mundane, Social), levelnames("Less powerful than the PC", "Equal in power to the PC", "More powerful than the PC"),_
						initmods(Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))_
					),_
			DI:Fanaticism,_
			DI:Greed,_
			DI:Loner,_
			DI:Nightmares,_
			DI:No Sense of Humor,_
			DI:Obsession,_
			DI:Overconfidence,_
			#newitem(DI:Sense of Duty (Victims of Monsters), -2/-5/-10/-15/-20, levelnames(Individual, Small Group, Large Group, Entire Race, Every Living Being), page(B153), upto(5), cat(Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
			DI:Weirdness Magnet_
		)_
	),_
	select6(_
		text("Choose One from the following skills at 8pts each."),_
		pointswanted(8),_
		itemswanted(1),_
		list(_
			SK:Hidden Lore #codes(upto 8pts, downto 8pts),_
			SK:Hidden Lore (Conspiracies) #codes(upto 8pts, downto 8pts),_
			SK:Hidden Lore (Demon Lore) #codes(upto 8pts, downto 8pts),_
			SK:Hidden Lore (Faerie Lore) #codes(upto 8pts, downto 8pts),_
			SK:Hidden Lore (Spirit Lore) #codes(upto 8pts, downto 8pts),_
			SK:Occultism #codes(upto 8pts, downto 8pts),_
			SK:Biology (Earthlike) #codes(upto 8pts, downto 8pts),_
			SK:Theology #codes(upto 8pts, downto 8pts),_
			SK:Expert Skill (Thanatology) #codes(upto 8pts, downto 8pts),_
			SK:Weird Science #codes(upto 8pts, downto 8pts)_
		)_
	),_
	select7(_
		text("Choose One from the following skills at 4pts each."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Architecture #codes(upto 4pts, downto 4pts),_
			SK:Interrogation #codes(upto 4pts, downto 4pts),_
			SK:Research #codes(upto 4pts, downto 4pts),_
			SK:Streetwise #codes(upto 4pts, downto 4pts),_
			SK:Observation #codes(upto 4pts, downto 4pts),_
			SK:Tracking #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select8(_
		text("Choose One from the following skills at 4pts each."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Crossbow #codes(upto 4pts, downto 4pts),_
			SK:Knife #codes(upto 4pts, downto 4pts),_
			SK:Liquid Projector (Flamethrower) #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Harpoon) #codes(upto 4pts, downto 4pts),_
			SK:Bow #codes(upto 4pts, downto 4pts),_
			SK:Polearm #codes(upto 4pts, downto 4pts),_
			SK:net #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select9(_
		text("Choose One from the following skills at 2pts each."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Camouflage #codes(upto 2pts, downto 2pts),_
			SK:Stealth #codes(upto 2pts, downto 2pts),_
			SK:Disguise #codes(upto 2pts, downto 2pts),_
			SK:Shadowing #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select10(_
		text("Choose One from the following skills at 2pts each."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Forced Entry #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Battlesuits) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Body Armor) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Force Shields) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Heavy Weapons) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Melee Weapons) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Missile Weapons) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Small Arms) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Vehicular Armor) #codes(upto 2pts, downto 2pts),_
			SK:Explosives (Demolition) #codes(upto 2pts, downto 2pts),_
			SK:Explosives (Explosive Ordnance Disposal) #codes(upto 2pts, downto 2pts),_
			SK:Explosives (Fireworks) #codes(upto 2pts, downto 2pts),_
			SK:Explosives (Nuclear Ordnance Disposal) #codes(upto 2pts, downto 2pts),_
			SK:Explosives (Underwater Demolition) #codes(upto 2pts, downto 2pts),_
			SK:Traps #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select11(_
		text("Choose One from the following skills at 2pts each."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Acting #codes(upto 2pts, downto 2pts),_
			SK:Fast-Talk #codes(upto 2pts, downto 2pts),_
			SK:Leadership #codes(upto 2pts, downto 2pts),_
			SK:Teaching #codes(upto 2pts, downto 2pts),_
			SK:Mind Block #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select12(_
		text("Choose Three from the following skills at 1pt each."),_
		pointswanted(3),_
		itemswanted(3),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Brawling #codes(upto 1pts),_
			SK:Fast-Draw (Arrow) #codes(upto 1pts),_
			SK:Fast-Draw (Knife) #codes(upto 1pts),_
			SK:Knot-Tying #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Disguise #codes(upto 1pts),_
			SK:Intimidation #codes(upto 1pts),_
			SK:Running #codes(upto 1pts),_
			SK:Law #codes(upto 1pts),_
			SK:Tactics #codes(upto 1pts)_
		)_
	),_
	select13(#list(QuirkSelection))

Spell Caster (Fantasy), displaycost(75*),_
	cat(Character Templates),_
	description(This intermediate-level mage is not as limited as the hedge wizard, but lacks the extraordinary gifts of the Battle wizard or enchanter. He has enough combat skills to give him a chance of surviving a melee, but his main speciality is some category of useful spells.),_
	page(F124),_
	sets(_
			ST:ST = 9,_
			ST:IQ = 13,_
			ST:HT = 11,_
			ST:Perception = 10,_
			ST:Fatigue Points = 13_
	),_
	ident(Magical),_
	adds(_
			AD:Magery 0,_
			AD:Magery = 1,_
			SP:Detect Magic = 1pts,_
			SP:Lend Energy = 1pts,_
			SK:Thaumatology=4pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Select 10 points from among these advantages."),_
		pointswanted(10),_
		itemswanted(atleast 2, upto 3),_
		list(_
			#list(GMAdvantages),_
			AD:Eidetic Memory,_
			AD:Single-Minded,_
			AD:Status,_
			AD:Versatile,_
			AD:Extra Will,_
			LA:Language (Spoken) #codes(upto 3, downto 2),_
			LA:Language (Written) #codes(upto 3, downto 2)_
		)_
	),_
	select4(_
		text("Choose -30 points from among the following disadvantages."),_
		pointswanted(-30),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Absent-Mindedness,_
			DI:Bad Sight (Farsighted),_
			DI:Bad Sight (Nearsighted),_
			DI:Bad Temper,_
			DI:Curious,_
			DI:Duty #codes(upto 4),_
			DI:Gluttony,_
			DI:Obsession,_
			DI:Secret,_
			DI:Sense of DUty,_
			DI:Shyness_
		)_
	),_
	select5(_
		text("Select 3 of the following skills."),_
		pointswanted(3),_
		itemswanted(3),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#newitem(SK:Games (Magical Challenges), IQ/E, default(IQ - 4), page(B197)) #codes(upto 1, downto 1),_
			SK:Hidden Lore #codes(upto 1, downto 1),_
			SK:Hidden Lore (Conspiracies) #codes(upto 1, downto 1),_
			SK:Hidden Lore (Demon Lore) #codes(upto 1, downto 1),_
			SK:Hidden Lore (Faerie Lore) #codes(upto 1, downto 1),_
			SK:Hidden Lore (Spirit Lore) #codes(upto 1, downto 1),_
			SK:Occultism #codes(upto 1, downto 1),_
			SK:Research #codes(upto 1, downto 1),_
			SK:Astronomy #codes(upto 1, downto 1),_
			SK:Cryptography #codes(upto 1, downto 1),_
			SK:Expert SKill #codes(upto 1, downto 1),_
			SK:Expert Skill (Bardic Lore) #codes(upto 1, downto 1),_
			SK:Expert Skill (Computer Security) #codes(upto 1, downto 1),_
			SK:Expert Skill (Egyptology) #codes(upto 1, downto 1),_
			SK:Expert Skill (Epidemiology) #codes(upto 1, downto 1),_
			SK:Expert Skill (Hydrology) #codes(upto 1, downto 1),_
			SK:Expert Skill (Military Science) #codes(upto 1, downto 1),_
			SK:Expert Skill (Natural Philosophy) #codes(upto 1, downto 1),_
			SK:Expert Skill (Political Science) #codes(upto 1, downto 1),_
			SK:Expert Skill (Psionics) #codes(upto 1, downto 1),_
			SK:Expert Skill (Thanatology) #codes(upto 1, downto 1),_
			SK:Expert Skill (Xenology) #codes(upto 1, downto 1),_
			SK:Mathematics (Applied) #codes(upto 1, downto 1),_
			SK:Mathematics (Computer Science) #codes(upto 1, downto 1),_
			SK:Mathematics (Cryptology) #codes(upto 1, downto 1),_
			SK:Mathematics (Pure) #codes(upto 1, downto 1),_
			SK:Mathematics (Statistics) #codes(upto 1, downto 1),_
			SK:Mathematics (Surveying) #codes(upto 1, downto 1),_
			SK:Naturalist #codes(upto 1, downto 1),_
			SK:Theology #codes(upto 1, downto 1),_
			SK:Dreaming #codes(upto 1, downto 1),_
			SK:Meditation #codes(upto 1, downto 1),_
			SK:Alchemy #codes(upto 1, downto 1)_
		)_
	),_
	select6(_
		text("Select one of the following skills."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Savoir-Faire (High Society) #codes(upto 1pts),_
			SK:Savoir-Faire (Magical) #codes(upto 1pts)_
		)_
	),_
	select7(_
		text("Select one of the following skills."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Knife #codes(upto 2pts, downto 2pts),_
			SK:Riding #codes(upto 2pts, downto 2pts),_
			SK:Shortsword #codes(upto 2pts, downto 2pts),_
			SK:Staff #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select8(#list(QuirkSelection))

Spell Caster - Elementalist (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Spell Caster template.),_
	page(F124),_
	needs(TE:Spell Caster (Fantasy), 2 Spells = 4pts),_
	x(#message("After completing you should select two of your Spells and raise them to 4 points.")),_
	ident(Magical),_
	adds(_
			SP:Create Air=1pts,_
			SP:Create Fire=1pts,_
			SP:Create Water=1pts,_
			SP:Ignite Fire=1pts,_
			SP:Purify Air=1pts,_
			SP:Purify Water=1pts,_
			SP:Seek Earth=1pts,_
			SP:Seek Water=1pts,_
			SP:Shape Air=1pts,_
			SP:Shape Earth=1pts,_
			SP:Shape Fire=1pts_
	)
Spell Caster - Mentalist (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Spell Caster template.),_
	page(F124),_
	needs(TE:Spell Caster (Fantasy), 2 Spells=4pts),_
	x(#message("After completing you should select two of your Spells and raise them to 4 points.")),_
	ident(Magical),_
	adds(_
			SP:Daze=1pts,_
			SP:Fear=1pts,_
			SP:Foolishness=1pts,_
			SP:Hide Thoughts=1pts,_
			SP:Mind-Reading=1pts,_
			SP:Mind-Sending=1pts,_
			SP:Sense Foes=1pts,_
			SP:Sense Emotion=1pts,_
			SP:Sleep=1pts,_
			SP:Truthsayer=1pts,_
			SP:Forgetfulness=1pts_
	)
Spell Caster - Illusionist (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Spell Caster template.),_
	page(F124),_
	needs(TE:Spell Caster (Fantasy), 2 Spells=4pts),_
	x(#message("After completing you should select two of your Spells and raise them to 4 points.")),_
	ident(Magical),_
	adds(_
			SP:Blur=1pts,_
			SP:Complex Illusion=1pts,_
			SP:Continual Light=1pts,_
			SP:Darkness=1pts,_
			SP:Hide=1pts,_
			SP:Illusion Disguise=1pts,_
			SP:Illusion Shell=1pts,_
			SP:Light=1pts,_
			SP:Simple Illusion=1pts,_
			SP:Silence=1pts,_
			SP:Sound=1pts_
	)

Thief (Fantasy), displaycost(75*),_
	cat(Character Templates),_
	description(Thieves live by taking other people's property, not by force of arms, but by stealth. If the thief has to fight, the job has already gone wrong. This template emphasizes stealth and concealment. Potential victims may provide safeguards for their valuables, so thieves also have some knowledge of getting past walls, locks, and traps.),_
	page(F124),_
	sets(_
			ST:DX = 12,_
			ST:IQ = 11,_
			ST:Perception = 12_
	),_
	adds(_
			DI:Secret = 3,_
			SK:Fast-Talk = 2pts,_
			SK:Streetwise = 2pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Select 20 points from among these advantages."),_
		pointswanted(20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Absolute Direction,_
			AD:Acute Hearing,_
			#newitem(AD:Contact (Fence), 1/2/3/4, levelnames(Effective Skill 12, Effective Skill 15, Effective Skill 18, Effective Skill 21), upto(4), cat(Mundane, Social), mods(Contact Group, Frequency of Appearance, Reliability, Favor), page(B44), initmods(Reliability: Somewhat Reliable, *1, shortname(Somewhat Reliable), group(Reliability) | Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance))),_
			AD:Danger Sense,_
			AD:High Manual Dexterity,_
			AD:Night Vision,_
			AD:Perfect balance,_
			AD:Wealth #codes(upto 1, downto 1)_
		)_
	),_
	select4(_
		text("Select -20 points from among these advantages."),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Greed,_
			DI:Overconfidence,_
			DI:Pacifism (Cannot Kill),_
			DI:Trademark,_
			DI:Wealth #codes(upto 1, downto 1)_
		)_
	),_
	select5(_
		text("Choose one of the following skills at 4 points."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Observation #codes(upto 4pts, downto 4pts),_
			SK:Search #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select6(_
		text("Choose one of the following skills at 8 points."),_
		pointswanted(8),_
		itemswanted(1),_
		list(_
			SK:Running #codes(upto 8pts, downto 8pts),_
			SK:Stealth #codes(upto 8pts, downto 8pts)_
		)_
	),_
	select7(_
		text("Choose one of the following skills at 1 point."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Savoir-Faire (High Society) #codes(upto 1pts),_
			SK:Savoir-Faire (Servant) #codes(upto 1pts),_
			SK:Architecture #codes(upto 1pts),_
			SK:Connoisseur #codes(upto 1pts),_
			SK:Merchant #codes(upto 1pts),_
			SK:Traps #codes(upto 1pts),_
			SK:Urban Survival #codes(upto 1pts),_
			SK:Jeweler #codes(upto 1pts)_
		)_
	),_
	select8(_
		text("Choose one of the following skills at 1 point."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Brawling #codes(upto 1pts),_
			SK:Knife #codes(upto 1pts)_
		)_
	),_
	select9(#list(QuirkSelection))

Thief - Burglary (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Thief template.),_
	page(F124),_
	needs(TE:Thief (Fantasy)),_
	adds(_
			SK:Climbing = 8pts_
	),_
	select1(_
		text("Select one of the following skills at 4 points."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Forced Entry #codes(upto 4pts, downto 4pts),_
			SK:Lockpicking #codes(upto 4pts, downto 4pts)_
		)_
	)
Thief - Cutpurse/Pickpocket (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Thief template.),_
	page(F124),_
	needs(TE:Thief (Fantasy)),_
	adds(_
			SK:Shadowing = 4pts_
	),_
	select1(_
		text("Select one of the following skills at 8 points."),_
		pointswanted(8),_
		itemswanted(1),_
		list(_
			SK:Pickpocket #codes(upto 8pts, downto 8pts),_
			SK:Knife #codes(upto 8pts, downto 8pts)_
		)_
	)
Thief - Shoplifter (Fantasy), Displaycost(*),_
	cat(Character Templates),_
	description(NEEDS the Thief template.),_
	page(F124),_
	needs(TE:Thief (Fantasy)),_
	adds(_
			SK:Filch = 8pts,_
			SK:Holdout = 4pts_
	)

True King (Fantasy), displaycost(125),_
	cat(Character Templates),_
	description(Many cultures believe that the rightful ruler of a land has supernatural gifts. These may be conferred by coronation, anoitment, or other ceremonies, or descend on him when the previous king dies. Specific abilities vary - this template includes some common examples. It is designed for a destined king who has not yet claimed his throne. Reigning true kings have much higher point costs and aren't as likely to become adventurers.),_
	page(F125),_
	sets(_
			ST:ST = 11,_
			ST:DX = 11,_
			ST:IQ = 11,_
			ST:HT = 11,_
			ST:Will = 12_
	),_
	ident(Clerical),_
	adds(_
			AD:Charisma = 1,_
			AD:Independent Income = 5,_
			AD:Status = 1,_
			AD:Wealth = 3,_
			DI:Code of Honor (Chivalry),_
			DI:Sense of Duty (Country) = 3,_
			SK:Area Knowledge ([Area]) = 4pts,_
			SK:Law = 8pts,_
			SK:Leadership = 8pts,_
			SK:Riding = 4pts,_
			SK:Shield (Shield) = 2pts,_
			SK:Tactics = 4pts,_
			SK:Savoir-Faire (High Society)=1pts_
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Select 20 points from among these advantages:"),_
		pointswanted(atleast 16, upto 20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			#newitem(AD:Additional Charisma, 5/10, existing(AD:Charisma)) #codes (upto 5, downto 2),_
			#newitem(AD:Additional Status, 5/10, existing(AD:Status)) #codes (upto 5, downto 2),_
			AD:Appearance #codes(upto 5),_
			AD:Blessed (The King's Two Bodies),_
			AD:Destiny,_
			AD:Power Investiture_
		)_
	),_
	select4(_
		text("Select -25 points from among these disadvantages:"),_
		pointswanted(-25),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Berserk,_
			DI:Chronic Pain,_
			#newitem(DI:Dependency (Native Soil), -5/-10/-20/-30, mods(Dependency), levelnames(Very Common, Common, Occasional, Rare), page(B130), upto(4), cat(Exotic, Physical), initmods(Frequency Needed: Monthly, *1, shortname(Monthly), group(Dependency))),_
			DI:Destiny,_
			DI:Discipline of Faith (Ritualism),_
			DI:Fanaticism,_
			DI:Honesty,_
			DI:Overconfidence,_
			DI:Stubbornness,_
			DI:Weirdness Magnet,_
			DI:Workaholic,_
			#newitem(DI:Reduced Wealth, -10, existing(AD:Wealth), cat(Mundane Social, Mundane, Social)) #codes(upto 2, downto 2)_
		)_
	),_
	select5(_
		text("Choose one of the following skills at 8 points."),_
		pointswanted(8),_
		itemswanted(1),_
		list(_
			SK:Axe/Mace #codes(upto 8pts, downto 8pts),_
			SK:Broadsword #codes(upto 8pts, downto 8pts),_
			SK:Shortsword #codes(upto 8pts, downto 8pts),_
			SK:Spear #codes(upto 8pts, downto 8pts)_
		)_
	),_
	select6(_
		text("Choose 4 points fromt the following. If selecting Spells MUST have the Power Investiture Advantage."),_
		pointswanted(4),_
		itemswanted(atleast 1),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 4pts))),_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 4pts))),_
			SK:Axe/Mace #codes(upto 4pts),_
			SK:Broadsword #codes(upto 4pts),_
			SK:Shortsword #codes(upto 4pts),_
			SK:Spear #codes(upto 4pts),_
			SP:Bless Plants (Clerical) #codes(upto 2pts, downto 2pts),_
			SP:Command (Clerical) #codes(upto 2pts, downto 2pts),_
			SP:Cure Disease (Clerical) #codes(upto 2pts, downto 2pts),_
			SP:Deathtouch (Clerical) #codes(upto 2pts, downto 2pts),_
			SP:Haste (Clerical) #codes(upto 2pts, downto 2pts),_
			SP:Major Healing (Clerical) #codes(upto 2pts, downto 2pts),_
			SP:Mind-Sending (Clerical) #codes(upto 2pts, downto 2pts),_
			SP:Seeker (Clerical) #codes(upto 2pts, downto 2pts),_
			SP:Sense Foes (Clerical) #codes(upto 2pts, downto 2pts),_
			SP:Truthsayer (Clerical) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Choose one of the following skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Expert Skill (Bardic Lore) #codes(upto 2pts, downto 2pts),_
			SK:Expert Skill (Military Science) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select8(#list(QuirkSelection))

Village Sage (Fantasy), displaycost(75),_
	cat(Character Templates),_
	description(You may be your small communitie's priest, healer, or soothsayer, or you may have just lived a long time and seen a lot. Your native intelligence has grown into sound judgement; even people who think you're "unworldly" seek out your advice. Village sages are usually middle-aged or older, but this isn't a requirement; some young people are wise.),_
	page(F125),_
	sets(_
			ST:DX = 11,_
			ST:IQ = 13_
	),_
	adds(_
			SK:Area Knowledge ([area]) = 4pts respond "town/village",_
			DI:Sense of Duty (Village) = 2,_
			DI:Wealth = 1,_
			SK:Observation = 2pts _
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Select 20 points from among these advantages."),_
		pointswanted(20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Absolute Direction,_
			AD:Animal Empathy,_
			AD:Blessed,_
			AD:Clerical Investment,_
			AD:Eidetic Memory,_
			AD:Photographic Memory,_
			AD:Goodwife,_
			AD:Healer,_
			AD:Longevity,_
			AD:Oracle,_
			AD:Plant Empathy,_
			AD:Social Regard (Venerated)_
		)_
	),_
	select4(_
		text("Select -25 points from among these disadvantages."),_
		pointswanted(-25),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Bad Sight (Nearsighted),_
			DI:Charitable,_
			DI:Hard of Hearing,_
			DI:Lame (Crippled Legs),_
			#newitem(DI:Odious Personal Habit (Talks in riddles/allusions), -5/-10, upto(3), page(B22), cat(Mundane, Social, Other Physical Features),_
						conditional(-1 to ST:Reaction when "people notice your problem")_
					) #codes(upto1, downto 1),_
			DI:Pacifism (Cannot Kill),_
			DI:Reduced ST #codes(upto 1),_
			DI:Reduced HT #codes(upto 1)_
		)_
	),_
	select5(_
		text("Choose one of the following skills at 4 points."),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Fortune-Telling #codes(upto 4pts, downto 4pts),_
			SK:Fortune-Telling (Astrology) #codes(upto 4pts, downto 4pts),_
			SK:Fortune-Telling (Augury) #codes(upto 4pts, downto 4pts),_
			SK:Fortune-Telling (Crystal Gazing) #codes(upto 4pts, downto 4pts),_
			SK:Fortune-Telling (Dream Interpretation) #codes(upto 4pts, downto 4pts),_
			SK:Fortune-Telling (Feng Shui) #codes(upto 4pts, downto 4pts),_
			SK:Fortune-Telling (Palmistry) #codes(upto 4pts, downto 4pts),_
			SK:Fortune-Telling (Tarot) #codes(upto 4pts, downto 4pts),_
			SK:Tracking #codes(upto 4pts, downto 4pts),_
			SK:Pharmacy (Herbal) #codes(upto 4pts, downto 4pts),_
			SK:Religious Ritual #codes(upto 4pts, downto 4pts),_
			SK:Veterinary #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select6(_
		text("Choose one of the following skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Body Language #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore (Conspiracies) #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore (Demon Lore) #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore (Faerie Lore) #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore (Spirit Lore) #codes(upto 2pts, downto 2pts),_
			SK:Mimicry (Animal SOunds) #codes(upto 2pts, downto 2pts),_
			SK:Mimicry (Bird Calls) #codes(upto 2pts, downto 2pts),_
			SK:Dreaming #codes(upto 2pts, downto 2pts),_
			SK:Exorcism #codes(upto 2pts, downto 2pts),_
			SK:Meditation #codes(upto 2pts, downto 2pts),_
			SK:Herb Lore #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Choose three of the following skills at 1 point."),_
		pointswanted(3),_
		itemswanted(3),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Astronomy (Observational) #codes(upto 1pts),_
			SK:Heraldry #codes(upto 1pts),_
			SK:Meteorolgy (Earthlike) #codes(upto 1pts),_
			SK:Meteorolgy (Gas Giants) #codes(upto 1pts),_
			SK:Meteorolgy (Hostile Terrestial) #codes(upto 1pts),_
			SK:Meteorolgy (Ice Dwarfs) #codes(upto 1pts),_
			SK:Meteorolgy (Ice Worlds) #codes(upto 1pts),_
			SK:Meteorolgy (Rock Worlds) #codes(upto 1pts),_
			SK:Occultism #codes(upto 1pts),_
			SK:Diagnosis #codes(upto 1pts),_
			SK:History #codes(upto 1pts),_
			SK:Law #codes(upto 1pts),_
			SK:Naturalist #codes(upto 1pts),_
			SK:Psychology #codes(upto 1pts),_
			SK:Theology #codes(upto 1pts),_
			SK:Expert Skill (Xenology) #codes(upto 1pts)_
		)_
	),_
	select8(#list(QuirkSelection))

Wardancer (Fantasy), displaycost(75),_
	cat(Character Templates),_
	description(Wardancers are an analog of Asian martial artists in the style of more traditional fantasy: specialists in lightly armed or unarmed hand-to-hand combat, relying on speed and coordination more than strength. They could be found in cultures modeled on the Near East, or among elves, or any other culture that needs an exotic flavor. Their official role is as performers and entertainers, but their combat skills are real.),_
	page(F126),_
	sets(_
			ST:ST = 9,_
			ST:DX = 14_
	),_
	adds(_
			AD:Appearance = 1,_
			AD:Fit,_
			AD:Lifting ST = 1,_
			SK:Dancing = 2pts,_
			SK:Judo = 2pts,_
			SK:Jumping = 1pts,_
			SK:Acrobatics = 1pts,_
			SK:Stealth = 1pts,_
			SK:Body Language = 2pts,_
			SK:Gesture = 1pts,_
			SK:Group Performance (Choreography) == 0pts _
	),_
	select1(#List(Languages)),_
	select2(#List(CulturalFamiliarity)),_
	select3(_
		text("Choose 15 points from among these advantages, or chose 5 points and replace Fit with Very Fit [+10] later:"),_
		pointswanted(atleast 5, upto 15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Allure,_
			AD:Ambidexterity,_
			AD:Charisma,_
			AD:Combat reflexes,_
			AD:Perfect Balance,_
			AD:Visualization _
		)_
	),_
	select4(_
		text("Select -35 points from among these disadvantages."),_
		pointswanted(-35),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Code of Honor (Professional),_
			DI:Dwarfism,_
			DI:Jealousy,_
			DI:Overconfidence,_
			DI:Pacifism (Cannot Harm Innocents),_
			DI:Post-Combat Shakes,_
			DI:Workaholic _
		)_
	),_
	select5(_
		text("Choose one of the following skills at 1 point."),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Knife #codes(upto 1pts),_
			SK:Cloak #codes(upto 1pts),_
			SK:Saber #codes(upto 1pts),_
			SK:Smallsword #codes(upto 1pts),_
			SK:Staff #codes(upto 1pts)_
		)_
	),_
	select6(_
		text("Choose one of the following skills at 2 points."),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Sewing #codes(upto 2pts, downto 2pts),_
			SK:Makeup #codes(upto 2pts, downto 2pts),_
			SK:Erotic Art #codes(upto 2pts, downto 2pts),_
			SK:Stage Combat #codes(upto 2pts, downto 2pts),_
			SK:Connoisseur (Music) #codes(upto 2pts, downto 2pts),_
			SK:Performance #codes(upto 2pts, downto 2pts),_
			SK:Carousing #codes(upto 2pts, downto 2pts),_
			SK:Sex Appeal #codes(upto 2pts, downto 2pts),_
			#newitem(SK:Musical Instrument (Drums), IQ/H, page(B211), cat(Arts/Entertainment)) #codes(upto 2pts, downto 2pts),_
			#newitem(SK:Musical Instrument (Finger Cymbals), IQ/H, page(B211), cat(Arts/Entertainment)) #codes(upto 2pts, downto 2pts) _
		)_
	),_
	select7(#list(QuirkSelection))

********************************************************************************************************\[STOP]
[TEMPLATES]
*******************************************************************************************************\[START]
#MergeTags in "TE:Archer (Fantasy)" with {replacetags(in "TE:Archer (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Archer - Bowman (Fantasy)" with {replacetags(in "TE:Archer - Bowman (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Archer - Crossbowman (Fantasy)" with {replacetags(in "TE:Archer - Crossbowman (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Archer - Rifleman (Fantasy)" with {replacetags(in "TE:Archer - Rifleman (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Archer - Slingman (Fantasy)" with {replacetags(in "TE:Archer - Slingman (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Archer - Spearman (Fantasy)" with {replacetags(in "TE:Archer - Spearman (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Artificer (Fantasy)" with {replacetags(in "TE:Artificer (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Artificer - Artillery (Fantasy)" with {replacetags(in "TE:Artificer - Artillery (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Artificer - Chemistry (Fantasy)" with {replacetags(in "TE:Artificer - Chemistry (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Artificer - Heavy Equipment (Fantasy)" with {replacetags(in "TE:Artificer - Heavy Equipment (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Artificer - Mechanisms (Fantasy)" with {replacetags(in "TE:Artificer - Mechanisms (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Assassin (Fantasy)" with {replacetags(in "TE:Assassin (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Bandit (Fantasy)" with {replacetags(in "TE:Bandit (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Barbarian (Fantasy)" with {replacetags(in "TE:Barbarian (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Barbarian - Desert (Fantasy)" with {replacetags(in "TE:Barbarian - Desert (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Barbarian - Plains (Fantasy)" with {replacetags(in "TE:Barbarian - Plains (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Barbarian - Seafaring (Fantasy)" with {replacetags(in "TE:Barbarian - Seafaring (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Barbarian - Woodland (Fantasy)" with {replacetags(in "TE:Barbarian - Woodland (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Bard (Fantasy)" with {replacetags(in "TE:Bard (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Battle Wizard (Fantasy)" with {replacetags(in "TE:Battle Wizard (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Enchanter (Fantasy)" with {replacetags(in "TE:Enchanter (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Battle Wizard - Bodyguard - Apportation (Fantasy)" with {replacetags(in "TE:Battle Wizard - Bodyguard - Apportation (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Battle Wizard - Bodyguard - Aura (Fantasy)" with {replacetags(in "TE:Battle Wizard - Bodyguard - Aura (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Battle Wizard - Bodyguard - Emotion (Fantasy)" with {replacetags(in "TE:Battle Wizard - Bodyguard - Emotion (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Battle Wizard - Bodyguard - Fire (Fantasy)" with {replacetags(in "TE:Battle Wizard - Bodyguard - Fire (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Battle Wizard - Kineticist (Fantasy)" with {replacetags(in "TE:Battle Wizard - Kineticist (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Battle Wizard - Pyrurge (Fantasy)" with {replacetags(in "TE:Battle Wizard - Pyrurge (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Enchanter - Armour Maker (Fantasy)" with {replacetags(in "TE:Enchanter - Armour Maker (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Enchanter - Magical Device Maker (Fantasy)" with {replacetags(in "TE:Enchanter - Magical Device Maker (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Enchanter - Weapon Maker - Accuracy (Fantasy)" with {replacetags(in "TE:Enchanter - Weapon Maker - Accuracy (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Enchanter - Weapon Maker - Puissance (Fantasy)" with {replacetags(in "TE:Enchanter - Weapon Maker - Puissance (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Hedge Wizard (Fantasy)" with {replacetags(in "TE:Hedge Wizard (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Hedge Wizard - Generalist (Fantasy)" with {replacetags(in "TE:Hedge Wizard - Generalist (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Hedge Wizard - Healer (Fantasy)" with {replacetags(in "TE:Hedge Wizard - Healer (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Hedge Wizard - Weatherworker (Fantasy)" with {replacetags(in "TE:Hedge Wizard - Weatherworker (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Holy Man (Fantasy)" with {replacetags(in "TE:Holy Man (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Knight (Fantasy)" with {replacetags(in "TE:Knight (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Merchant (Fantasy)" with {replacetags(in "TE:Merchant (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Peasant Adventurer (Fantasy)" with {replacetags(in "TE:Peasant Adventurer (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Scholar (Fantasy)" with {replacetags(in "TE:Scholar (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Slayer (Fantasy)" with {replacetags(in "TE:Slayer (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Spell Caster (Fantasy)" with {replacetags(in "TE:Spell Caster (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Spell Caster - Elementalist (Fantasy)" with {replacetags(in "TE:Spell Caster - Elementalist (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Spell Caster - Illusionist (Fantasy)" with {replacetags(in "TE:Spell Caster - Illusionist (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Spell Caster - Mentalist (Fantasy)" with {replacetags(in "TE:Spell Caster - Mentalist (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Thief (Fantasy)" with {replacetags(in "TE:Thief (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Thief - Burglary (Fantasy)" with {replacetags(in "TE:Thief - Burglary (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Thief - Cutpurse/Pickpocket (Fantasy)" with {replacetags(in "TE:Thief - Cutpurse/Pickpocket (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Thief - Shoplifter (Fantasy)" with {replacetags(in "TE:Thief - Shoplifter (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:True King (Fantasy)" with {replacetags(in "TE:True King (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Village Sage (Fantasy)" with {replacetags(in "TE:Village Sage (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Wardancer (Fantasy)" with {replacetags(in "TE:Wardancer (Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}

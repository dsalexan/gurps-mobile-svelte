Encoding=UTF-8
Version=3
//  The version information above MUST be the first line of the data file
Program=5.0.168
Description=2022 July 27. _
			This data file contains information taken from the GURPS After The End 1: Wastelanders sourcebook. _
			GURPS After The End 1: Wastelanders is Copyright © 2016 by Steve Jackson Games _
			Incorporated. All rights reserved.
WorldBook=After the End
Requires="GURPS Basic Set 4th Ed.--Characters.gdf"
LoadAfter="GURPS Power-Ups 3 - Talents.GDF"

[AUTHOR]
*******************************************************************************************************\[START]
// 
//  GURPS® Character Assistant Data File
//  Created: 03-03-2016
//  Updated: 03-13-2016
//  Requires GCA v4 or later!
// 
//  This data file contains information taken from the After the End supplement.
// 
//  Information in this file includes:
// 	Skills, Advantages, Disadvantages, Equipment, and Templates.
//  
//  This file requires the Basic Set to be loaded. 
// 
*******************************************************************************************************************
// 
//  PK Levine - Original data file author, Equipment, Modifiers
//  Mike Kuehn - Character Templates
//  Eric Smith - Mutations, Lenses, GURPS Data File Coordinator
// 
*******************************************************************************************************************
// 
//  GURPS is a registered trademark of Steve Jackson Games Incorporated, used with GCA by permission of Steve Jackson
//  Games. All rights reserved.
// 
//  The GURPS game is Copyright © 1986-1989, 1991-1994 by Steve Jackson Games Incorporated. This product includes
//  copyrighted material from the GURPS game, which is used by permission of Steve Jackson Games Incorporated. All
//  rights reserved by Steve Jackson Games Incorporated.
// 
********************************************************************************************************\[STOP]
[ATTRIBUTES]
*******************************************************************************************************\[START]
#ReplaceTags in "ST:Money" with "initmods(100% of Starting Wealth, +0)"
#replaceTags in "ST:Starting Wealth" with "basevalue(500)"

RP, basevalue(@int((ST:ST + ST:HT)/2)), display(no), minscore(@int((ST:ST + ST:HT)/4)), maxscore(ST:ST + ST:HT), step(1), up(1), down(-1), mainwin(13)

Freakishness, maxscore(0), minscore(-100), up(1), down(-1),_
	conditional(=-@int(-me::score / 6) to "SK:Disguise" when "disguising yourself", =-@int(-me::score / 6) to "SK:Shadowing" when "on foot"),_
	gives(=-@int(-me::score / 9) to ST:Reaction)
Freaky Oddities, up(0), down(0), maxscore(0)

********************************************************************************************************\[STOP]
[SKILLS]
*******************************************************************************************************\[START]
#ReplaceTags in "SK:Engineer ([Type])" with "needs()"
#ReplaceTags in "SK:Engineer (%type%)" with "needs()"
#ReplaceTags in "SK:Anthropology" with "x()"

#ReplaceTags in "SK:Airshipman" with "tl()"
#ReplaceTags in "SK:Architecture" with "tl()"
#ReplaceTags in "SK:Armoury (Battlesuits)" with "tl()"
#ReplaceTags in "SK:Armoury (Body Armor)" with "tl()"
#ReplaceTags in "SK:Armoury (Heavy Weapons)" with "tl()"
#ReplaceTags in "SK:Armoury (Melee Weapons)" with "tl()"
#ReplaceTags in "SK:Armoury (Missile Weapons)" with "tl()"
#ReplaceTags in "SK:Armoury (Small Arms)" with "tl()"
#ReplaceTags in "SK:Armoury (Vehicular Armor)" with "tl()"
#ReplaceTags in "SK:Artillery (Beams)" with "tl()"
#ReplaceTags in "SK:Artillery (Bombs)" with "tl()"
#ReplaceTags in "SK:Artillery (Cannon)" with "tl()"
#ReplaceTags in "SK:Artillery (Catapult)" with "tl()"
#ReplaceTags in "SK:Artillery (Guided Missile)" with "tl()"
#ReplaceTags in "SK:Artillery (Torpedoes)" with "tl()"
#ReplaceTags in "SK:Battlesuit" with "tl()"
#ReplaceTags in "SK:Beam Weapons (Pistol)" with "tl()"
#ReplaceTags in "SK:Beam Weapons (Projector)" with "tl()"
#ReplaceTags in "SK:Beam Weapons (Rifle)" with "tl()"
#ReplaceTags in "SK:Biology (Earthlike)" with "tl()"
#ReplaceTags in "SK:Boating (Large Powerboat)" with "tl()"
#ReplaceTags in "SK:Boating (Motorboat)" with "tl()"
#ReplaceTags in "SK:Boating (Sailboat)" with "tl()"
#ReplaceTags in "SK:Boating (Unpowered)" with "tl()"
#ReplaceTags in "SK:Brainwashing" with "tl()"
#ReplaceTags in "SK:Cartography" with "tl()"
#ReplaceTags in "SK:Chemistry" with "tl()"
#ReplaceTags in "SK:Computer Programming" with "tl()"
#ReplaceTags in "SK:Criminology" with "tl()"
#ReplaceTags in "SK:Current Affairs ([Regional])" with "tl()"
#ReplaceTags in "SK:Diagnosis" with "tl()"
#ReplaceTags in "SK:Disguise" with "tl()"
#ReplaceTags in "SK:Driving (Automobile)" with "tl()"
#ReplaceTags in "SK:Driving (Construction Equipment)" with "tl()"
#ReplaceTags in "SK:Driving (Halftrack)" with "tl()"
#ReplaceTags in "SK:Driving (Heavy Wheeled)" with "tl()"
#ReplaceTags in "SK:Driving (Hovercraft)" with "tl()"
#ReplaceTags in "SK:Driving (Locomotive)" with "tl()"
#ReplaceTags in "SK:Driving (Mecha)" with "tl()"
#ReplaceTags in "SK:Driving (Motorcycle)" with "tl()"
#ReplaceTags in "SK:Driving (Tracked)" with "tl()"
#ReplaceTags in "SK:Electrician" with "tl()"
#ReplaceTags in "SK:Electronics Operation (Communications)" with "tl()"
#ReplaceTags in "SK:Electronics Operation (Electronic Warfare)" with "tl()"
#ReplaceTags in "SK:Electronics Operation (Media)" with "tl()"
#ReplaceTags in "SK:Electronics Operation (Medical)" with "tl()"
#ReplaceTags in "SK:Electronics Operation (Scientific)" with "tl()"
#ReplaceTags in "SK:Electronics Operation (Security)" with "tl()"
#ReplaceTags in "SK:Electronics Operation (Sensors)" with "tl()"
#ReplaceTags in "SK:Electronics Operation (Sonar)" with "tl()"
#ReplaceTags in "SK:Electronics Operation (Surveillance)" with "tl()"
#ReplaceTags in "SK:Electronics Repair (Communications)" with "tl()"
#ReplaceTags in "SK:Electronics Repair (Computers)" with "tl()"
#ReplaceTags in "SK:Electronics Repair (Electronic Warfare)" with "tl()"
#ReplaceTags in "SK:Electronics Repair (Media)" with "tl()"
#ReplaceTags in "SK:Electronics Repair (Medical)" with "tl()"
#ReplaceTags in "SK:Electronics Repair (Scientific)" with "tl()"
#ReplaceTags in "SK:Electronics Repair (Security)" with "tl()"
#ReplaceTags in "SK:Electronics Repair (Sensors)" with "tl()"
#ReplaceTags in "SK:Electronics Repair (Sonar)" with "tl()"
#ReplaceTags in "SK:Electronics Repair (Surveillance)" with "tl()"
#ReplaceTags in "SK:Engineer (%type%)" with "tl()"
#ReplaceTags in "SK:Engineer ([Type])" with "tl()"
#ReplaceTags in "SK:Engineer (Artillery)" with "tl()"
#ReplaceTags in "SK:Engineer (Civil)" with "tl()"
#ReplaceTags in "SK:Engineer (Combat)" with "tl()"
#ReplaceTags in "SK:Engineer (Electrical)" with "tl()"
#ReplaceTags in "SK:Engineer (Electronics)" with "tl()"
#ReplaceTags in "SK:Engineer (Materials)" with "tl()"
#ReplaceTags in "SK:Engineer (Microtechnology)" with "tl()"
#ReplaceTags in "SK:Engineer (Mining)" with "tl()"
#ReplaceTags in "SK:Explosives (Demolition)" with "tl()"
#ReplaceTags in "SK:Explosives (Explosive Ordnance Disposal)" with "tl()"
#ReplaceTags in "SK:Explosives (Fireworks)" with "tl()"
#ReplaceTags in "SK:Explosives (Nuclear Ordnance Disposal)" with "tl()"
#ReplaceTags in "SK:Explosives (Underwater Demolition)" with "tl()"
#ReplaceTags in "SK:Fast-Draw (Ammo)" with "tl()"
#ReplaceTags in "SK:First Aid" with "tl()"
#ReplaceTags in "SK:Freight Handling" with "tl()"
#ReplaceTags in "SK:Gunner (Beams)" with "tl()"
#ReplaceTags in "SK:Gunner (Cannon)" with "tl()"
#ReplaceTags in "SK:Gunner (Catapult)" with "tl()"
#ReplaceTags in "SK:Gunner (Machine Gun)" with "tl()"
#ReplaceTags in "SK:Gunner (Rockets)" with "tl()"
#ReplaceTags in "SK:Guns (Grenade Launcher)" with "tl()"
#ReplaceTags in "SK:Guns (Gyroc)" with "tl()"
#ReplaceTags in "SK:Guns (Light Anti-Armor Weapon)" with "tl()"
#ReplaceTags in "SK:Guns (Light Machine Gun)" with "tl()"
#ReplaceTags in "SK:Guns (Musket)" with "tl()"
#ReplaceTags in "SK:Guns (Pistol)" with "tl()"
#ReplaceTags in "SK:Guns (Rifle)" with "tl()"
#ReplaceTags in "SK:Guns (Shotgun)" with "tl()"
#ReplaceTags in "SK:Guns (Submachine Gun)" with "tl()"
#ReplaceTags in "SK:Hazardous Materials (Biological)" with "tl()"
#ReplaceTags in "SK:Hazardous Materials (Chemical)" with "tl()"
#ReplaceTags in "SK:Hazardous Materials (Radioactive)" with "tl()"
#ReplaceTags in "SK:Hazardous Materials" with "tl()"
#ReplaceTags in "SK:Intelligence Analysis" with "tl()"
#ReplaceTags in "SK:Liquid Projector (Flamethrower)" with "tl()"
#ReplaceTags in "SK:Liquid Projector (Sprayer)" with "tl()"
#ReplaceTags in "SK:Liquid Projector (Squirt Gun)" with "tl()"
#ReplaceTags in "SK:Liquid Projector (Water Cannon)" with "tl()"
#ReplaceTags in "SK:Lockpicking" with "tl()"
#ReplaceTags in "SK:Machinist" with "tl()"
#ReplaceTags in "SK:Mechanic (%type%)" with "tl()"
#ReplaceTags in "SK:Mechanic ([Type])" with "tl()"
#ReplaceTags in "SK:Mechanic (Micromachines)" with "tl()"
#ReplaceTags in "SK:Mechanic (Nanomachines)" with "tl()"
#ReplaceTags in "SK:Navigation (Air)" with "tl()"
#ReplaceTags in "SK:Navigation (Land)" with "tl()"
#ReplaceTags in "SK:Navigation (Sea)" with "tl()"
#ReplaceTags in "SK:NBC Suit" with "tl()"
#ReplaceTags in "SK:Pharmacy (Herbal)" with "tl()"
#ReplaceTags in "SK:Pharmacy (Synthetic)" with "tl()"
#ReplaceTags in "SK:Photography" with "tl()"
#ReplaceTags in "SK:Physician" with "tl()"
#ReplaceTags in "SK:Physics" with "tl()"
#ReplaceTags in "SK:Piloting (Autogyro)" with "tl()"
#ReplaceTags in "SK:Piloting (Flight Pack)" with "tl()"
#ReplaceTags in "SK:Piloting (Glider)" with "tl()"
#ReplaceTags in "SK:Piloting (Heavy Airplane)" with "tl()"
#ReplaceTags in "SK:Piloting (Helicopter)" with "tl()"
#ReplaceTags in "SK:Piloting (High-Performance Airplane)" with "tl()"
#ReplaceTags in "SK:Piloting (Light Airplane)" with "tl()"
#ReplaceTags in "SK:Piloting (Lighter-Than-Air)" with "tl()"
#ReplaceTags in "SK:Piloting (Ultralight)" with "tl()"
#ReplaceTags in "SK:Piloting (Vertol)" with "tl()"
#ReplaceTags in "SK:Poisons" with "tl()"
#ReplaceTags in "SK:Propaganda" with "tl()"
#ReplaceTags in "SK:Prospecting" with "tl()"
#ReplaceTags in "SK:Research" with "tl()"
#ReplaceTags in "SK:Seamanship" with "tl()"
#ReplaceTags in "SK:Shiphandling (Airship)" with "tl()"
#ReplaceTags in "SK:Shiphandling (Ship)" with "tl()"
#ReplaceTags in "SK:Soldier" with "tl()"
#ReplaceTags in "SK:Surgery" with "tl()"
#ReplaceTags in "SK:Traps" with "tl()"
#ReplaceTags in "SK:Veterinary" with "tl()"

#MergeTags in "SK:Gunner (Machine Gun)" with "default("SK:Guns (Light Machine Gun)" - 2)"
#MergeTags in "SK:Guns (Light Machine Gun)" with "default("SK:Gunner (Machine Gun)" - 2)"

<_New Skills>
_New Skill, %typelist%, page(B175), cat(_General, _New Skills),_
	x(#InputToTagReplace("Please enter the name of this Skill:" , name, , "New Skill"),_
	#ChoiceList(_
			name(parry),_
			title(New Skill: Can this skill be used to parry in combat?),_
			text(Can this skill be used to parry in combat? Choose one:),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"_No Parry",_
				"Normal Parry",_
				"Knife Parry"=-1,_
				"Staff Parry"=+2_
			),_
			aliaslist(_
				"",_
				"@int(%level/2)+3",_
				"@int(%level/2)+3-1",_
				"@int(%level/2)+3+2"_
			)_
			),_
	#ChoiceList(_
			name(block),_
			title(New Skill: Can this skill be used to Block in combat?),_
			text(Can this skill be used to block in combat? Choose one:),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"_No Block",_
				"Normal Block"_
			),_
			aliaslist(_
				"",_
				"@int(%level/2)+3"_
			)_
		),_
	#ChoiceList(_
			name(type),_
			title(New Skill: Choose a Skill Type),_
			text(Choose the type of skill from the list below:),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"DX/E",_
				"DX/A",_
				"DX/H",_
				"DX/VH",_
				"IQ/E",_
				"IQ/A",_
				"IQ/H",_
				"IQ/VH",_
				"HT/E",_
				"HT/A",_
				"HT/H",_
				"HT/VH",_
				"Will/E",_
				"Will/A",_
				"Will/H",_
				"Will/VH",_
				"Per/E",_
				"Per/A",_
				"Per/H",_
				"Per/VH"_
			)_
			),_
	#edit _
	), noresync(yes), parryat(%parryaliaslist%), blockat(%blockaliaslist%)

<_General, Knowledge, Scholarly>
Expert Skill (Mutants), IQ/H, page(B193), cat(_General, Knowledge, Scholarly)
Expert Skill (Robotics), IQ/H, page(B193), cat(_General, Knowledge, Scholarly)

********************************************************************************************************\[STOP]
[ADVANTAGES]
*******************************************************************************************************\[START]
<Attributes>
Extra RP, 1/2, page(ATE1:24), mods(Extra RP), initmods(Affects displayed RP score, +0%, shortname(Affects RP), gives(+Owner::Level to ST:RP, +Owner::Level to AD:Radiation Points), group(Extra RP), description(This modifier causes the Extra RP advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),_
	description(The Extra RP advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra RP advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)

<Physical>
Radiation Points, 1/2, init(0), cat(Mundane, Physical, Mundane Physical), upto(@int((ST:ST + ST:HT + 1) / 2)),_
	initmods(RP, 0, gives(=+@int((ST:ST + ST:HT) / 2) to owner::level))

<Talents>
Wasteland Wisdom, 5/10, page(18), upto(4), cat(Mundane, Mental, Mundane Mental), mods(_Talents), description(Anthropology, Architecture, Expert Skill (Mutants and Robotics), Naturalist, Survival (Radioactive Wasteland)),_
	gives(_
		+1 to "SK:Anthropology",_
		+1 to "SK:Architecture",_
		+1 to "SK:Expert Skill (Mutants)",_
		+1 to "SK:Expert Skill (Robotics)",_
		+1 to "SK:Naturalist",_
		+1 to "SK:Survival (Radioactive Wasteland)"_
		),_
	conditional(+1 to ST:Reaction when "someone genuinely cares about the old ways")

Driver's Reflexes, 5/10, page(A1:19, MH4:6, PU3:10), upto(4), cat(Mundane, Mental, Mundane Mental), mods(_Talents), description(Boating, Driving, Piloting and Submarine),_
	gives(_
		+1 to "SK:Boating",_
		+1 to "SK:Driving",_
		+1 to "SK:Piloting",_
		+1 to "SK:Submarine"_
		),_
	conditional(+1 to ST:Reaction when "Passengers; gamblers betting on you at the Grand Prix")

Craftiness, 5/10, page(A1:19, DF11:32, MH1:25, Psi5, PU3:9), upto(4), cat(Mundane, Mental, Mundane Mental), mods(_Talents), description(Acting, Camouflage, Disguise, Holdout, Shadowing and Stealth),_
	gives(_
		+1 to "SK:Acting",_
		+1 to "SK:Camouflage",_
		+1 to "SK:Disguise",_
		+1 to "SK:Holdout",_
		+1 to "SK:Shadowing",_
		+1 to "SK:Stealth"_
		)

*******************************************************************************************************************
#MergeTags in "AD:Gadgeteer" with "mods(Gadgeteer)"

#ReplaceTags in "AD:Trading Character Points for Money" with "gives(+250 to ST:Money, +250 to ST:Remaining Funds)"
#ReplaceTags in "AD:Trading Character Points for Money" with {upto(100), levelnames("$250","$500","$750","$1,000","$1,250","$1,500","$1,750","$2,000","$2,250","$2,500","$2,750","$3,000","$3,250","$3,500","$3,750","$4,000","$4,250","$4,500","$4,750","$5,000","$5,250","$5,500","$5,750","$6,000","$6,250","$6,500","$6,750","$7,000","$7,250","$7,500","$7,750","$8,000","$8,250","$8,500","$8,750","$9,000","$9,250","$9,500","$9,750","$10,000","$10,250","$10,500","$10,750","$11,000","$11,250","$11,500","$11,750","$12,000","$12,250","$12,500","$12,750","$13,000","$13,250","$13,500","$13,750","$14,000","$14,250","$14,500","$14,750","$15,000","$15,250","$15,500","$15,750","$16,000","$16,250","$16,500","$16,750","$17,000","$17,250","$17,500","$17,750","$18,000","$18,250","$18,500","$18,750","$19,000","$19,250","$19,500","$19,750","$20,000","$20,250","$20,500","$20,750","$21,000","$21,250","$21,500","$21,750","$22,000","$22,250","$22,500","$22,750","$23,000","$23,250","$23,500","$23,750","$24,000","$24,250","$24,500","$24,750","$25,000")}

#Clone "AD:360° Vision" as "AD:Mutation 360° Vision"
#Clone "AD:Affliction" as "AD:Mutation Affliction"
#Clone "AD:Amphibious" as "AD:Mutation Amphibious"
#Clone "AD:Burning Attack" as "AD:Mutation Burning Attack"
#Clone "AD:Chameleon" as "AD:Mutation Chameleon"
#Clone "AD:Claws (Long Talons)" as "AD:Mutation Claws (Long Talons)"
#Clone "AD:Clinging" as "AD:Mutation Clinging"
#Clone "AD:Corrosion Attack" as "AD:Mutation Corrosion Attack"
#Clone "AD:Crushing Attack" as "AD:Mutation Crushing Attack"
#Clone "AD:Damage Resistance" as "AD:Mutation Damage Resistance"
#Clone "AD:Dark Vision" as "AD:Mutation Dark Vision"
#Clone "AD:Discriminatory Hearing" as "AD:Mutation Discriminatory Hearing"
#Clone "AD:Discriminatory Smell" as "AD:Mutation Discriminatory Smell"
#Clone "AD:Doesn't Breathe" as "AD:Mutation Doesn't Breathe"
#Clone "AD:Enhanced Move (Air)" as "AD:Mutation Enhanced Move (Air)"
#Clone "AD:Enhanced Move (Ground)" as "AD:Mutation Enhanced Move (Ground)"
#Clone "AD:Enhanced Move (Water)" as "AD:Mutation Enhanced Move (Water)"
#Clone "AD:Extra Arms" as "AD:Mutation Extra Arms"
#Clone "AD:Extra Head" as "AD:Mutation Extra Head"
#Clone "AD:Extra Legs (4 Legs)" as "AD:Mutation Extra Legs (4 Legs)"
#Clone "AD:Extra Mouth" as "AD:Mutation Extra Mouth"
#Clone "AD:Extra RP" as "AD:Mutation Extra RP"
#Clone "AD:Extra ST" as "AD:Mutation Extra ST"
#Clone "AD:Flight" as "AD:Mutation Flight"
#Clone "AD:Infravision" as "AD:Mutation Infravision"
#Clone "AD:Injury Tolerance" as "AD:Mutation Injury Tolerance"
#Clone "AD:Long Spines" as "AD:Mutation Long Spines"
#Clone "AD:Mimicry" as "AD:Mutation Mimicry"
#Clone "AD:Payload" as "AD:Mutation Payload"
#Clone "AD:Protected [Sense]" as "AD:Mutation Protected [Sense]"
#Clone "AD:Recovery" as "AD:Mutation Recovery"
#Clone "AD:Regeneration" as "AD:Mutation Regeneration"
#Clone "AD:Regrowth" as "AD:Mutation Regrowth"
#Clone "AD:Slippery" as "AD:Mutation Slippery"
#Clone "AD:Striker (Impaling; [Description])" as "AD:Mutation Striker (Impaling; [Description])"
#Clone "AD:Striking ST" as "AD:Mutation Striking ST"
#Clone "AD:Super Jump" as "AD:Mutation Super Jump"
#Clone "AD:Teeth (Fangs)" as "AD:Mutation Teeth (Fangs)"
#Clone "AD:Telescopic Vision" as "AD:Mutation Telescopic Vision"
#Clone "AD:Toxic Attack" as "AD:Mutation Toxic Attack"
#Clone "AD:Vibration Sense" as "AD:Mutation Vibration Sense"

#ReplaceTags in "AD:Mutation Damage Resistance" with "initmods(Tough Skin, -40% | Unusual Background, 2, tier(1), formula(owner::level * 2), forceformula(yes))"

#ReplaceTags in "AD:Damage Resistance" with "upto(2), initmods(Tough Skin, -40% | Unusual Background, 2, tier(1), formula(owner::level * 2), forceformula(yes))"
#ReplaceTags in "AD:Enhanced Block" with "upto(1)"
#ReplaceTags in "AD:Enhanced Dodge" with "upto(1)"
#ReplaceTags in "AD:Enhanced Parry (%Melee Weapon%)" with "upto(1)"
#ReplaceTags in "AD:Enhanced Parry (all parries)" with "upto(1)"
#ReplaceTags in "AD:Enhanced Parry (bare hands)" with "upto(1)"
#ReplaceTags in "AD:Extra Attack" with "upto(1)"
#ReplaceTags in "AD:Less Sleep" with "upto(4)"
#ReplaceTags in "AD:Lifting ST" with "upto(3)"
#ReplaceTags in "AD:Striking ST" with "upto(3)"


*******************************************************************************************************************
<Mutations, Mutations - Attack Mutations>
*******************************************************************************************************************
Acidic Blood, 0, displaycost(21), page(ATE1:26),_
		adds(_
			{DI:Freakishness (Acidic Blood)}=4,_
				{AD:Mutation Corrosion Attack (Acidic Blood)}=2 _
					with {"Cyclic (1 second interval)", +0%/+100%/+200%,group(Corrosion Attack Enhancements),page(B103),gives(=" {x$solver(me::level)/sec}" to owner::damtype$),level(2),formula(@if(@ownerhasmod(Resistible) then 0.5 ELSE 1) * (me::level - 1) * 100),forceformula(yes),levelnames(1 cycle,#buildlist(list(#list(LevelName Step 1)), template(%listitem% cycles))),valuenum(100)} _
					and {"Blood Agent", -40%,group(Toxic Attack Limitations),page(B110),level(1),valuenum(-40)} _
					and {"Melee Attack: Cannot Parry", -5%,gives(=nobase to owner::parry$, ="No" to owner::parry$),group(_Attack Limitations),level(1),page(B112),shortname(Cannot Parry),valuenum(-5)} _
					and {"Melee Attack: Reach C", -30%,group(_Attack Limitations),page(B112),gives(=nobase to owner::rangehalfdam$, =nobase to owner::rangemax$, =nobase to owner::reach$, ="C" to owner::reach$),addmode(Primary, skillused(ST:DX, SK:Brawling)),level(1),valuenum(-30)} _
					respond 1 _
				),_
		parentof(_
					DI:Freakishness (Acidic Blood),_
					AD:Mutation Corrosion Attack (Acidic Blood)_
				)

Bellow Lungs, 0, displaycost(13), page(ATE1:26),_
		adds(_
			{SK:Innate Attack (Breath)}==0pts,_
			{DI:Freakishness (Bellow Lungs)}=2,_
				{AD:Mutation Crushing Attack (Bellow Lungs)}=2 _
					with {Damage Modifier: Double Knockback, +20%, shortname(Double Knockback), group(Crushing Attack Enhancements), page(B104), gives(=" dkb" to owner::damtype$)} _
					and {"Jet", +0%,group(_Attack Enhancements),page(B106),gives(-3 to owner::acc, *0.5 to owner::rangehalfdam, *0.1 to owner::rangemax, =nobase to owner::rof$, ="Jet" to owner::rof$),level(1),valuenum(0)} _
					and {"Jet: Increased Range (1/2D Range Only)", +5%/+10%,shortname(Increased Range (1/2D Range Only)),group(_Attack Enhancements),page(B106),levelnames(#buildlist(list(#list(LevelName Step 1)), template(x%listitem%))),gives(=*(me::level + 1) to owner::rangehalfdam),level(1),valuenum(5)} _
					and {"Melee Attack: ST-Based", +100%,group(Crushing Attack Enhancements),page(P103),shortname(ST-Based),gives(="+sw" to owner::damage$),level(1),valuenum(100)} _
					and {"Costs Fatigue", -5%/-10%,mods(Costs Fatigue),group(_General),page(B111),shortname(Costs FP),level(1),valuenum(-5)} _
					and {"Damage Limitation: No Blunt Trauma", -20%,shortname(No Blunt Trauma),group(Crushing Attack Limitations),page(B111),gives(=" nbt" to owner::damtype$),level(1),valuenum(-20)} _
					and {"Damage Limitation: No Wounding", -50%,shortname(No Wounding),group(Crushing Attack Limitations),page(B111),gives(=" nw" to owner::damtype$),level(1),valuenum(-50)} _
					respond 5 _
				),_
		parentof(_
					DI:Freakishness (Bellow Lungs),_
					AD:Mutation Crushing Attack (Bellow Lungs)_
				)

Electrified Skin, 0, displaycost(24), page(ATE1:26),_
		adds(_
				{DI:Freakishness (Electrified Skin)}=4,_
				{AD:Mutation Affliction (Electrified Skin)} _
					with {"Aura", +80%,group(_Attack Enhancements),page(B102),level(1),valuenum(80)} _
					and {"Link", +10%/+20%,levelnames(Powers must be used together, powers can be used separately),upto(2),group(_General),page(B106),level(1),valuenum(10)} _
					and {"Underwater", +20%,group(_Attack Enhancements),page(B109),level(1),valuenum(20)} _
					and {"Costs Fatigue", -5%/-10%,mods(Costs Fatigue),group(_General),page(B111),shortname(Costs FP),level(1),valuenum(-5)} _
					and {"Melee Attack: Reach C", -30%,group(_Attack Limitations),page(B112),gives(=nobase to owner::rangehalfdam$, =nobase to owner::rangemax$, =nobase to owner::reach$, ="C" to owner::reach$),addmode(Primary, skillused(ST:DX, SK:Brawling)),level(1),valuenum(-30)} _
					respond 3,_
				AD:Mutation Burning Attack (Electrified Skin) _
					with {"Aura", +80%,group(_Attack Enhancements),page(B102),level(1),valuenum(80)} _
					and {"Damage Modifier: Surge", +20%,shortname(Surge),group(_Attack Enhancements),page(B104),gives(=" sur" to owner::damtype$),level(1),valuenum(20)} _
					and {"Link", +10%/+20%,levelnames(Powers must be used together, powers can be used separately),upto(2),group(_General),page(B106),level(1),valuenum(10)} _
					and {"Underwater", +20%,group(_Attack Enhancements),page(B109),level(1),valuenum(20)} _
					and {"Costs Fatigue", -5%/-10%,mods(Costs Fatigue),group(_General),page(B111),shortname(Costs FP),level(1),valuenum(-5)} _
					and {"Melee Attack: Reach C", -30%,group(_Attack Limitations),page(B112),gives(=nobase to owner::rangehalfdam$, =nobase to owner::rangemax$, =nobase to owner::reach$, ="C" to owner::reach$),addmode(Primary, skillused(ST:DX, SK:Brawling)),level(1),valuenum(-30)} _
					and {"No Incendiary Effect", -10%/-20%,group(_Attack Limitations),page(P102),level(1),valuenum(-10),basedon(Damage Modifier: Missing Damage Effect (type)),basedgroup(_Attack Limitations)} _
					respond 3_
			),_
		parentof(_
				{DI:Freakishness (Electrified Skin)},_
				{AD:Mutation Affliction (Electrified Skin)},_
				{AD:Mutation Burning Attack (Electrified Skin)}_
				)

Bone Spur, 0, displaycost(14), page(ATE1:26),_
		adds(_
				{DI:Freakishness (Bone Spur)}=3,_
				AD:Mutation Striker (Impaling; [Description]) _
					with {"Long: any reach", +100%/+200%,group(Striker),page(B88),shortname(Long),gives(=nobase to owner::reach$, ="C,$if(me::level=1 THEN "1" ELSE "1-$solver(me::level)")" to owner::reach$),level(1),valuenum(100)} _
					and {"Switchable", +10%,group(_General),page(P109),level(1),valuenum(10)} _
					respond "Bone Spur"_
			),_
		parentof(_
					{DI:Freakishness (Bone Spur)},_
					AD:Mutation Striker (Impaling; Bone Spur)_
				)

Mighty Roar, 0, displaycost(21), page(ATE1:26),_
	adds(_
			{SK:Innate Attack (Breath)}==0pts,_
			{DI:Freakishness (Mighty Roar)}=4,_
			AD:Mutation Affliction (Mighty Roar) _
				with {Costs Fatigue, -5%/-10%, mods(Costs Fatigue), group(_General), page(B111), shortname(Costs FP)} _
				and {Hearing-Based, +150%, group(_Attack Enhancements), page(B109)} _
				and {Jet, +0%, group(_Attack Enhancements), page(B106), gives(-3 to owner::acc, *0.5 to owner::rangehalfdam, *0.1 to owner::rangemax, =nobase to owner::rof$, ="Jet" to owner::rof$)} _
				and {_
						Jet: Increased Range (1/2D Range Only), +5%/+10%, shortname(Increased Range (1/2D Range Only)), group(_Attack Enhancements), page(B106),_
							levelnames(#buildlist(list(#list(LevelName Step 1)), template(x%listitem%))),_
							gives(_
								=*(me::level + 1) to owner::rangehalfdam _
								)_
					} _
				respond 5 _
		),_
	parentof(_
			{DI:Freakishness (Mighty Roar)},_
			AD:Mutation Affliction (Mighty Roar)_
		)

Nuclear Core, 0, displaycost(30), page(ATE1:26),_
	adds(_
			{DI:Freakishness (Nuclear Core)}=6,_
			{DI:Freaky Oddity},_
			AD:Mutation Toxic Attack (Nuclear Core) = 10 _
				with {_
						Partial Dice (per die), -1/-2/+, formula(@int(me::level * -owner::premodspoints * 0.3 + 0.9)), forceformula(yes),_
							level(2),_
							group(Toxic Attack Limitations), page(B62),_
							gives(-owner::level to owner::damage),_
							upto(3),_
							levelnames(-1/die,-2/die,-3/die)_
					} _
				and {_
						Area Effect, +50%/+100%, group(_Attack Enhancements), page(B102), upto(25), shortname(Area Effect),_
							formula(50 * (me::level - @if(owner::radius > 0 THEN 1 ELSE 0))), forceformula(yes),_
							levelnames("2 yd",#list(LevelName Area Effect)),_
							gives(=+@if(owner::radius > 0 THEN 0 ELSE (2^me::level)) to owner::radius, =*@if(owner::radius > 0 THEN (0.5 * (2^me::level))) to owner::radius)_
					} _
				and {Aura, +80%, group(_Attack Enhancements), page(B102)} _
				and {_
						Melee Attack: Reach C, -30%, group(_Attack Limitations), page(B112),_
							gives(_
								=nobase to owner::rangehalfdam$,_
								=nobase to owner::rangemax$,_
								=nobase to owner::reach$,_
								="C" to owner::reach$ _
								), addmode(Primary, skillused(ST:DX, SK:Brawling))_
					} _
				and {Costs Fatigue, -5%/-10%, mods(Costs Fatigue), group(_General), page(B111), shortname(Costs FP)} _
				and {_
						Damage Modifier: Radiation, +25%, shortname(Radiation), group(Toxic Attack Enhancements), page(B104),_
							gives(=" rad" to owner::damtype$)_
					} _
				respond 3_
		),_
	parentof(_
			{DI:Freakishness (Nuclear Core)},_
			AD:Mutation Toxic Attack (Nuclear Core)_
		)

Razor Claws, 0, displaycost(11), page(ATE1:26),_
	adds(_
			{DI:Freakishness (Razor Claws)}=2,_
			{AD:Mutation Claws (Long Talons)} _
				with {Switchable, +10%, group(_General), page(P109)}_
		),_
	parentof(_
			{DI:Freakishness (Razor Claws)},_
			AD:Mutation Claws (Long Talons)_
		)

Super-Strength, 0, displaycost(13/level), page(ATE1:26),_
	x(#ChoiceList(_
			name(level),_
			title(Super-Strength: Select Level),_
			text(Choose how many levels of Super-Strength you'd like to take:),_
			picksallowed(1),_
			method(bynumber),_
			list(_
					" 1"," 2"," 3"," 4"," 5"," 6"," 7"," 8"," 9","10","11","12","13","14","15","16","17","18","19","20"_
				),_
			aliaslist(_
						1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20_
					),_
			alt1list(_
						2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40_
					)_
			)_
		),_
	adds(_
			{DI:Freakishness (Super-Strength)}=%levelalt1list%,_
			{AD:Mutation Extra ST (Super-Strength)}=%levelaliaslist% _
				with {Size, -10%, formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes), group(Size), page(B15)},_
			{AD:Mutation Striking ST (Super-Strength)}=%levelaliaslist% _
				with {Size, -10%, formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes), group(Size), page(B15)}_
		),_
	parentof(_
			{DI:Freakishness (Super-Strength)},_
			{AD:Mutation Extra ST (Super-Strength)},_
			{AD:Mutation Striking ST (Super-Strength)}_
		)

Toothsome, 0, displaycost(3), page(ATE1:26),_
	adds(_
			{DI:Freakishness (Toothsome)}=1,_
			AD:Mutation Teeth (Fangs) _
				with {Can also switch to Sharp Teeth, +50%, page(ATE1:26)} _
				and {"Switchable", +10%,group(_General),page(P109)}_
		),_
	parentof(_
			{DI:Freakishness (Toothsome)},_
			AD:Mutation Teeth (Fangs)_
		)

***************************************************************************
<Mutations, Mutations - Defense Mutations>
***************************************************************************
Adaptable Skin 1, 0, displaycost(8), page(ATE1:26),_
	adds(_
			{DI:Freakishness (Adaptable Skin)}=2,_
			AD:Mutation Chameleon (Adaptable Skin) = 2_
		),_
	parentof(_
			{DI:Freakishness (Adaptable Skin)},_
			AD:Mutation Chameleon (Adaptable Skin)_
		)

Adaptable Skin 2, 0, displaycost(16), page(ATE1:26),_
	adds(_
			{DI:Freakishness (Adaptable Skin)}=4,_
			AD:Mutation Chameleon (Adaptable Skin) = 4_
		),_
	parentof(_
			{DI:Freakishness (Adaptable Skin)},_
			AD:Mutation Chameleon (Adaptable Skin)_
		)

Boosted Hemoglobin, 0, displaycost(8), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Boosted Hemoglobin)}=2,_
			{AD:Mutation Doesn't Breathe (Boosted Hemoglobin)} _
				with {Oxygen Storage, -10%/-20%, levelnames(x300, x200, x100, x50, x25), upto(5), level(5), group(Doesn't Breathe), page(B49)}_
		),_
	parentof(_
			{DI:Freakishness (Boosted Hemoglobin)},_
			{AD:Mutation Doesn't Breathe (Boosted Hemoglobin)} _
		)

Flesh Pocket, 0, displaycost(4), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Flesh Pocket)}=1,_
			AD:Mutation Payload (Flesh Pocket)=5_
		),_
	parentof(_
			{DI:Freakishness (Flesh Pocket)},_
			AD:Mutation Payload (Flesh Pocket)_
		)

Natural Anti-Rad 1, 0, displaycost(8), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Natural Anti-Rad)}=2,_
			AD:Extra RP (Natural Anti-Rad) = 10_
		),_
	parentof(_
			{DI:Freakishness (Natural Anti-Rad)},_
			AD:Extra RP (Natural Anti-Rad)_
		)

Natural Anti-Rad 2, 0, displaycost(12), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Natural Anti-Rad)}=3,_
			AD:Extra RP (Natural Anti-Rad) = 15_
		),_
	parentof(_
			{DI:Freakishness (Natural Anti-Rad)},_
			AD:Extra RP (Natural Anti-Rad)_
		)

Natural Anti-Rad 3, 0, displaycost(16), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Natural Anti-Rad)}=4,_
			AD:Extra RP (Natural Anti-Rad) = 20_
		),_
	parentof(_
			{DI:Freakishness (Natural Anti-Rad)},_
			AD:Extra RP (Natural Anti-Rad)_
		)

Prickly, 0, displaycost(3), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Prickly)}=1,_
			AD:Mutation Long Spines (Prickly) _
				with {"Switchable", +10%,group(_General),page(P109)}_
		),_
	parentof(_
			{DI:Freakishness (Prickly)},_
			AD:Mutation Long Spines (Prickly) _
		)

Redundant Organs, 0, displaycost(16), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Redundant Organs)}=4,_
			AD:Mutation Injury Tolerance (Redundant Organs) _
				with {Unliving, +20, group(Injury Tolerance), page(B61)}_
		),_
	parentof(_
			{DI:Freakishness (Redundant Organs)},_
			AD:Mutation Injury Tolerance (Redundant Organs) _
		)

Resilient Brain, 0, displaycost(8), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Resilient Brain)}=2,_
			AD:Mutation Recovery (Resilient Brain)_
		),_
	parentof(_
			{DI:Freakishness (Resilient Brain)},_
			{AD:Mutation Recovery (Resilient Brain)}_
		)

Self-Restoration 1, 0, displaycost(21), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Self-Restoration)}=4,_
			AD:Mutation Regeneration (Self-Restoration) = 2_
		),_
	parentof(_
			{DI:Freakishness (Self-Restoration)},_
			AD:Mutation Regeneration (Self-Restoration)_
		)

Self-Restoration 2, 0, displaycost(43), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Self-Restoration)}=7,_
			{DI:Freaky Oddity},_
			AD:Mutation Regeneration (Self-Restoration) = 3_
		),_
	parentof(_
			{DI:Freakishness (Self-Restoration)},_
			AD:Mutation Regeneration (Self-Restoration)_
		)

Slimy, 0, displaycost(8), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Slimy)}=2,_
			AD:Mutation Slippery (Slimy) = 5_
		),_
	parentof(_
			{DI:Freakishness (Slimy)},_
			AD:Mutation Slippery (Slimy)_
		)

Starfish Genes, 0, displaycost(33), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Starfish Genes)}=7,_
			{DI:Freaky Oddity},_
			AD:Mutation Regrowth (Starfish Genes)_
		),_
	parentof(_
			{DI:Freakishness (Starfish Genes)},_
			AD:Mutation Regrowth (Starfish Genes)_
		)

Thick Hide 1, 0, displaycost(17), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Thick Hide)}=3,_
			AD:Mutation Damage Resistance (Thick Hide) = 4_
		),_
	parentof(_
			{DI:Freakishness (Thick Hide)},_
			AD:Mutation Damage Resistance (Thick Hide)_
		)

Thick Hide 2, 0, displaycost(30), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Thick Hide)}=5,_
			AD:Mutation Damage Resistance (Thick Hide)=7_
		),_
	parentof(_
			{DI:Freakishness (Thick Hide)},_
			AD:Mutation Damage Resistance (Thick Hide)_
		)

Thick Hide 3, 0, displaycost(43), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Thick Hide)}=7,_
			{DI:Freaky Oddity},_
			AD:Mutation Damage Resistance (Thick Hide) = 10_
		),_
	parentof(_
			{DI:Freakishness (Thick Hide)},_
			AD:Mutation Damage Resistance (Thick Hide)_
		)

Unnatural Hardiness, 0, displaycost(12), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Unnatural Hardiness)}=3_
		),_
	creates(_
			{AD:Mutation Resistant to Metabolic Hazards (Unnatural Hardiness), 30, cat(Exotic, Physical, Exotic Physical), noresync(yes)} _
				with {"+8", *1/2}_
			),_
	parentof(_
			{DI:Freakishness (Unnatural Hardiness)},_
			AD:Mutation Resistant to Metabolic Hazards (Unnatural Hardiness)_
		)

***************************************************************************
<Mutations, Mutations - Morphology Mutations>
***************************************************************************
Brainy, 0, displaycost(11/head), page(ATE1:27),_
	x(#ChoiceList(_
			name(level),_
			title(Brainy: Select Level),_
			text(Choose how many levels of Brainy you'd like to take:),_
			picksallowed(1),_
			method(bynumber),_
			list(_
					" 1"," 2"," 3"," 4"," 5"," 6"," 7"," 8"," 9","10","11","12","13","14","15","16","17","18","19","20"_
				),_
			aliaslist(_
						1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20_
					),_
			alt1list(_
						4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80_
					)_
			)_
		),_
	adds(_
			{DI:Freakishness (Brainy)}=%levelalt1list%,_
			AD:Mutation Extra Head (Brainy)=%levelaliaslist%_
		),_
	parentof(_
			{DI:Freakishness (Brainy)},_
			AD:Mutation Extra Head (Brainy)_
		)

Handy, 0, displaycost(7/arm), page(ATE1:27),_
	x(#ChoiceList(_
			name(level),_
			title(Handy: Select Level),_
			text(Choose how many levels of Handy you'd like to take:),_
			picksallowed(1),_
			method(bynumber),_
			list(_
					" 1"," 2"," 3"," 4"," 5"," 6"," 7"," 8"," 9","10","11","12","13","14","15","16","17","18","19","20"_
				),_
			aliaslist(_
						1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20_
					),_
			alt1list(_
						3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60_
					)_
			)_
		),_
	adds(_
			{DI:Freakishness (Handy)}=%levelalt1list%,_
			AD:Mutation Extra Arms (Handy)=%levelaliaslist%_
		),_
	parentof(_
			{DI:Freakishness (Handy)},_
			AD:Mutation Extra Arms (Handy)_
		)

Mouthy, 0, displaycost(3/mouth), page(ATE1:27),_
	x(#ChoiceList(_
			name(level),_
			title(Mouthy: Select Level),_
			text(Choose how many levels of Mouthy you'd like to take:),_
			picksallowed(1),_
			method(bynumber),_
			list(_
					" 1"," 2"," 3"," 4"," 5"," 6"," 7"," 8"," 9","10","11","12","13","14","15","16","17","18","19","20"_
				),_
			aliaslist(_
						1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20_
					),_
			alt1list(_
						2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40_
					)_
			)_
		),_
	adds(_
			{DI:Freakishness (Mouthy)}=%levelalt1list%,_
			AD:Mutation Extra Mouth (Mouthy)=%levelaliaslist%_
		),_
	parentof(_
			{DI:Freakishness (Mouthy)},_
			AD:Mutation Extra Mouth (Mouthy)_
		)

Trampler, 0, displaycost(3), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Trampler)}=2,_
			AD:Mutation Extra Legs (4 Legs)_
		),_
	parentof(_
			{DI:Freakishness (Trampler)},_
			AD:Mutation Extra Legs (4 Legs)_
		)


***************************************************************************
<Mutations, Mutations - Movement Mutations>
***************************************************************************
Fast-Twitch Legs 1, 0, displaycost(26), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Fast-Twitch Legs)}=4,_
			AD:Mutation Enhanced Move (Ground)=2,_
			AD:Mutation Super Jump (Fast-Twitch Legs)_
		),_
	parentof(_
			{DI:Freakishness (Fast-Twitch Legs)},_
			AD:Mutation Enhanced Move (Ground),_
			AD:Mutation Super Jump (Fast-Twitch Legs)_
		)

Fast-Twitch Legs 2, 0, displaycost(44), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Fast-Twitch Legs)}=6,_
			AD:Mutation Enhanced Move (Ground)=3,_
			AD:Mutation Super Jump (Fast-Twitch Legs)=2,_
			DI:Freaky Oddity_
		),_
	parentof(_
			{DI:Freakishness (Fast-Twitch Legs)},_
			AD:Mutation Enhanced Move (Ground),_
			AD:Mutation Super Jump (Fast-Twitch Legs)_
		)

Fins 1, 0, displaycost(8), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Fins)}=2,_
			AD:Mutation Amphibious (Fins)_
		),_
	parentof(_
			{DI:Freakishness (Fins)},_
			AD:Mutation Amphibious (Fins)_
		)

Fins 2, 0, displaycost(25), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Fins)}=5,_
			AD:Mutation Amphibious (Fins),_
			AD:Mutation Enhanced Move (Water)=2_
		),_
	parentof(_
			{DI:Freakishness (Fins)},_
			AD:Mutation Amphibious (Fins),_
			AD:Mutation Enhanced Move (Water)_
		)

Suction Pads, 0, displaycost(16), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Suction Pads)}=4,_
			AD:Mutation Clinging (Suction Pads)_
		),_
	parentof(_
			{DI:Freakishness (Suction Pads)},_
			AD:Mutation Clinging (Suction Pads)_
		)

Winged Flight 1, 0, displaycost(22), page(ATE1:27), cat(Mutations - Morphology Mutations),_
	adds(_
			{DI:Freakishness (Winged Flight)}=8,_
			AD:Mutation Flight (Winged Flight) _
			with {Winged, -25%, group(Flight), page(B56)},_
			DI:Freaky Oddity (Wings)_
		),_
	parentof(_
			{DI:Freakishness (Winged Flight)},_
			AD:Mutation Flight (Winged Flight)_
		)

Winged Flight 2, 0, displaycost(31), page(ATE1:27), cat(Mutations - Morphology Mutations),_
	adds(_
			{DI:Freakishness (Winged Flight)}=9,_
			AD:Mutation Flight (Winged Flight) _
				with {Winged, -25%, group(Flight), page(B56)},_
			AD:Mutation Enhanced Move (Air)=1,_
			DI:Freaky Oddity (Wings)_
		),_
	parentof(_
			{DI:Freakishness (Winged Flight)},_
		AD:Mutation Flight (Winged Flight),_
		AD:Mutation Enhanced Move (Air)_
		)

Winged Flight 3, 0, displaycost(40), page(ATE1:27), cat(Mutations - Morphology Mutations),_
	adds(_
			{DI:Freakishness (Winged Flight)}=10,_
			AD:Mutation Flight (Winged Flight) _
				with {Winged, -25%, group(Flight), page(B56)},_
			AD:Mutation Enhanced Move (Air)=2,_
			DI:Freaky Oddity (Wings)_
		),_
	parentof(_
			{DI:Freakishness (Winged Flight)},_
			AD:Mutation Flight (Winged Flight),_
			AD:Mutation Enhanced Move (Air)_
		)

***************************************************************************
<Mutations, Mutations - Sensory Mutations>
***************************************************************************
Aural Filters, 0, displaycost(4), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Aural Filters)}=1,_
			{AD:Mutation Protected [Sense] (Aural Filters)} respond "Hearing"_
		),_
	parentof(_
			{DI:Freakishness (Aural Filters)},_
			AD:Mutation Protected Hearing (Aural Filters)_
		)

Black Sight, 0, displaycost(21), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Black Sight)}=4,_
			AD:Mutation Dark Vision (Black Sight)_
		),_
	parentof(_
			{DI:Freakishness (Black Sight)},_
			AD:Mutation Dark Vision (Black Sight)_
		)

Eagle Eyes 1, 0, displaycost(12), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Eagle Eyes)}=3,_
			AD:Mutation Telescopic Vision (Eagle Eyes)=3_
		),_
	parentof(_
			{DI:Freakishness (Eagle Eyes)},_
			AD:Mutation Telescopic Vision (Eagle Eyes)_
		)

Eagle Eyes 2, 0, displaycost(21), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Eagle Eyes)}=4,_
			AD:Mutation Telescopic Vision (Eagle Eyes)=5_
		),_
	parentof(_
			{DI:Freakishness (Eagle Eyes)},_
			AD:Mutation Telescopic Vision (Eagle Eyes)_
		)

Hound Nose 1, 0, displaycost(12), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Hound Nose)}=3,_
			AD:Mutation Discriminatory Smell (Hound Nose) _
		),_
	parentof(_
			{DI:Freakishness (Hound Nose)},_
			AD:Mutation Discriminatory Smell (Hound Nose) _
		)

Hound Nose 2, 0, displaycost(19), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Hound Nose)}=4,_
			AD:Mutation Discriminatory Smell (Hound Nose) _
				with {Emotion Sense, +50%, group(Discriminatory Smell), page(B49)}_
		),_
	parentof(_
			{DI:Freakishness (Hound Nose)},_
			AD:Mutation Discriminatory Smell (Hound Nose) _
		)

Outsize Eardrums, 0, displaycost(13), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Outsize Eardrums)}=2,_
			AD:Mutation Discriminatory Hearing (Outsize Eardrums) _
		),_
	parentof(_
			{DI:Freakishness (Outsize Eardrums)},_
			AD:Mutation Discriminatory Hearing (Outsize Eardrums) _
		)

Red Sight, 0, displaycost(8), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Red Sight)}=2,_
			AD:Mutation Infravision (Red Sight)_
		),_
	parentof(_
			{DI:Freakishness (Red Sight)},_
			AD:Mutation Infravision (Red Sight)_
		)

Rubber Neck, 0, displaycost(20), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Rubber Neck)}=5,_
			AD:Mutation 360° Vision (Rubber Neck)_
		),_
	parentof(_
			{DI:Freakishness (Rubber Neck)},_
			AD:Mutation 360° Vision (Rubber Neck)_
		)

Sound-Wave Recall, 0, displaycost(8), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Sound-Wave Recall)}=2,_
			AD:Mutation Mimicry (Sound-Wave Recall)_
		),_
	parentof(_
			{DI:Freakishness (Sound-Wave Recall)},_
			AD:Mutation Mimicry (Sound-Wave Recall)_
		)

Visual Filters, 0, displaycost(4), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Visual Filters)}=1,_
			{AD:Mutation Protected [Sense] (Visual Filters)} respond {Vision}_
		),_
	parentof(_
			{DI:Freakishness (Visual Filters)},_
			{AD:Mutation Protected Vision (Visual Filters)} _
		)

Whiskers, 0, displaycost(8), page(ATE1:27),_
	adds(_
			{DI:Freakishness (Whiskers)}=2,_
			AD:Mutation Vibration Sense (Whiskers)_
		),_
	parentof(_
			{DI:Freakishness (Whiskers)},_
			AD:Mutation Vibration Sense (Whiskers)_
		)

********************************************************************************************************\[STOP]
[PERKS]
*******************************************************************************************************\[START]
<_General>
Forgettable Face, 1
Hand Cannon, 1/2, upto(2)
Improvised Weapons, 1, x(#InputToTag("Which Combat Skill?", nameext, , ))
Off-Hand Weapon Training, 1, x(#InputToTag("Which Combat Skill?", nameext, , ))
Quick-Reload (Belt), 1
Quick-Reload (Breechloader), 1
Quick-Reload (Detachable Magazine), 1
Quick-Reload (Internal Magazine), 1
Quick-Reload (Revolver), 1
Quick-Reload (Muzzleloader), 1/2, upto(4)

********************************************************************************************************\[STOP]
[DISADVANTAGES]
*******************************************************************************************************\[START]
<Physical>
Freakishness, -1/-2, cat(Exotic, Physical, Exotic Physical), taboo(ST:Freaky Oddities >= 1),_
		gives(-1 to ST:Freakishness, +(1/6) to ST:Freaky Oddities), replacetags(in "ST:Freakishness" with mainwin(13))

Freaky Oddity, 0, cat(Exotic, Physical, Exotic Physical), gives(-1 to ST:Freaky Oddities), taboo(ST:Freaky Oddities >= 1),_
x(#InputToTagReplace("Please describe one deformity/oddity for every 6 full levels of Freakishness:", nameext, , "Freaky Oddities"))

Radiation Weakness, -1/-2, cat(Mundane, Physical, Mundane Physical), upto(@int((ST:ST + ST:HT + 3) / 4)), gives(-1 to "AD:_Radiation Points")


********************************************************************************************************\[STOP]
[EQUIPMENT]
*******************************************************************************************************\[START]
<_ATE Equipment, _ATE Common Gear>
"Bolt Cutters", techlvl(6), basecost(30), baseweight(15), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL6", *4, group(_ATE Equipment))
"Duct Tape, 60yd", techlvl(6), basecost(1), baseweight(2), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL6", *4, group(_ATE Equipment))
"Dynamite, Stick", techlvl(6), basecost(5), baseweight(0.4), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL6", *4, group(_ATE Equipment))
"Fuse Cord, 15'", techlvl(3), basecost(10), baseweight(1), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL0-4", *1, group(_ATE Equipment))
"Geiger Counter", techlvl(6), basecost(800), baseweight(4), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL6", *4, group(_ATE Equipment))
"Googles Tinted", techlvl(6), basecost(20), baseweight(0.05), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL6", *4, group(_ATE Equipment))
"Lab Suitcase", techlvl(5), basecost(3000), baseweight(20), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL5", *2, group(_ATE Equipment))
"Map", techlvl(1), basecost(15), baseweight(0.1), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL0-4", *1, group(_ATE Equipment)), x(#InputToTag("For Where?", nameext, , "Map"))
"Multi-Tool", techlvl(5), basecost(50), baseweight(0.5), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL5", *2, group(_ATE Equipment))
"Reloading Press", techlvl(5), basecost(100), baseweight(2), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL5", *1, group(_ATE Equipment))
"Solar-Powered Battery Recharger", techlvl(8), basecost(100), baseweight(2), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL8", *16, group(_ATE Equipment))
"Whistle", techlvl(5), basecost(5), baseweight(0.05), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL5", *2, group(_ATE Equipment))
"Wire Cutters", techlvl(5), basecost(30), baseweight(2), cat(_ATE Equipment, _ATE Common Gear), initmods("_TL5", *2, group(_ATE Equipment))

<_ATE Equipment, _ATE Consumables>
"Anti-Rad Drugs", techlvl(7), basecost(500), baseweight(0.1), cat(_ATE Equipment, _ATE Consumables), initmods("_TL7", *8, group(_ATE Equipment))
"Canned Food", techlvl(5), basecost(1), baseweight(1), cat(_ATE Equipment, _ATE Consumables), initmods("_TL5", *2, group(_ATE Equipment))
"Chelating Agents", techlvl(7), basecost(500), baseweight(0.1), cat(_ATE Equipment, _ATE Consumables), initmods("_TL7", *8, group(_ATE Equipment))
"MRE", techlvl(8), basecost(5), baseweight(1.5), cat(_ATE Equipment, _ATE Consumables), initmods("_TL8", *16, group(_ATE Equipment))
"Rations", techlvl(0), basecost(2), baseweight(0.5), cat(_ATE Equipment, _ATE Consumables), initmods("_TL0-4", *1, group(_ATE Equipment))
"Water, Pint", techlvl(0), basecost(1), baseweight(1), cat(_ATE Equipment, _ATE Consumables), initmods("_TL0-4", *1, group(_ATE Equipment))
"Water Bottle, Plastic", techlvl(8), basecost(0.0625), baseweight(0.05), cat(_ATE Equipment, _ATE Consumables), initmods("_TL8", *16, group(_ATE Equipment))
"Experimental: GO!Juice", techlvl(?), basecost(100), baseweight(0.25), cat(_ATE Equipment, _ATE Consumables), initmods("_TL?", *1, group(_ATE Equipment))
"Experimental: PatchUp Punch", techlvl(?), basecost(100), baseweight(0.25), cat(_ATE Equipment, _ATE Consumables), initmods("_TL?", *1, group(_ATE Equipment))
"Experimental: SieverTasty", techlvl(?), basecost(100), baseweight(0.25), cat(_ATE Equipment, _ATE Consumables), initmods("_TL?", *1, group(_ATE Equipment))

<_ATE Equipment, _ATE Improvised Weapons>
"Baseball Bat", techlvl(?), break(+2), lc(4), basecost(25), baseweight(2),_
	newmode(Swing, damage(sw+1), damtype(cr), reach(1), parry(0), minst(8), notes(SP 0), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))
"Board with Nail", techlvl(?), break(+2), lc(4), basecost(5), baseweight(2),_
	newmode(Swing, damage(sw-2), damtype(imp), reach(1), parry(-1U), minst(8), notes(SP -2), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))
"Digging Pick", techlvl(?), break(+2), lc(4), basecost(35), baseweight(2),_
	newmode(Swing, damage(sw), damtype(imp), reach(1), parry(0U), minst(10), notes(SP -1), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))
"Hammer", techlvl(?), break(+2), lc(4), basecost(15), baseweight(3),_
	newmode(Swing, damage(sw+2), damtype(cr), reach(1), parry(0U), minst(10), notes(SP 0), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))
"Tire Iron", techlvl(?), break(+2), lc(4), basecost(15), baseweight(2),_
	newmode(Swing, damage(sw+1), damtype(cr), reach(1), parry(0), minst(10), notes(SP -2), skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, SK:Two-Handed Axe/Mace-3)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))

"Rebar, Long", techlvl(?), break(+2), lc(4), basecost(5), baseweight(3),_
	newmode(Swing, damage(sw+1), damtype(cr), reach(1), parry(0), minst(10), notes(SP -1), skillused(SK:Broadsword, SK:Shortsword-2, ST:DX-5)),_
	newmode(Thrust, damage(thr+1), damtype(cr), reach(1), parry(0), minst(10), skillused(SK:Broadsword, SK:Shortsword-2, ST:DX-5)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))

"Weighted Scarf", techlvl(?), break(+2), lc(4), basecost(5), baseweight(1),_
	newmode(Swing, damage(sw), damtype(cr), reach(C,1), parry(-2U), minst(6), notes(SP -1), skillused(SK:Flail, ST:DX-6, SK:Axe/Mace-4, SK:Two-Handed Flail-3)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))

"Box Cutter", techlvl(?), break(+2), lc(4), basecost(2), baseweight(0.25),_
	newmode(Swing, damage(sw-3), damtype(cut), reach(C,1), parry(-1), minst(5), notes(SP 0), skillused(SK:Knife, ST:DX-4, SK:Shortsword-3)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))
"Screwdriver", techlvl(?), break(+2), lc(4), basecost(3), baseweight(0.25),_
	newmode(Thrust, damage(thr-2), damtype(imp), reach(C), parry(-1), minst(5), notes(SP -1), skillused(SK:Knife, ST:DX-4, SK:Shortsword-3)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))

"Chain", techlvl(?), break(+2), lc(4), basecost(20), baseweight(5),_
	newmode(Swing, damage(sw+1), damtype(cr), reach(1-4*), parry(-2U), minst(11), notes(SP -1/-4), skillused(SK:Kusari, ST:DX-6, SK:Two-Handed Flail-4, SK:Whip-3)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))

"Rebar and Concrete", techlvl(?), break(+2), lc(4), basecost(10), baseweight(13),_
	newmode(Swing, damage(sw+5), damtype(cr), reach(2,3*), parry(0U), minst(15), notes(SP -2), skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, SK:Two-Handed Axe/Mace-4)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))

"Rebar, Short", techlvl(?), break(+2), lc(4), basecost(3), baseweight(1),_
	newmode(Swing, damage(sw), damtype(cr), reach(1), parry(0), minst(6), notes(SP -1), skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Knife-4)),_
	newmode(Thrust, damage(thr), damtype(cr), reach(1), parry(0), minst(6), skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Knife-4)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))

"Pitchfork", techlvl(?), break(+2), lc(4), basecost(20), baseweight(5),_
	newmode(One Hand, damage(thr+3), armordivisor(0.5), damtype(imp), reach(1), parry(0U), minst(11), notes(SP -2), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),_
	newmode(Two Hands, damage(thr+4), armordivisor(0.5), damtype(imp), reach(1,2*), parry(0), minst(10), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))
"Post-Hole Digger", techlvl(?), break(+2), lc(4), basecost(60), baseweight(12),_
	newmode(Thrust, damage(thr+2), damtype(cut), reach(1,2*), parry(0U), minst(13), notes(SP -4), skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))

"Golf Club", techlvl(?), break(+2), lc(4), basecost(25), baseweight(1.5),_
	newmode(Swing, damage(sw+1), damtype(cr), reach(1,2), parry(0U), minst(10), notes(SP -2), skillused(SK:Two-Handed Axe/Mace, ST:DX-5, SK:Axe/Mace-3, SK:Polearm-4, SK:Two-Handed Flail-4)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))
"Shovel", techlvl(?), break(+2), lc(4), basecost(12), baseweight(6),_
	newmode(Swing, damage(sw+3), damtype(cut), reach(1,2*), parry(0U), minst(12), notes(SP -2), skillused(SK:Two-Handed Axe/Mace, ST:DX-5, SK:Axe/Mace-3, SK:Polearm-4, SK:Two-Handed Flail-4)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))
"Sledgehammer", techlvl(?), break(+2), lc(4), basecost(10), baseweight(15),_
	newmode(Swing, damage(sw+4), damtype(cr), reach(1,2*), parry(0U), minst(13), notes(SP -2), skillused(SK:Two-Handed Axe/Mace, ST:DX-5, SK:Axe/Mace-3, SK:Polearm-4, SK:Two-Handed Flail-4)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))

"2x4", techlvl(?), break(+2), lc(4), basecost(5), baseweight(3),_
	newmode(Swing, damage(sw+2), damtype(cr), reach(1), parry(0), minst(9), notes(SP -1), skillused(SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4)),_
	newmode(Thrust, damage(thr+1), damtype(cr), reach(1), parry(0), minst(9), skillused(SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4)),_
	cat(_ATE Equipment, _ATE Improvised Weapons), initmods("_TL?", *1, group(_ATE Equipment))

<_ATE Equipment, _ATE Ammo>
"Cartridge, Pistol", techlvl(?), basecost(5), baseweight(0.025), cat(_ATE Equipment, _ATE Ammo), x(#InputToTag("What Caliber?", nameext, , "Pistol Cartridge"))
"Cartridge, Rifle", techlvl(?), basecost(10), baseweight(0.05), cat(_ATE Equipment, _ATE Ammo), x(#InputToTag("What Caliber?", nameext, , "Rifle Cartridge"))
"Cartridge, Shotgun", techlvl(?), basecost(10), baseweight(0.05), cat(_ATE Equipment, _ATE Ammo), x(#InputToTag("What Caliber?", nameext, , "Shotgun Cartridge"))
"Cartridge, HMG", techlvl(?), basecost(50), baseweight(0.25), cat(_ATE Equipment, _ATE Ammo), x(#InputToTag("What Caliber?", nameext, , "HMG Cartridge"))
"Flamethower Fuel", techlvl(?), basecost(5), baseweight(2), cat(_ATE Equipment, _ATE Ammo)
"Paper Cartridge", techlvl(?), basecost(1), baseweight(0.05), cat(_ATE Equipment, _ATE Ammo)
"Power Pack, Internal", techlvl(?), basecost(300), baseweight(0.5), cat(_ATE Equipment, _ATE Ammo)
"Power Pack, External", techlvl(?), basecost(3000), baseweight(5), cat(_ATE Equipment, _ATE Ammo)
"Rocket, Gyroc", techlvl(?), basecost(150), baseweight(0.1), cat(_ATE Equipment, _ATE Ammo)
"Cartridge Components", techlvl(?), basecost(10), baseweight(0.1), cat(_ATE Equipment, _ATE Ammo)

<_ATE Equipment, _ATE Transportation Gear>
"Autogyro", techlvl(7), basecost(9000), baseweight(250), cat(_ATE Equipment, _ATE Transportation Gear), initmods("_TL7", *8, group(_ATE Equipment))
"Bicycle, Basic", techlvl(5), basecost(65), baseweight(65), cat(_ATE Equipment, _ATE Transportation Gear), initmods("_TL5", *2, group(_ATE Equipment))
"Bicycle, Racing", techlvl(7), basecost(100), baseweight(20), cat(_ATE Equipment, _ATE Transportation Gear), initmods("_TL7", *8, group(_ATE Equipment))
"Hang-Glider", techlvl(7), basecost(2000), baseweight(80), cat(_ATE Equipment, _ATE Transportation Gear), initmods("_TL7", *8, group(_ATE Equipment))
"Ice Skates", techlvl(3), basecost(60), baseweight(3), cat(_ATE Equipment, _ATE Transportation Gear), initmods("_TL0-4", *1, group(_ATE Equipment))
"Skis", techlvl(0), basecost(175), baseweight(10), cat(_ATE Equipment, _ATE Transportation Gear), initmods("_TL0-4", *1, group(_ATE Equipment))
"Snowshoes", techlvl(0), basecost(100), baseweight(5), cat(_ATE Equipment, _ATE Transportation Gear), initmods("_TL0-4", *1, group(_ATE Equipment))

********************************************************************************************************\[STOP]
[MODIFIERS]
*******************************************************************************************************\[START]
<_General>
"Freakishness Side Effect", *0, group(_General)

<Gadgeteer>
"Specialized", -50%, group(Gadgeteer), x(#InputToTag("Specialized in What?", nameext, , "Specialized"))

<_ATE Equipment>
"_TL0-4", *1, group(_ATE Equipment)
"_TL5", *2, group(_ATE Equipment)
"_TL6", *4, group(_ATE Equipment)
"_TL7", *8, group(_ATE Equipment)
"_TL8", *16, group(_ATE Equipment)
"_TL9", *32, group(_ATE Equipment)
"_TL10", *64, group(_ATE Equipment)
"_TL11", *128, group(_ATE Equipment)
"_TL12", *256, group(_ATE Equipment)
"_TL?", *1, group(_ATE Equipment)
"Consumable: Tainted with Disease", -75%, shortname(Tainted, Disease), group(_ATE Equipment)
"Consumable: Tainted with Radiation", -75%, shortname(Tainted, Radiation), group(_ATE Equipment)
"Armor: Cheap (-1 DR)", -60%, shortname(Cheap, -1 DR), gives(=-1 to owner::dr), group(_ATE Equipment)
"Melee Weapon: Cheap", -60%, shortname(Cheap, +2 Break, -1 Acc), gives(=-1 to owner::acc, =+2 to owner::break), group(_ATE Equipment)
"Melee Weapon: Poorly Balanced", -60%, shortname(Poorly Balanced, -1 Skill, -1 Acc), gives(-1 to owner::acc, =-1 to owner::skillscore), group(_ATE Equipment)
"Firearms: Cheap", -60%, shortname(Cheap, -1 Acc, -1 Malf), gives(=-1 to owner::acc, =-1 to owner::malf), group(_ATE Equipment)
"Misc Gear: Bulky", -50%, shortname(Bulky), gives(*1.5 to owner::weight), group(_ATE Equipment)
"Misc Gear: Fragile", -20%, shortname(Fragile, -1 HT, 3/4 DR), group(_ATE Equipment)
"Misc Gear: Hard to Use", -20%/-40%, upto(4), shortname(Hard to Use), group(_ATE Equipment)
"Misc Gear: Unreliable", -60%, shortname(Unreliable), group(_ATE Equipment)
"Misc Gear: Very Fragile", -50%, shortname(Very Fragile, -2 HT, 1/2 DR), group(_ATE Equipment)
"Vehicles: Damaged", -10%/-20%, upto(8), shortname(Damaged), group(_ATE Equipment)

********************************************************************************************************\[STOP]
[LISTS]
*******************************************************************************************************\[START]
<Languages>
text(If you have not already chosen one, please choose a native Language.),_
		pointswanted(atleast -3, upto 0),_
		itemswanted(upto 2),_
		tagwith(Languages),_
		list(_
			#newitem(_
				LA:English,_
				2/4,_
				displaycost(0),_
				page(B24),_
				upto(3 LimitingTotal),_
				mods(Language),_
				levelnames([None], Broken, Accented, Native),_
				cat(Language, Language Spoken, Language Written, Social Background),_
				initmods(_
					Native Language,_
					-6,_
					gives(=+1 to ST:Native Languages),_
					formula(-@if(AD:Language Talent > 0 then 4 else 6)),_
					forceformula(yes),_
					group(Language),_
					page(B23)_
				),_
				taboo(Native Languages > 1)_
			) #codes(upto 3, downto 3),_
			LA:Language - Native #codes(upto 3, downto 3),_
			LA:Language - Native (Spoken) #codes(upto 3, downto 3),_
			LA:Language - Native (Written) _
		)), y(
// )

<QuirkSelection>
text(You may select up to five Quirks and use the points to further customize your character.),_
		pointswanted(atleast -5, upto 0),_
		itemswanted(atleast 0, upto 5),_
		list(_
				#grouplist(GR:AllQuirks)_
		)), y(
// )

// --------------------------------------------------------------------------------------
//  Doc Lists
// --------------------------------------------------------------------------------------
<Doc Chemist>
text(Please choose eight background skills from the selection below.),_
		pointswanted(atleast 8, upto 8),_
		itemswanted(atleast 8, upto 8),_
		tagwith(Doc(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Doc Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
), select10(
// )

<Doc Herbalist>
text(Please choose eight background skills from the selection below.),_
		pointswanted(atleast 8, upto 8),_
		itemswanted(atleast 8, upto 8),_
		tagwith(Doc(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Doc Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
), select10(
// )

<Doc Medic>
text(Please choose a primary skill from the selection below.),_
		pointswanted(1),_
		itemswanted(1),_
		tagwith(Doc(PrimarySkills)),_
		list(_
			SK:Poisons #codes(upto 1pts),_
			SK:Pharmacy (Synthetic) #codes(upto 1pts),_
			SK:Veterinary #codes(upto 1pts)_
		)_
),_
select10(text(Please choose eight background skills from the selection below.),_
		pointswanted(atleast 8, upto 8),_
		itemswanted(atleast 8, upto 8),_
		tagwith(Doc(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Poisons #codes(upto 1pts),_
			SK:Pharmacy (Synthetic) #codes(upto 1pts),_
			SK:Veterinary #codes(upto 1pts),_
			#buildlist(list(#list(Doc Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
), select11(
// )

<Doc Shrink>
text(Please choose a primary skill from the selection below.),_
		pointswanted(1),_
		itemswanted(1),_
		tagwith(Doc(PrimarySkills)),_
		list(_
			SK:Body Language #codes(upto 1pts),_
			SK:Interrogation #codes(upto 1pts),_
			SK:Pharmacy (Synthetic) #codes(upto 1pts)_
		)_
),_
select10(text(Please choose eight background skills from the selection below.),_
		pointswanted(atleast 8, upto 8),_
		itemswanted(atleast 8, upto 8),_
		tagwith(Doc(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Body Language #codes(upto 1pts),_
			SK:Interrogation #codes(upto 1pts),_
			SK:Pharmacy (Synthetic) #codes(upto 1pts),_
			#buildlist(list(#list(Doc Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
), select11(
// )

<Doc First Disadvantage List>
DI:Reduced Basic Speed #codes(upto 1, downto 1),_
DI:Charitable,_
DI:Code of Honor (Professional),_
#newitem(DI:Delusion (No one will attack a medic who’s healing someone!), -10, page(B130), cat(Mundane, Mental)),_
DI:Duty,_
DI:Greed,_
DI:Pacifism (Reluctant Killer),_
DI:Pacifism (Cannot Harm Innocents),_
DI:Pacifism (Cannot Kill),_
DI:Pacifism (Self-Defense Only),_
DI:Pacifism (Total Nonviolence),_
DI:Secret,_
DI:Selfish,_
DI:Selfless,_
DI:Sense of Duty,_
#newitem(DI:Vow (Never refuse a request for medical assistance), -10, page(B160), cat(Mundane, Mental))

<Doc Second Disadvantage List>
DI:Addiction ([Physiological]),_
DI:Alcoholism,_
#newitem(DI:Bad Sight (Nearsighted), -25, displaycost(-10), page(B123), cat(Mundane Physical, Mundane, Physical), taboo(DI:Blindness, DI:Bad Sight (Farsighted), AD:Acute Vision), mods(Bad Sight), conditional( -6 to ST:Vision when "item is more than 1 yard away", -2 to "CL:Combat/Weapons - Melee Combat", *2 to "CL:Combat/Weapons - Ranged Combat" when "calculating range penalties"), initmods(Mitigator: Glasses, -60%, group(_General), page(B112), mitigator(yes), shortname(Glasses), mitigator(yes)) ),_
#newitem(DI:Bad Sight (Farsighted), -25, displaycost(-10), page(B123), cat(Mundane Physical, Mundane, Physical), taboo(DI:Blindness, DI:Bad Sight (Nearsighted), AD:Acute Vision), mods(Bad Sight), conditional( -6 to ST:Vision when "item is within 1 yard", -3 to ST:DX when "performing close manual tasks", -3 to "CL:Combat/Weapons - Melee Combat" when "in Close Combat"), initmods(Mitigator: Glasses, -60%, group(_General), page(B112), mitigator(yes), shortname(Glasses), mitigator(yes)) ),_
DI:Chummy,_
DI:Gregarious,_
DI:Combat Paralysis,_
DI:Curious,_
DI:Easy to Read,_
DI:Flashbacks,_
DI:Guilt Complex,_
DI:Low Pain Threshold,_
DI:Oblivious,_
DI:Overweight,_
DI:Skinny,_
DI:Post-Combat Shakes,_
DI:Xenophilia

<Doc Last Select>
Hazardous Materials (Biological),_
Hazardous Materials (Chemical),_
Hazardous Materials (Radioactive),_
Beam Weapons (Pistol),_
Beam Weapons (Projector),_
Beam Weapons (Rifle),_
Brawling,_
Guns (Grenade Launcher),_
Guns (Gyroc),_
Guns (Light Anti-Armor Weapon),_
Guns (Light Machine Gun),_
Guns (Musket),_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun),_
Knife,_
Climbing,_
Cloak,_
NBC Suit,_
Shortsword,_
Staff,_
Stealth,_
Throwing,_
Wrestling,_
Acrobatics,_
Judo,_
Intimidation,_
Bicycling,_
Driving (Automobile),_
Driving (Construction Equipment),_
Driving (Halftrack),_
Driving (Heavy Wheeled),_
Driving (Hovercraft),_
Driving (Locomotive),_
Driving (Mecha),_
Driving (Motorcycle),_
Driving (Tracked),_
Riding,_
Cartography,_
Electronics Operation (Medical),_
Weather Sense,_
Anthropology,_
Brainwashing,_
Psychology,_
Chemistry,_
Expert Skill (Mutants),_
Hypnotism,_
Biology (Earthlike),_
Biology (Gas Giants),_
Biology (Hostile Terrestrial),_
Biology (Ice Dwarfs),_
Biology (Ice Worlds),_
Biology (Rock Worlds),_
Autohypnosis,_
Observation

// --------------------------------------------------------------------------------------
//  Hulk Lists
// --------------------------------------------------------------------------------------
<Hulk Bruiser>
text(Please choose a primary skill from the selection below.),_
		pointswanted(4),_
		itemswanted(1),_
		tagwith(Hulk(PrimarySkills, UnarmedSkills)),_
		list(_
			#buildlist(list(#list(Hulk Brute First)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select9(text(Please choose 1 from these primary skills.),_
		pointswanted(4),_
		itemswanted(1),_
		tagwith(Hulk(PrimarySkills, UnarmedSkills)),_
		list(_
			#buildlist(list(#list(Hulk Brute Second)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select10(text(Please choose 8 points from these primary skills.),_
		pointswanted(8),_
		itemswanted(atleast 1, upto 2),_
		tagwith(Hulk(PrimarySkills)),_
		list(_
			#BuildSelectList(Skills where Hulk includes "UnarmedSkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto 12pts, downto 8pts) ))_
		)_
),_
select11(text(Please choose 3 from these primary skills.),_
		pointswanted(3),_
		itemswanted(3),_
		tagwith(Hulk(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hulk Brute Third)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),_
select12(text(Please choose 5 from these background skills.),_
		pointswanted(5),_
		itemswanted(5),_
		tagwith(Hulk(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Brute First)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Brute Second)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Brute Fouth)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
), select13(
// )

<Hulk Heavy Gunner>
text(Please choose a primary skill from the selection below.),_
		pointswanted(8),_
		itemswanted(1),_
		tagwith(Hulk(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hulk Heavy Gunner First)), template(SK:%ListItem% #codes(upto 8pts, downto 8pts)))_
		)_
),_
select9(text(Please choose 2 from these primary skills.),_
		pointswanted(8),_
		itemswanted(2),_
		tagwith(Hulk(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hulk Heavy Gunner First)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Hulk Heavy Gunner Second)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select10(text(Please choose 3 from these primary skills.),_
		pointswanted(3),_
		itemswanted(3),_
		tagwith(Hulk(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hulk Heavy Gunner Third)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),_
select11(text(Please choose 5 from these background skills.),_
		pointswanted(5),_
		itemswanted(5),_
		tagwith(Hulk(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Heavy Gunner First)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Heavy Gunner Second)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Heavy Gunner Third)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
), select12(
// )

<Hulk Melee Generalist>
text(Please choose 4 primary skills from the selection below.),_
		pointswanted(16),_
		itemswanted(4),_
		tagwith(Hulk(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hulk Melee Generalist First)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select9(text(Please choose 3 from these primary skills.),_
		pointswanted(3),_
		itemswanted(3),_
		tagwith(Hulk(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hulk Melee Generalist Second)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),_
select10(text(Please choose 5 from these background skills.),_
		pointswanted(5),_
		itemswanted(5),_
		tagwith(Hulk(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Melee Generalist First)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Melee Generalist Second)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),select11(
// )

<Hulk Melee Specialist>
text(Please choose a primary skill from the selection below.),_
		pointswanted(12),_
		itemswanted(1),_
		tagwith(Hulk(PrimarySkills, UnarmedSkills)),_
		list(_
			#buildlist(list(#list(Hulk Melee Specialist First)), template(SK:%ListItem% #codes(upto 12pts, downto 12pts)))_
		)_
),_
select9(text(Please choose a primary skill from the selection below.),_
		pointswanted(4),_
		itemswanted(1),_
		tagwith(Hulk(PrimarySkills)),_
		list(_
			#BuildSelectList(Skills where Hulk includes "UnarmedSkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto 16pts, downto 16pts) )),_
			#buildlist(list(#list(Hulk Melee Specialist First)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Hulk Melee Specialist Second)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select10(text(Please choose 3 from these primary skills.),_
		pointswanted(3),_
		itemswanted(3),_
		tagwith(Hulk(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hulk Melee Specialist Third)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),_
select11(text(Please choose 5 from these background skills.),_
		pointswanted(5),_
		itemswanted(5),_
		tagwith(Hulk(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Melee Specialist First)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Melee Specialist Second)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Melee Specialist Third)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hulk Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),select12(
// )

<Hulk First Advantage List>
AD:Combat Reflexes #codes(upto 1, downto 1),_
AD:Damage Resistance #codes(upto 2, downto 1),_
AD:Extra Hit Points #codes(upto 4, downto 1),_
AD:Extra HT #codes(upto 1, downto 1),_
AD:Extra RP #codes(upto 14, downto 1),_
AD:High Pain Threshold,_
PE:Penetrating Voice,_
AD:Recovery

<Hulk First Disadvantage List>
DI:Bad Temper,_
DI:Berserk,_
DI:Bloodlust,_
DI:Bully,_
DI:Callous,_
DI:Charitable,_
DI:Code of Honor (Pirate's),_
#newitem(DI:Compulsive Brawling, -10, mods(Self-Control), page(B128), cat(Mundane, Mental), initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121))),_
DI:Impulsiveness,_
#newitem(DI:Intolerance (Weaklings ST 10 or less), -5, page(B140), cat(Mundane, Mental)),_
DI:On the Edge,_
DI:Overconfidence,_
DI:Pacifism (Cannot Harm Innocents),_
DI:Pacifism (Self-Defense Only),_
#newitem(DI:Sense of Duty (Friends), -5, page(B153), cat(Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
DI:Stubbornness

<Hulk Last Select>
Battlesuit,_
Driving (Automobile),_
Driving (Construction Equipment),_
Driving (Halftrack),_
Driving (Heavy Wheeled),_
Driving (Hovercraft),_
Driving (Locomotive),_
Driving (Mecha),_
Driving (Motorcycle),_
Driving (Tracked),_
Riding,_
Camouflage,_
Current Affairs (Regional),_
Gesture,_
Acting,_
Artillery (Beams),_
Artillery (Bombs),_
Artillery (Cannon),_
Artillery (Catapult),_
Artillery (Guided Missile),_
Artillery (Torpedoes),_
Fast-Talk,_
Gambling,_
Skating,_
Skiing,_
Observation

<Hulk Brute First>
Boxing,_
Brawling,_
Karate

<Hulk Brute Second>
Sumo Wrestling,_
Wrestling,_
Judo

<Hulk Brute Third>
Beam Weapons (Pistol),_
Beam Weapons (Projector),_
Beam Weapons (Rifle),_
Crossbow,_
Fast-Draw (Arrow),_
Fast-Draw (Ammo),_
Fast-Draw (Long Arm),_
Fast-Draw (Pistol),_
Guns (Grenade Launcher),_
Guns (Gyroc),_
Guns (Light Anti-Armor Weapon),_
Guns (Light Machine Gun),_
Guns (Musket),_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun),_
Knife,_
Liquid Projector (Flamethrower),_
Liquid Projector (Sprayer),_
Liquid Projector (Squirt Gun),_
Liquid Projector (Water Cannon),_
Shield,_
Thrown Weapon (Axe/Mace),_
Thrown Weapon (Dart),_
Thrown Weapon (Harpoon),_
Thrown Weapon (Knife),_
Thrown Weapon (Shuriken),_
Thrown Weapon (Spear),_
Thrown Weapon (Stick),_
Axe/Mace,_
Bow,_
Broadsword,_
Lasso,_
Shortsword,_
Spear,_
Spear Thrower,_
Staff,_
Throwing,_
Two-Handed Axe/Mace,_
Two-Handed Sword

<Hulk Heavy Gunner First>
Gunner (Beams),_
Gunner (Machine Gun),_
Gunner (Rockets),_
Guns (Grenade Launcher),_
Guns (Gyroc),_
Guns (Light Anti-Armor Weapon),_
Guns (Light Machine Gun),_
Liquid Projector (Flamethrower),_
Liquid Projector (Water Cannon)

<Hulk Heavy Gunner Second>
Guns (Musket),_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun)

<Hulk Heavy Gunner Third>
Brawling,_
Fast-Draw (Arrow),_
Fast-Draw (Ammo),_
Fast-Draw (Long Arm),_
Fast-Draw (Pistol),_
Knife,_
Thrown Weapon (Axe/Mace),_
Thrown Weapon (Dart),_
Thrown Weapon (Harpoon),_
Thrown Weapon (Knife),_
Thrown Weapon (Shuriken),_
Thrown Weapon (Spear),_
Thrown Weapon (Stick),_
Axe/Mace,_
Broadsword,_
Shortsword,_
Spear,_
Spear Thrower,_
Staff,_
Throwing,_
Two-Handed Axe/Mace,_
Two-Handed Sword

<Hulk Melee Generalist First>
Crossbow,_
Shield,_
Thrown Weapon (Axe/Mace),_
Thrown Weapon (Dart),_
Thrown Weapon (Harpoon),_
Thrown Weapon (Knife),_
Thrown Weapon (Shuriken),_
Thrown Weapon (Spear),_
Thrown Weapon (Stick),_
Axe/Mace,_
Bolas,_
Bow,_
Broadsword,_
Lasso,_
Polearm,_
Shortsword,_
Spear,_
Spear Thrower,_
Staff,_
Throwing,_
Two-Handed Axe/Mace,_
Two-Handed Sword,_
Whip,_
Flail,_
Kusari,_
Net,_
Two-Handed Flail

<Hulk Melee Generalist Second>
Beam Weapons (Pistol),_
Beam Weapons (Projector),_
Beam Weapons (Rifle),_
Brawling,_
Fast-Draw (Arrow),_
Fast-Draw (Ammo),_
Fast-Draw (Long Arm),_
Fast-Draw (Pistol),_
Guns (Grenade Launcher),_
Guns (Gyroc),_
Guns (Light Anti-Armor Weapon),_
Guns (Light Machine Gun),_
Guns (Musket),_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun),_
Liquid Projector (Flamethrower),_
Liquid Projector (Sprayer),_
Liquid Projector (Squirt Gun),_
Liquid Projector (Water Cannon),_
Boxing,_
Sumo Wrestling,_
Wrestling

<Hulk Melee Specialist First>
Axe/Mace,_
Knife,_
Broadsword,_
Polearm,_
Shortsword,_
Spear,_
Staff,_
Two-Handed Axe/Mace,_
Two-Handed Sword,_
Flail,_
Kusari,_
Two-Handed Flail

<Hulk Melee Specialist Second>
Crossbow,_
Shield,_
Thrown Weapon (Axe/Mace),_
Thrown Weapon (Dart),_
Thrown Weapon (Harpoon),_
Thrown Weapon (Knife),_
Thrown Weapon (Shuriken),_
Thrown Weapon (Spear),_
Thrown Weapon (Stick),_
Bolas,_
Bow,_
Lasso,_
Spear Thrower,_
Throwing,_
Whip,_
Net

<Hulk Melee Specialist Third>
Beam Weapons (Pistol),_
Beam Weapons (Projector),_
Beam Weapons (Rifle),_
Brawling,_
Fast-Draw (Arrow),_
Fast-Draw (Ammo),_
Fast-Draw (Long Arm),_
Fast-Draw (Pistol),_
Guns (Grenade Launcher),_
Guns (Gyroc),_
Guns (Light Anti-Armor Weapon),_
Guns (Light Machine Gun),_
Guns (Musket),_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun),_
Liquid Projector (Flamethrower),_
Liquid Projector (Sprayer),_
Liquid Projector (Squirt Gun),_
Liquid Projector (Water Cannon),_
Boxing,_
Sumo Wrestling,_
Wrestling

// --------------------------------------------------------------------------------------
//  Hunter Lists
// --------------------------------------------------------------------------------------
<Hunter Scout>
text(Please choose 5 from these background skills.),_
		pointswanted(5),_
		itemswanted(5),_
		tagwith(Hunter(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter First Skill)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
), select11(
// )

<Hunter Sniper>
text(Please choose 1 upgrade from the weapon skill already chosen.),_
		pointswanted(4),_
		itemswanted(1),_
		tagwith(Hunter(PrimarySkills)),_
		list(_
			#BuildSelectList(Skills where Hunter includes "FirstPrimarySkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto 12pts, downto 12pts) ))_
		)_
),_
select11(text(Please choose 5 from these background skills.),_
		pointswanted(5),_
		itemswanted(5),_
		tagwith(Hunter(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter First Skill)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),select12(
// )

<Hunter Sojourner>
text(Please choose 1 from these primary skills.),_
		pointswanted(2),_
		itemswanted(1),_
		tagwith(Hunter(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hunter Sojourner First)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select11(text(Please choose 1 additional survival skills.),_
		pointswanted(2),_
		itemswanted(1),_
		tagwith(Hunter(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hunter Survival List)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select12(text(Please choose 5 from these background skills.),_
		pointswanted(5),_
		itemswanted(5),_
		tagwith(Hunter(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter Sojourner First)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter First Skill)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),select13(
// )

<Hunter Survivor>
text(Please choose 1 from these primary skills.),_
		pointswanted(4),_
		itemswanted(1),_
		tagwith(Hunter(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hunter Survivor First)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select11(text(Please choose 2 additional survival skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Hunter(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hunter Survival List)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select12(text(Please choose 5 from these background skills.),_
		pointswanted(5),_
		itemswanted(5),_
		tagwith(Hunter(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter Survivor First)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter Survival List)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter First Skill)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Hunter Last Select)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
), select13(
// )

<Hunter First Advantage List>
AD:Extra IQ #codes(upto 1, downto 1),_
AD:Extra DX #codes(upto 1, downto 1),_
AD:Extra Perception #codes(upto 2, down to 1),_
AD:Fit #codes(upto 2, down to 1),_
AD:Outdoorsman #codes(upto 2, down to 1)

<Hunter First Disadvantage List>
DI:Bloodlust,_
DI:Callous,_
DI:Charitable,_
DI:Code of Honor(Pirate's),_
DI:Code of Honor(Soldier's),_
DI:Cowardice,_
DI:Overconfidence,_
DI:Loner,_
DI:Lunacy,_
DI:Pacifism (Cannot Harm Innocents),_
DI:Sense of Duty,_
DI:Stubbornness

<Hunter First Skill>
Beam Weapons (Rifle),_
Bow,_
Crossbow,_
Guns (Rifle)

<Hunter Second Skill>
Beam Weapons (Pistol),_
Beam Weapons (Projector),_
Beam Weapons (Rifle),_
Brawling,_
Guns (Grenade Launcher),_
Guns (Gyroc),_
Guns (Light Anti-Armor Weapon),_
Guns (Light Machine Gun),_
Guns (Musket),_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun),_
Knife,_
Thrown Weapon (Axe/Mace),_
Thrown Weapon (Dart),_
Thrown Weapon (Harpoon),_
Thrown Weapon (Knife),_
Thrown Weapon (Shuriken),_
Thrown Weapon (Spear),_
Thrown Weapon (Stick),_
Axe/Mace,_
Bolas,_
Boxing,_
Broadsword,_
Lasso,_
Shortsword,_
Spear,_
Spear Thrower,_
Staff,_
Throwing,_
Wrestling,_
Blowpipe,_
Net

<Hunter Survival List>
Survival (Arctic),_
Survival (Desert),_
Survival (Island/Beach),_
Survival (Jungle),_
Survival (Mountain),_
Survival (Plains),_
Survival (Radioactive Wasteland),_
Survival (Swampland),_
Survival (Woodlands),_
Survival

<Hunter Last Select>
Fast-Draw (Arrow),_
Fast-Draw (Ammo),_
Fast-Draw (Long Arm),_
Fast-Draw (Pistol),_
Forced Entry,_
Jumping,_
Knot-Tying,_
First Aid,_
Seamanship,_
Carousing,_
Swimming,_
Running

<Hunter Sojourner First>
Hiking,_
Skating,_
Skiing

<Hunter Survivor First>
Tracking,_
Traps

// --------------------------------------------------------------------------------------
//  Nomad Lists
// --------------------------------------------------------------------------------------
<Nomad Rider>
text(Please choose 1 from these primary skills.),_
		pointswanted(8),_
		itemswanted(1),_
		tagwith(Nomad(PrimarySkills)),_
		list(_
			SK:Riding #codes(upto 8pts, downto 8pts),_
			SK:Teamster #codes(upto 8pts, downto 8pts)_
		)_
),_
select6(text(Please choose 3 additional primary skills.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Nomad(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Riding #codes(upto 2pts, downto 2pts),_
			SK:Animal Handling #codes(upto 2pts, downto 2pts),_
			SK:Animal Handling (Equines) #codes(upto 2pts, downto 2pts),_
			SK:Packing #codes(upto 2pts, downto 2pts),_
			SK:Teamster #codes(upto 2pts, downto 2pts)_
		)_
),_
select7(text(Please choose 1 additional primary skill.),_
		pointswanted(4),_
		itemswanted(1),_
		tagwith(Nomad(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#newitem(SK:Disguise (Animals), IQ/A, tl(0-12), default(IQ - 5, SK:Makeup - 3), page(B187), cat(_General, Criminal/Street, Spy)) #codes(upto 4pts, downto 4pts),_
			SK:Weather Sense #codes(upto 4pts, downto 4pts),_
			SK:Mimicry (Animal Sounds) #codes(upto 4pts, downto 4pts),_
			SK:Naturalist #codes(upto 4pts, downto 4pts)_
		)_
),y(
// )

<Nomad Driver>
text(Please choose 3 from these primary skills.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Nomad(PrimarySkills, DrivingSkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Boating (Large Powerboat) #codes(upto 2pts, downto 2pts),_
			SK:Boating (Motorboat) #codes(upto 2pts, downto 2pts),_
			SK:Boating (Sailboat) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Automobile) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Halftrack) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Heavy Wheeled) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Motorcycle) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Tracked) #codes(upto 2pts, downto 2pts),_
			SK:Piloting (Autogyro) #codes(upto 2pts, downto 2pts),_
			SK:Piloting (Glider) #codes(upto 2pts, downto 2pts),_
			SK:Piloting (Helicopter) #codes(upto 2pts, downto 2pts),_
			SK:Piloting (Light Airplane) #codes(upto 2pts, downto 2pts),_
			SK:Piloting (Lighter-Than-Air) #codes(upto 2pts, downto 2pts),_
			SK:Piloting (Ultralight) #codes(upto 2pts, downto 2pts)_
		)_
),_
select6(text(Please upgrade 1 of the prior chosen primary skills.),_
		pointswanted(6),_
		itemswanted(1),_
		tagwith(Nomad(PrimarySkills)),_
		list(_
			#BuildSelectList(Skills where Nomad includes "DrivingSkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto 8pts, downto 8pts) ))_
		)_
),_
select7(text(Please choose 4 additional primary skills.),_
		pointswanted(16),_
		itemswanted(4),_
		tagwith(Nomad(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			SK:Artillery (Bombs) #codes(upto 4pts, downto 4pts),_
			SK:Artillery (Catapult) #codes(upto 4pts, downto 4pts),_
			SK:Electronics Repair (Communications) #codes(upto 4pts, downto 4pts),_
			SK:Electronics Repair (Sensors) #codes(upto 4pts, downto 4pts),_
			SK:Freight Handling #codes(upto 4pts, downto 4pts),_
			SK:Mechanic ([Type]) #codes(upto 4pts, downto 4pts),_
			#newitem(SK:Professional Skill (Forester), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge)) #codes(upto 4pts, downto 4pts),_
			SK:Shadowing #codes(upto 4pts, downto 4pts),_
			SK:Shiphandling (Airship) #codes(upto 4pts, downto 4pts),_
			SK:Shiphandling (Ship) #codes(upto 4pts, downto 4pts)_
		)_
),y(
// )

<Nomad First Disadvantage List>
DI:Bad Temper,_
DI:Code of Honor(Pirate's),_
#newitem(DI:Delusion (I'm always safer on my ride than off it!), -10, page(B130), cat(Mundane, Mental)),_
DI:Duty,_
DI:Impulsiveness,_
#newitem(_
	DI:Obsession (Obtain a particular reasonably priced ride),_
	-5,_
	mods(Self-Control),_
	page(B146),_
	cat(Mundane, Mental),_
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121))_
),_
#newitem(_
	DI:Obsession (Obtain a particular prohibitively expensive ride),_
	-10,_
	mods(Self-Control),_
	page(B146),_
	cat(Mundane, Mental),_
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121))_
),_
DI:Odious Personal Habit,_
DI:On the Edge,_
DI:Overconfidence,_
DI:Paranoia,_
DI:Sense of Duty,_
DI:Stubbornness

<Nomad Skills>
Beam Weapons (Pistol),_
Beam Weapons (Projector),_
Beam Weapons (Rifle),_
Crossbow,_
Gunner (Beams),_
Gunner (Cannon),_
Gunner (Catapult),_
Gunner (Machine Gun),_
Gunner (Rockets),_
Guns (Grenade Launcher),_
Guns (Gyroc),_
Guns (Light Anti-Armor Weapon),_
Guns (Light Machine Gun),_
Guns (Musket),_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun),_
Dropping,_
Throwing

// --------------------------------------------------------------------------------------
//  Scavenger Lists
// --------------------------------------------------------------------------------------
<Scavenger Ghost>
text(Please choose 3 from these primary skills.),_
		pointswanted(12),_
		itemswanted(3),_
		tagwith(Scavenger(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Scavenger Ghost Primary)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select9(_
		text(Please choose 4 from these background skills.),_
		pointswanted(4),_
		itemswanted(4),_
		tagwith(Scavenger(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Scavenger Ghost Primary)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Scavenger Background)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
), select10(
// )

<Scavenger Looter>
text(Please choose 4 from these background skills.),_
		pointswanted(4),_
		itemswanted(4),_
		tagwith(Scavenger(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Scavenger Background)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),select9(
// )

<Scavenger Thief>
text(Please choose 2 from these primary skills.),_
		pointswanted(8),_
		itemswanted(2),_
		tagwith(Scavenger(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#newitem(SK:_Increase Stealth, existing(SK:Stealth)) #codes(upto 8pts, downto 8pts),_
			#buildlist(list(#list(Scavenger Thief Primary)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select9(_
		text(Please choose 4 from these background skills.),_
		pointswanted(4),_
		itemswanted(4),_
		tagwith(Scavenger(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Scavenger Thief Primary)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Scavenger Background)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),select10(
// )

<Scavenger Urban Explorer>
text(Please choose 4 from these background skills.),_
		pointswanted(4),_
		itemswanted(4),_
		tagwith(Scavenger(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Scavenger Background)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),select9(
// )

<Scavenger First Disadvantages>
DI:Callous,_
DI:Cowardice,_
DI:Overconfidence,_
DI:Curious,_
DI:Fearfulness,_
DI:Greed,_
DI:Jealousy,_
DI:Kleptomania,_
DI:Loner,_
DI:Oblivious,_
DI:Shyness,_
DI:Stubbornness

<Scavenger Second Disadvantages>
DI:Extra Sleep #codes(upto 4, downto 1),_
DI:Laziness,_
DI:Light Sleeper,_
DI:Low Pain Threshold,_
DI:Paranoia,_
DI:Post-Combat Shakes,_
DI:Skinny,_
DI:Sense of Duty,_
DI:Trickster

<Scavenger Background>
Bicycling,_
Driving (Automobile),_
Driving (Construction Equipment),_
Driving (Halftrack),_
Driving (Heavy Wheeled),_
Driving (Hovercraft),_
Driving (Locomotive),_
Driving (Mecha),_
Driving (Motorcycle),_
Driving (Tracked),_
NBC Suit,_
Riding,_
Camouflage,_
First Aid,_
Gesture,_
Armoury (Battlesuits),_
Armoury (Body Armor),_
Armoury (Force Shields),_
Armoury (Heavy Weapons),_
Armoury (Melee Weapons),_
Armoury (Missile Weapons),_
Armoury (Small Arms),_
Armoury (Vehicular Armor),_
Cooking,_
Disguise,_
Electronics Repair (Communications),_
Electronics Repair (Computers),_
Electronics Repair (Electronic Warfare),_
Electronics Repair (Force Shields),_
Electronics Repair (Matter Transmitters),_
Electronics Repair (Media),_
Electronics Repair (Medical),_
Electronics Repair (Parachronic),_
Electronics Repair (Psychotronics),_
Electronics Repair (Scientific),_
Electronics Repair (Security),_
Electronics Repair (Sensors),_
Electronics Repair (Sonar),_
Electronics Repair (Surveillance),_
Electronics Repair (Temporal),_
Explosives (Demolition),_
Explosives (Explosive Ordnance Disposal),_
Fast-Talk,_
Gambling,_
Hazardous Materials (Biological),_
Hazardous Materials (Chemical),_
Hazardous Materials (Radioactive),_
Smuggling,_
Body Language,_
Lip Reading,_
Observation

<Scavenger Ghost Primary>
Beam Weapons (Pistol),_
Fast-Draw (Arrow),_
Fast-Draw (Ammo),_
Fast-Draw (Long Arm),_
Fast-Draw (Pistol),_
Garrote,_
Guns (Pistol),_
Knife,_
Acting,_
Disguise,_
Poisons

<Scavenger Thief Primary>
Brawling,_
Climbing,_
Escape,_
Sleight of Hand,_
Acting,_
Holdout

// --------------------------------------------------------------------------------------
//  Tech Lists
// --------------------------------------------------------------------------------------
<Tech Standard>
text(Please choose 25 points from these advantages.),_
		pointswanted(25),_
		itemswanted(atleast 1),_
		tagwith(Tech(Advantages)),_
		list(_
			#list(GMAdvantages),_
			#list(Tech First Advantages)_
		)_
),_
select3(_
		text(Please choose 30 points from these advantages.),_
		pointswanted(30),_
		itemswanted(atleast 1),_
		tagwith(Tech(Advantages)),_
		list(_
			#BuildSelectList(Advantages where Tech includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
			#list(GMAdvantages),_
			#list(Tech First Advantages),_
			#list(Tech Second Advantages)_
		)_
),y(
// )

<Tech Quick Gadgeteer>
text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),_
select3(_
		text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),y(
// )

<Tech Inventor>
text(Please choose 1 from these primary skills.),_
		pointswanted(8),_
		itemswanted(1),_
		tagwith(Tech(PrimarySkills, FirstPrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 8pts, downto 8pts))),_
			#buildlist(list(#list(Tech Inventer Primary)), template(SK:%ListItem% #codes(upto 8pts, downto 8pts)))_
		)_
),_
select8(_
		text(Please choose 3 from these primary skills.),_
		pointswanted(12),_
		itemswanted(3),_
		tagwith(Tech(PrimarySkills)),_
		list(_
			#buildselectlist(_
				Skills where Tech includes "FirstPrimarySkills",_
				template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto 12pts, downto 12pts))_
			),_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Tech Inventer Primary)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),y(
// )

<Tech Repairman>
text(Please choose 5 from these primary skills.),_
		pointswanted(20),_
		itemswanted(5),_
		tagwith(Tech(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Tech Repairman Primary Choice)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select8(_
		text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),y(
// )

<Tech Scientist>
text(Please choose 5 from these primary skills.),_
		pointswanted(20),_
		itemswanted(5),_
		tagwith(Tech(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Tech Scientist Primary Choice)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select8(_
		text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),y(
// )

<Tech Technophile>
text(Please choose 5 from these primary skills.),_
		pointswanted(20),_
		itemswanted(5),_
		tagwith(Tech(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Tech Technophile First Primary Choice)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
),_
select8(_
		text(Please choose 1 from these primary skills.),_
		pointswanted(2),_
		itemswanted(1),_
		tagwith(Tech(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#newitem(SK:_Increase Scrounging, existing(SK:Scrounging)) #codes(upto 4pts, downto 4pts),_
			#buildlist(list(#list(Tech Technophile Second Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),y(
// )

<Tech Inventer Primary>
Engineer ([Type]),_
Computer Programming

<Tech Repairman Primary Given>
Electrician,_
Machinist

<Tech Repairman Primary Choice>
Armoury (Battlesuits),_
Armoury (Body Armor),_
Armoury (Heavy Weapons),_
Armoury (Melee Weapons),_
Armoury (Missile Weapons),_
Armoury (Small Arms),_
Armoury (Vehicular Armor),_
Electronics Repair (Communications),_
Electronics Repair (Media),_
Electronics Repair (Medical),_
Electronics Repair (Scientific),_
Electronics Repair (Security),_
Electronics Repair (Sensors),_
Electronics Repair (Surveillance),_
Mechanic ([Type]),_
Computer Programming,_
Expert Skill (Robotics)

<Tech Scientist Primary Given>
Research

<Tech Scientist Primary Choice>
Hazardous Materials (Biological),_
Hazardous Materials (Chemical),_
Hazardous Materials (Radioactive),_
Weather Sense,_
Chemistry,_
Expert Skill (Mutants),_
Naturalist,_
Pharmacy (Synthetic),_
Biology,_
Physics

<Tech Technophile First Primary Choice>
Beam Weapons (Pistol),_
Beam Weapons (Rifle),_
Guns (Grenade Launcher),_
Guns (Gyroc),_
Guns (Light Anti-Armor Weapon),_
Guns (Light Machine Gun),_
Guns (Musket),_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun),_
Battlesuit,_
Driving (Automobile),_
Driving (Motorcycle),_
Driving (Tracked),_
NBC Suit,_
Electronics Operation (Communications),_
Electronics Operation (Media),_
Electronics Operation (Medical),_
Electronics Operation (Scientific),_
Electronics Operation (Security),_
Electronics Operation (Sensors),_
Electronics Operation (Surveillance),_
Explosives (Demolition),_
Explosives (Explosive Ordnance Disposal),_
Holdout,_
Photography,_
Computer Programming

<Tech Technophile Second Primary Choice>
Airshipman,_
Seamanship,_
Artillery (Beams),_
Artillery (Bombs),_
Artillery (Cannon),_
Artillery (Catapult),_
Artillery (Guided Missile),_
Artillery (Torpedoes),_
Traps

<Tech First Secondary>
Beam Weapons (Pistol),_
Beam Weapons (Rifle),_
Brawling,_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun),_
Boxing,_
Broadsword,_
Shortsword,_
Staff,_
Throwing,_
Wrestling,_
Acrobatics,_
Judo

<Tech Second Secondary>
First Aid,_
Architecture,_
Cartography,_
Merchant,_
Anthropology,_
Brainwashing,_
Intelligence Analysis,_
Poisons,_
Psychology

<Tech Third Secondary>
Area Knowledge ([Area]),_
Survival (Arctic),_
Survival (Desert),_
Survival (Island/Beach),_
Survival (Jungle),_
Survival (Mountain),_
Survival (Plains),_
Survival (Radioactive Wasteland),_
Survival (Swampland),_
Survival (Woodlands),_
Survival

<Tech Background>
Climbing,_
Stealth,_
Acting,_
Cooking,_
Freight Handling,_
Lockpicking,_
Navigation (Land),_
Navigation (Sea),_
Packing,_
Swimming,_
Observation,_
Search,_
Urban Survival

<Tech First Disadvantages>
DI:Reduced Will #codes(upto 3, downto 1),_
DI:Reduced Perception #codes(upto 3, downto 1),_
DI:Absent-Mindedness,_
DI:Appearance,_
#newitem(DI:Bad Sight (Nearsighted), -25, displaycost(-10), page(B123), cat(Mundane Physical, Mundane, Physical), taboo(DI:Blindness, DI:Bad Sight (Farsighted), AD:Acute Vision), mods(Bad Sight), conditional( -6 to ST:Vision when "item is more than 1 yard away", -2 to "CL:Combat/Weapons - Melee Combat", *2 to "CL:Combat/Weapons - Ranged Combat" when "calculating range penalties"), initmods(Mitigator: Glasses, -60%, group(_General), page(B112), mitigator(yes), shortname(Glasses), mitigator(yes)) ),_
#newitem(DI:Bad Sight (Farsighted), -25, displaycost(-10), page(B123), cat(Mundane Physical, Mundane, Physical), taboo(DI:Blindness, DI:Bad Sight (Nearsighted), AD:Acute Vision), mods(Bad Sight), conditional( -6 to ST:Vision when "item is within 1 yard", -3 to ST:DX when "performing close manual tasks", -3 to "CL:Combat/Weapons - Melee Combat" when "in Close Combat"), initmods(Mitigator: Glasses, -60%, group(_General), page(B112), mitigator(yes), shortname(Glasses), mitigator(yes)) ),_
DI:Clueless,_
#newitem(DI:Compulsive Gadgeteering, -5, mods(Self-Control), page(B128), cat(Mundane, Mental), initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121))),_
DI:Curious,_
#newitem(DI:Delusion (Technology is always safe and fixes all problems!), -10, page(B130), cat(Mundane, Mental)),_
DI:Impulsiveness,_
DI:Oblivious,_
DI:Stubbornness

<Tech Second Disadvantages>
DI:Reduced Basic Speed #codes(upto 1, downto 1),_
DI:Reduced ST #codes(upto 1, downto 1),_
DI:Charitable,_
DI:Chummy,_
DI:Gregarious,_
DI:Loner,_
DI:Easy to Read,_
DI:Gullibility,_
DI:Low Self-Image,_
DI:Short Attention Span,_
DI:Truthfulness

<Tech Third Disadvantages>
DI:Greed,_
#newitem(DI:Intolerance (Luddites), -5, page(B140), cat(Mundane, Mental)),_
DI:Jealousy,_
DI:Klutz,_
DI:Lecherousness,_
DI:No Sense of Humor,_
DI:Overweight,_
DI:Skinny,_
DI:Post-Combat Shakes,_
DI:Shyness,_
DI:Trickster

<Tech First Advantages>
AD:Extra DX #codes(upto 1, downto 1),_
AD:Extra IQ #codes(upto 1, downto 1),_
AD:Artificer #codes(upto 3, downto 1),_
AD:Eidetic Memory #codes(upto 2, downto 1),_
AD:Gadgeteer #codes(upto 1, downto 1),_
#newitem(_
	AD:Gadgeteer ([Specialized]),_
	25,_
	displaycost(13),_
	page(B56),_
	initmods(_
		Specialized,_
		-50%,_
		group(_General),_
		page(ATE1:20),_
		shortname(Specialized)_
	)_
	cat(Mundane, Mental),_
	taboo(AD:Quick Gadgeteer),_
	x(#InputToTag("Please select an appropriate specialized skill:", "[Specialized]", , "Gadgeteer Specialization"))_
),_
#newitem(_
	AD:Quick Gadgeteer ([Specialized]),_
	50,_
	displaycost(25),_
	page(B56),_
	initmods(_
		Specialized,_
		-50%,_
		group(_General),_
		page(ATE1:20),_
		shortname(Specialized)_
	)_
	cat(Mundane, Mental),_
	taboo(AD:Gadgeteer),_
	x(#InputToTag("Please select an appropriate specialized skill:", "[Specialized]", , "Gadgeteer Specialization"))_
),_
#newitem(AD:Gizmos, 5/10, page(B57), upto(3), cat(mundane, Mental)),_
#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
AD:Single-Minded,_
AD:Versatile,_
AD:Trading Character Points for Money

<Tech Second Advantages>
AD:Extra ST #codes(upto 1, downto 1),_
AD:Extra HT #codes(upto 2, downto 1),_
AD:Extra RP #codes(upto 11, downto 1),_
AD:Extra Basic Speed #codes(upto 3, downto 1),_
AD:Absolute Timing #codes(upto 1, downto 1),_
AD:Flexibility,_
PE:Hand Cannon #codes(upto 2, downto 1),_
AD:High Manual Dexterity #codes(upto 4, downto 1),_
PE:Improvised Weapons,_
AD:Intuition,_
AD:Lightning Calculator #codes(upto 2, downto 1),_
AD:Luck #codes(upto 1, downto 1),_
AD:Pitiable,_
#newitem(AD:Resistant to Disease (+3 to resist), 3, page(B81), cat(Mundane, Physical)),_
AD:Serendipity #codes(upto 1, downto 1)

// --------------------------------------------------------------------------------------
//  Trader Lists
// --------------------------------------------------------------------------------------
<Trader Guide>
text(Please choose 2 from these primary skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader First Primary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select9(_
		text(Please choose 3 from these primary skills.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader Guide Second Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),y(
// )

<Trader Merchant>
text(Please choose 3 from these primary skills.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader Merchant Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select9(_
		text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),y(
// )

<Trader Orator>
text(Please choose 2 from these primary skills.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader Orator Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select9(_
		text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),y(
// )

<Trader Sweet-Talker>
text(Please choose 5 from these primary skills.),_
		pointswanted(10),_
		itemswanted(5),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader Sweet-Talker Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select9(_
		text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),y(
// )

<Trader First Advantages>
AD:Appearance #codes(upto 2, downto 1),_
AD:Business Acumen #codes(upto 2, downto 1),_
AD:Charisma #codes(upto 3, downto 1),_
AD:Contact Group #codes(upto 3, downto 1),_
#newitem(_
	AD:Contact ([Somewhat Reliable]),_
	1/2/3,_
	displaycost(1/2/3),_
	levelnames(_
		Effective Skill 12,_
		Effective Skill 15,_
		Effective Skill 18_
	),_
	x(#InputToTag("Please describe the nature of the Contact:", "[Somewhat Reliable]", , "Contact")),_
	upto(3),_
	cat(Mundane, Social),_
	mods(Contact, Frequency of Appearance, Reliability, Favor),_
	page(B44),_
	initmods(_
		Reliability: Somewhat Reliable,_
		*1,_
		shortname(Somewhat Reliable),_
		group(Reliability)_
	| _
		Frequency: roll of  9 or less (Fairly often),_
		*1,_
		shortname(9 or less),_
		group(Frequency of Appearance)_
	)_
),_
#newitem(_
	AD:Contact ([Usually Reliable]),_
	1/2/3,_
	displaycost(4/8/12),_
	levelnames(_
		Effective Skill 12,_
		Effective Skill 15,_
		Effective Skill 18_
	),_
	x(#InputToTag("Please describe the nature of the Contact:", "[Usually Reliable]", , "Contact")),_
	upto(3),_
	cat(Mundane, Social),_
	mods(Contact, Frequency of Appearance, Reliability, Favor),_
	page(B44),_
	initmods(_
		Reliability: Usually Reliable,_
		*2,_
		shortname(Usually Reliable),_
		group(Reliability)_
	| _
		Frequency: roll of  12 or less (Quite often),_
		*2,_
		shortname(12 or less),_
		group(Frequency of Appearance)_
	)_
),_
#newitem(_
	AD:Favor (Contact),_
	1/2/3/4,_
	displaycost(1/2/3/4),_
	levelnames(_
		Effective Skill 12,_
		Effective Skill 15,_
		Effective Skill 18,_
		Effective Skill 21_
	),_
	upto(4),_
	cat(Mundane, Social),_
	mods(Contact, Frequency of Appearance, Reliability, Favor),_
	page(B44),_
	initmods(_
		Reliability: Usually Reliable,_
		*2,_
		shortname(Usually Reliable),_
		group(Reliability)_
	| _
		Frequency: roll of  12 or less (Fairly often),_
		*2,_
		shortname(12 or less),_
		group(Frequency of Appearance) | Favor,_
		*1/5,_
		group(Patron)_
	)_
),_
#newitem(_
	AD:Favor (Patron),_
	10/15/20/25/30,_
	displaycost(2/3/4/5/6),_
	mods(Frequency of Appearance, Patron, Favor),_
	page(B72),_
	upto(5),_
	cat(Mundane, Social),_
	initmods(_
		Frequency: roll of  9 or less (Fairly often),_
		*1,_
		shortname(9 or less),_
		group(Frequency of Appearance)_
	| _
		Favor,_
		*1/5,_
		group(Patron)_
	)_
),_
PE:Honest Face,_
#newitem(_
	AD:Reputation (Trustworthy),_
	5/10,_
	displaycost(2/5),_
	mods(Reputation Advantage),_
	page(B27),_
	upto(2),_
	cat(Mundane, Social, Influence),_
	initmods(_
		People Affected: Almost everyone in your game world,_
		*1,_
		shortname(Almost everyone),_
		group(Reputation) _
	| _
		Frequency of Recognition: Sometimes,_
		*1/2,_
		round(down),_
		shortname(roll of  10 or less),_
		group(Reputation) _
	),_
	conditional(+1 to ST:Reaction, +1 to SK:Indimidation when "your reputation counts", -1 to SK:Intimidation when "your reputation works against you")_
),_
AD:Sensitive,_
AD:Empathy,_
AD:Smooth Operator #codes(upto 1, downto 1),_
AD:Voice

<Trader First Disadvantages>
DI:Chummy,_
DI:Gregarious,_
DI:Cowardice,_
DI:Gluttony,_
DI:Greed,_
DI:Kleptomania,_
DI:Laziness,_
DI:Pacifism (Cannot Harm Innocents),_
DI:Pacifism (Self-Defense Only),_
DI:Post-Combat Shakes,_
DI:Trickster

<Trader First Primary>
Area Knowledge ([Area]),_
Current Affairs ([Regional]),_
Navigation (Sea),_
Navigation (Land),_
Survival (Arctic),_
Survival (Desert),_
Survival (Island/Beach),_
Survival (Jungle),_
Survival (Mountain),_
Survival (Plains),_
Survival (Radioactive Wasteland),_
Survival (Swampland),_
Survival (Woodlands),_
Survival,_
Urban Survival

<Trader Second Primary>
Driving (Automobile),_
Driving (Heavy Wheeled),_
Driving (Motorcycle),_
Riding,_
Teamster,_
Hiking,_
Skating,_
Skiing

<Trader Guide Second Primary Choice>
First Aid,_
Cartography,_
Cooking,_
Hazardous Materials (Biological),_
Hazardous Materials (Chemical),_
Hazardous Materials (Radioactive),_
Soldier,_
Traps,_
Weather Sense,_
Expert Skill (Mutants),_
Expert Skill (Robotics),_
Naturalist,_
Observation

<Trader Merchant Primary Choice>
Fast-Talk,_
Freight Handling,_
Packing,_
Propaganda,_
Smuggling,_
Diplomacy,_
Psychology,_
Detect Lies

<Trader Orator Primary Choice>
Acting,_
Electronics Operation (Communications),_
Electronics Operation (Media),_
Fast-Talk,_
Leadership,_
Propaganda,_
Diplomacy,_
Mimicry (Speech),_
Philosophy,_
Theology,_
Sex Appeal

<Trader Sweet-Talker Primary Choice>
Acting,_
Disguise,_
Fast-Talk,_
Leadership,_
Propaganda,_
Public Speaking,_
Diplomacy,_
Sex Appeal,_
Intimidation,_
Body Language,_
Detect Lies

<Trader First Secondary>
Filch,_
Stealth,_
Animal Handling,_
Animal Handling (Equines),_
Gambling,_
Holdout,_
Streetwise,_
Anthropology,_
Carousing,_
Scrounging

<Trader Second Secondary>
Beam Weapons (Pistol),_
Beam Weapons (Rifle),_
Crossbow,_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun),_
Thrown Weapon (Axe/Mace),_
Thrown Weapon (Dart),_
Thrown Weapon (Harpoon),_
Thrown Weapon (Knife),_
Thrown Weapon (Shuriken),_
Thrown Weapon (Spear),_
Thrown Weapon (Stick),_
Bolas,_
Bow,_
Throwing

<Trader Third Secondary>
Brawling,_
Fast-Draw (Arrow),_
Fast-Draw (Ammo),_
Fast-Draw (Long Arm),_
Fast-Draw (Pistol),_
Knife,_
Boxing,_
Broadsword,_
Shortsword,_
Spear,_
Staff,_
Two-Handed Sword,_
Wrestling

<Trader Background>
Bicycling,_
Knot-Tying,_
Boating (Large Powerboat),_
Boating (Motorboat),_
Boating (Sailboat),_
Boating (Unpowered),_
Climbing,_
Sleight of Hand,_
Camouflage,_
Electronics Repair (Communications),_
Electronics Repair (Media),_
Electronics Repair (Medical),_
Electronics Repair (Scientific),_
Electronics Repair (Security),_
Electronics Repair (Sensors),_
Electronics Repair (Surveillance),_
Mechanic ([Type]),_
Veterinary,_
Lifting
Search

// --------------------------------------------------------------------------------------
//  Trooper Lists
// --------------------------------------------------------------------------------------
<Trooper Gangster>
text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),_
select8(_
		text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),y(
// )

<Trooper Marshal>
text(Please choose 1 from these primary skills.),_
		pointswanted(2),_
		itemswanted(1),_
		tagwith(Trooper(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trooper Marshal First Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select8(_
		text(Please choose 1 from these primary skills.),_
		pointswanted(1),_
		itemswanted(1),_
		tagwith(Trooper(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Trooper Marshal Second Primary Choice)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
),y(
// )

<Trooper Private Security>
text(Please choose 2 from these primary skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Trooper(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trooper Private Security Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select8(_
		text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),y(
// )

<Trooper Soldier>
text(Please choose 5 from these primary skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Trooper(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trooper Soldier Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select8(_
		text(Field intentionally left empty. Please click Ok to continue.),_
		conditional(0),_
		pointswanted(0),_
		itemswanted(atleast 0, upto 100),_
		list("")_
),y(
// )

<Trooper First Advantages>
PE:Hand Cannon #codes(upto 2, downto 1),_
PE:Off-Hand Weapon Training,_
AD:Ambidexterity,_
PE:Quick-Reload (Belt),_
PE:Quick-Reload (Breechloader),_
PE:Quick-Reload (Detachable Magazine),_
PE:Quick-Reload (Internal Magazine),_
PE:Quick-Reload (Revolver),_
PE:Quick-Reload (Muzzleloader),_
#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
AD:Trading Character Points for Money

<Trooper First Disadvantages>
DI:Bad Temper,_
DI:Berserk,_
DI:Bloodlust,_
DI:Code of Honor (Soldier's),_
DI:Duty,_
DI:Fanaticism,_
DI:Flashbacks,_
DI:Greed,_
DI:Impulsiveness,_
DI:On the Edge,_
DI:Overconfidence,_
#newitem(DI:Sense of Duty (Friends), -5, page(B153), cat(Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known"))

<Trooper First Primary>
Beam Weapons (Pistol),_
Beam Weapons (Rifle),_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun)

<Trooper Marshal First Primary Choice>
Diplomacy,_
Intimidation

<Trooper Marshal Second Primary Choice>
Area Knowledge ([Area]),_
Current Affairs ([Regional])

<Trooper Private Security Primary Choice>
Animal Handling (Dogs),_
Electronics Operation (Security),_
Electronics Operation (Surveillance),_
Shadowing,_
Diplomacy,_
Intimidation,_
Search

<Trooper Soldier Primary Choice>
Artillery (Beams),_
Artillery (Bombs),_
Artillery (Cannon),_
Artillery (Catapult),_
Artillery (Guided Missile),_
Artillery (Torpedoes),_
Battlesuit,_
Engineer (Combat),_
Gunner (Beams),_
Gunner (Cannon),_
Gunner (Catapult),_
Gunner (Machine Gun),_
Gunner (Rockets),_
Hiking

<Trooper First Secondary>
Beam Weapons (Pistol),_
Beam Weapons (Projector),_
Beam Weapons (Rifle),_
Brawling,_
Crossbow,_
Fast-Draw (Arrow),_
Fast-Draw (Ammo),_
Fast-Draw (Long Arm),_
Fast-Draw (Pistol),_
Guns (Grenade Launcher),_
Guns (Gyroc),_
Guns (Light Anti-Armor Weapon),_
Guns (Light Machine Gun),_
Guns (Musket),_
Guns (Pistol),_
Guns (Rifle),_
Guns (Shotgun),_
Guns (Submachine Gun),_
Knife,_
Liquid Projector (Flamethrower),_
Liquid Projector (Sprayer),_
Liquid Projector (Squirt Gun),_
Liquid Projector (Water Cannon),_
Thrown Weapon (Axe/Mace),_
Thrown Weapon (Dart),_
Thrown Weapon (Harpoon),_
Thrown Weapon (Knife),_
Thrown Weapon (Shuriken),_
Thrown Weapon (Spear),_
Thrown Weapon (Stick),_
Axe/Mace,_
Bow,_
Boxing,_
Broadsword,_
Shortsword,_
Spear,_
Spear Thrower,_
Staff,_
Throwing,_
Two-Handed Axe/Mace,_
Two-Handed Sword,_
Wrestling,_
Acrobatics,_
Judo,_
Karate,_
Kusari

<Trooper Second Secondary>
Forced Entry,_
Jumping,_
Climbing,_
Camouflage,_
Armoury (Heavy Weapons),_
Armoury (Small Arms),_
Explosives (Demolition),_
Explosives (Explosive Ordnance Disposal),_
Fast-Talk,_
Holdout,_
Interrogation,_
Leadership,_
Merchant,_
Running

<Trooper Third Secondary>
Scrounging,_
Survival (Arctic),_
Survival (Desert),_
Survival (Island/Beach),_
Survival (Jungle),_
Survival (Mountain),_
Survival (Plains),_
Survival (Radioactive Wasteland),_
Survival (Swampland),_
Survival (Woodlands),_
Survival

<Trooper Background>
Knot-Tying,_
Boating (Large Powerboat),_
Boating (Motorboat),_
Boating (Sailboat),_
Driving (Automobile),_
Driving (Construction Equipment),_
Driving (Halftrack),_
Driving (Heavy Wheeled),_
Driving (Hovercraft),_
Driving (Locomotive),_
Driving (Mecha),_
Driving (Motorcycle),_
Driving (Tracked),_
Riding,_
Acting,_
Cartography,_
Freight Handling,_
Gambling,_
Hazardous Materials (Biological),_
Hazardous Materials (Chemical),_
Hazardous Materials (Radioactive),_
Packing,_
Public Speaking,_
Expert Skill (Mutants),_
Expert Skill (Robotics),_
Carousing,_
Swimming,_
Skating,_
Skiing,_
Survival (Arctic),_
Survival (Desert),_
Survival (Island/Beach),_
Survival (Jungle),_
Survival (Mountain),_
Survival (Plains),_
Survival (Radioactive Wasteland),_
Survival (Swampland),_
Survival (Woodlands),_
Survival,_
Tracking

<Hulk Normal Experienced Advantages>
),y(
// )

<Hulk Gigantism Experienced Advantages>
), select2(_
text(Please choose 1 from these secondary skills.),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Scrounging #codes(upto 2pts, downto 2pts),_
			SK:Survival (Arctic) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Desert) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Island/Beach) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Jungle) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Mountain) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Plains) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Radioactive Wasteland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Swampland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Woodlands) #codes(upto 2pts, downto 2pts),_
			SK:Survival #codes(upto 2pts, downto 2pts),_
			SK:Urban Survival #codes(upto 2pts, downto 2pts)_
			SK:Forced Entry #codes(upto 2pts, downto 2pts),_
			SK:Garrote #codes(upto 2pts, downto 2pts),_
			SK:Breath Control #codes(upto 2pts, downto 2pts),_
			SK:Jumping #codes(upto 2pts, downto 2pts),_
			SK:Climbing #codes(upto 2pts, downto 2pts),_
			SK:Stealth #codes(upto 2pts, downto 2pts),_
			SK:First Aid #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Battlesuits) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Body Armor) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Force Shields) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Vehicular Armor) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Melee Weapons) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Small Arms) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Heavy Weapons) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Missile Weapons) #codes(upto 2pts, downto 2pts),_
			SK:Leadership #codes(upto 2pts, downto 2pts),_
			SK:Soldier #codes(upto 2pts, downto 2pts),_
			SK:Streetwise #codes(upto 2pts, downto 2pts),_
			SK:Expert Skill (Mutants) #codes(upto 2pts, downto 2pts),_
			SK:Tactics #codes(upto 2pts, downto 2pts),_
			SK:Carousing #codes(upto 2pts, downto 2pts),_
			SK:Swimming #codes(upto 2pts, downto 2pts),_
			SK:Hiking #codes(upto 2pts, downto 2pts),_
			SK:Lifting #codes(upto 2pts, downto 2pts),_
			SK:Running #codes(upto 2pts, downto 2pts)_
		)_
	),y(
// )



// --------------------------------------------------------------------------------------
//  Trader Lists
// --------------------------------------------------------------------------------------
<Trader Guide Experienced>
text(Please choose 2 from these primary skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader First Primary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),_
select3(_
		text(Please choose 3 from these primary skills.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader Guide Second Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),y(
// )

<Trader Merchant Experienced>
text(Please choose 3 from these primary skills.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader Merchant Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),y(
// )

<Trader Orator Experienced>
text(Please choose 2 from these primary skills.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader Orator Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),y(
// )

<Trader Sweet-Talker Experienced>
text(Please choose 5 from these primary skills.),_
		pointswanted(10),_
		itemswanted(5),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader Sweet-Talker Primary Choice)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
),y(
// )


********************************************************************************************************\[STOP]
[TEMPLATES]
*******************************************************************************************************\[START]
<Character Templates, Character Templates - After the End, Character Templates - After the End - Wastelanders>

Doc (After the End), displaycost(150),_
	cat(Character Templates - After the End),_
	description(_
					The group counts on you to patch them up _
					after a fight, but you're versed in much more _
					than that. Depending on your particular field _
					of study, you may be an expert on drugs (both curative and _
					recreational), a naturalist who can heal with herbs, a skilled _
					surgeon, or a psychiatrist trained at getting inside others' _
					heads. Your combination of medical knowledge and wasteland _
					experience allows you to accurately identify and deal with _
					many environmental hazards, which helps you stave off some _
					injuries before they have a chance to happen! _
			\par \tab Customization options include Chemist, Herbalist, Medic, and Shrink. _
				),_
	usernotes(Customization Option: %docskillsetslist%),_
	page(ATE1:4),_
	noresync(yes),_
	mergetags(_
				in all "SK:Diagnosis" with "Doc(PrimarySkills)",_
				%docskillsetsalt2list%_
			),_
	sets(_
		ST:IQ=12,_
		ST:HT=12_
	),_
	adds(_
			AD:Healer=4,_
			SK:Diagnosis=4pts,_
			%docskillsetsaliaslist%_
	),_
	x(_
		#choiceList(_
			name(docskillsets),_
			title(Skill Specialization),_
			text(Choose your specialization),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Chemist",_
				"Herbalist",_
				"Medic",_
				"Shrink"_
			),_
			aliaslist(_
						"SK:Merchant=2pts, SK:Streetwise=2pts, SK:Physician=4pts, SK:Poisons=4pts, SK:Psychology=1pts, SK:Pharmacy (Synthetic)=4pts",_
						"SK:Naturalist=8pts, SK:Pharmacy (Herbal)=4pts, SK:Physician=4pts, SK:Veterinary=1pts",_
						"SK:Surgery=8pts, SK:Physician=8pts",_
						"SK:Detect Lies=4pts, SK:Diplomacy=4pts, SK:Physician=4pts, SK:Psychology=4pts"_
			),_
			alt1list(_
				{#list(Doc Chemist)},_
				{#list(Doc Herbalist)},_
				{#list(Doc Medic)},_
				{#list(Doc Shrink)}_
			),_
			alt2list(_
						{_
							in "SK:Merchant" with "Doc(PrimarySkills)",_
							in "SK:Streetwise" with "Doc(PrimarySkills)",_
							in all "SK:Physician" with "Doc(PrimarySkills)",_
							in "SK:Poisons" with "Doc(PrimarySkills)",_
							in all "SK:Psychology" with "Doc(PrimarySkills)",_
							in "SK:Pharmacy (Synthetic)" with "Doc(PrimarySkills)"_
						},_
						{_
							in all "SK:Naturalist" with "Doc(PrimarySkills)",_
							in "SK:Pharmacy (Herbal)" with "Doc(PrimarySkills)",_
							in all "SK:Physician" with "Doc(PrimarySkills)",_
							in all "SK:Veterinary" with "Doc(PrimarySkills)"_
						},_
						{_
							in all "SK:Surgery" with "Doc(PrimarySkills)",_
							in all "SK:Physician" with "Doc(PrimarySkills)"_
						},_
						{_
							in "SK:Detect Lies" with "Doc(PrimarySkills)",_
							in "SK:Diplomacy" with "Doc(PrimarySkills)",_
							in all "SK:Physician" with "Doc(PrimarySkills)",_
							in all "SK:Psychology" with "Doc(PrimarySkills)"_
						}_
			)_
		)_
	),_
	select1(#List(Languages)),_
	select2(_
		text(Please choose 40 points from these advantages.),_
		pointswanted(40),_
		itemswanted(atleast 1),_
		tagwith(Doc(Advantages)),_
		list(_
			#list(GMAdvantages),_
			#newitem(_
				AD:Allies,_
				2/4/6,_
				levelnames(_
					Built on 50% Fairly often (roll of 9 or less),_
					Built on 50% Quite often (roll of 12 or less),_
					Built on 50% Almost all the time (roll of 15 or less)_
				),_
				x(#InputToTag("Please describe the nature of the Ally:", nameext, , "Ally")),_
				upto(3),_
				cat(Mundane, Social),_
				page(B36),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				)_
			),_
			AD:Charisma #codes(upto 3, downto 1),_
			AD:Combat Reflexes #codes(upto 1, downto 1),_
			AD:Common Sense,_
			#newitem(_
				AD:Contact,_
				1/2/3,_
				displaycost(2/4/6),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18_
				),_
				x(#InputToTag("Please describe the nature of the Contact:", nameext, , "Contact")),_
				upto(3),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Quite often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance)_
				)_
			),_
			AD:Daredevil,_
			AD:Eidetic Memory #codes(upto 2 downto 1),_
			AD:Empathy,_
			AD:Extra Basic Move #codes(upto 1, downto 1),_
			AD:Extra Basic Speed #codes(upto 6, downto 1),_
			AD:Extra DX #codes(upto 2, downto 1),_
			AD:Extra IQ #codes(upto 2, downto 1),_
			AD:Extra RP #codes(upto 11, downto 1),_
			AD:Extra ST #codes(upto 1, downto 1),_
			#newitem(_
				AD:Favor (Contact),_
				1/2/3/4,_
				displaycost(1/2/3/4),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18,_
					Effective Skill 21_
				),_
				upto(4),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Usually Reliable,_
					*2,_
					shortname(Usually Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Fairly often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance) | Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			#newitem(_
				AD:Favor (Patron),_
				10/15/20/25/30,_
				displaycost(2/3/4/5/6),_
				mods(Frequency of Appearance, Patron, Favor),_
				page(B72),_
				cat(Mundane, Social),_
				initmods(_
					Frequency: roll of  9 or less (Fairly often),_
					*1,_
					shortname(9 or less),_
					group(Frequency of Appearance)_
				| _
					Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			AD:Fearlessness,_
			#newitem(AD:Gizmos, 5/10, page(B57), upto(3), cat(mundane, Mental)),_
			AD:High Manual Dexterity #codes(upto 4, downto 1),_
			#newitem(AD:Higher Purpose (Heal others), 5, page(B59), cat(Supernatural, Mental)),_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Plant Empathy,_
			#newitem(_
				AD:Reputation (Skilled doctor),_
				5/10,_
				displaycost(2/5),_
				mods(Reputation Advantage),_
				page(B27),_
				upto(2),_
				cat(Mundane, Social, Influence),_
				initmods(_
					People Affected: Almost everyone in your game world,_
					*1,_
					shortname(Almost everyone),_
					group(Reputation)_
				| _
					Frequency of Recognition: Sometimes (roll of 10 or less),_
					*1/2,_
					shortname(Sometimes (10 or less)),_
					round(down),_
					group(Reputation)_
				),_
				conditional(_
					+1 to ST:Reaction,_
					+1 to SK:Indimidation when "your reputation counts",_
					-1 to SK:Intimidation when "your reputation works against you"_
				)_
			),_
			#newitem(AD:Resistant to Disease, 3/5/10, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)),_
			#newitem(AD:Resistant to Poison (+3 to resist), 5, page(B81), cat(Mundane, Physical)),_
			AD:Sensitive,_
			AD:Serendipity #codes(upto 2, down to 1),_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Trading Character Points for Money,_
			AD:Unfazeable_
		)_
	),_
	select3(_
		text(Please choose -15 points from these disadvantages.),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		tagwith(Doc(Disadvantages)),_
		list(_
			#list(GMDisadvantages),_
			#list(Doc First Disadvantage List)_
		)_
	),_
	select4(_
		text(Please choose -15 points from these disadvantages.),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		tagwith(Doc(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Doc includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Doc First Disadvantage List),_
			#list(Doc Second Disadvantage List)_
		)_
	),_
	select5(_
		text(Please choose -15 points from these disadvantages.),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		tagwith(Doc(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Doc includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Doc First Disadvantage List),_
			#list(Doc Second Disadvantage List),_
			DI:Callous,_
			DI:Cowardice,_
			DI:Gluttony,_
			DI:Low Pan Threshold,_
			DI:Nightmares,_
			DI:Shyness,_
			DI:Sleepwalker,_
			DI:Stubbornness,_
			DI:Truthfulness _
		)_
	),_
	select6(_
		text(Choose the hazardous material you want to be skilled with.),_
		pointswanted(4),_
		itemswanted(1),_
		tagwith(Doc(PrimarySkills)),_
		list(_
			SK:Hazardous Materials (Biological) #codes(upto 4pts, downto 4pts),_
			SK:Hazardous Materials (Chemical) #codes(upto 4pts, downto 4pts),_
			SK:Hazardous Materials (Radioactive) #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select7(_
		text(Please choose three secondary skills from the selection below.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Doc(SecondarySkills)),_
		list(_
			SK:Area Knowledge ([Area]) #codes(upto 2pts, downto 2pts),_
			SK:Current Affairs ([Regional]) #codes(upto 2pts, downto 2pts),_
			SK:Scrounging #codes(upto 2pts, downto 2pts),_
			SK:Survival (Arctic) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Desert) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Island/Beach) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Jungle) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Mountain) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Plains) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Radioactive Wasteland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Swampland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Woodlands) #codes(upto 2pts, downto 2pts),_
			SK:Survival #codes(upto 2pts, downto 2pts),_
			SK:Urban Survival #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select8(_
		text(Please choose four secondary skills from the selection below.),_
		pointswanted(16),_
		itemswanted(4),_
		tagwith(Doc(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			SK:Beam Weapons (Pistol) #codes(upto 4pts, downto 4pts),_
			SK:Beam Weapons (Projector) #codes(upto 4pts, downto 4pts),_
			SK:Beam Weapons (Rifle) #codes(upto 4pts, downto 4pts),_
			SK:Brawling #codes(upto 4pts, downto 4pts),_
			SK:Guns (Grenade Launcher) #codes(upto 4pts, downto 4pts),_
			SK:Guns (Gyroc) #codes(upto 4pts, downto 4pts),_
			SK:Guns (Light Anti-Armor Weapon) #codes(upto 4pts, downto 4pts),_
			SK:Guns (Light Machine Gun) #codes(upto 4pts, downto 4pts),_
			SK:Guns (Musket) #codes(upto 4pts, downto 4pts),_
			SK:Guns (Pistol) #codes(upto 4pts, downto 4pts),_
			SK:Guns (Rifle) #codes(upto 4pts, downto 4pts),_
			SK:Guns (Shotgun) #codes(upto 4pts, downto 4pts),_
			SK:Guns (Submachine Gun) #codes(upto 4pts, downto 4pts),_
			SK:Knife #codes(upto 4pts, downto 4pts),_
			SK:Climbing #codes(upto 4pts, downto 4pts),_
			SK:Cloak #codes(upto 4pts, downto 4pts),_
			SK:NBC Suit #codes(upto 4pts, downto 4pts),_
			SK:Shortsword #codes(upto 4pts, downto 4pts),_
			SK:Staff #codes(upto 4pts, downto 4pts),_
			SK:Stealth #codes(upto 4pts, downto 4pts),_
			SK:Throwing #codes(upto 4pts, downto 4pts),_
			SK:Wrestling #codes(upto 4pts, downto 4pts),_
			SK:Acrobatics #codes(upto 4pts, downto 4pts),_
			SK:Judo #codes(upto 4pts, downto 4pts),_
			SK:Intimidation #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select9(%docskillsetsalt1list%#list(QuirkSelection))


*******************************************************************************************************************
*******************************************************************************************************************

Hulk (After the End), displaycost(150),_
	cat(Character Templates - After the End),_
	description(_
					Big, tough, intimidating . . . you've been called it all. _
					Sometimes the best way to avoid trouble in the wasteland _
					is to look like the strongest thing around, and at 7-8' tall, _
					you sure do! Or you may be normal-sized, but rippling _
					with impressive muscles. This lets you tote larger _
					weapons - from huge pieces of rebar to vehicular miniguns _
					- and be fairly effective even without them. _
			\par \tab Customization options include Bruiser, Heavy Gunner, Melee Generalist, and Melee Specialist. You may also choose between Gigantism and Normal-Sized. _
				),_
	page(ATE1:6),_
	noresync(yes),_
	usernotes(Customization Option: %hulkskilllist%),_
	mergetags(_
				in "SK:Intimidation" with "Hulk(PrimarySkills)"_
				),_
	sets(_
		ST:ST=15,_
		ST:DX=12,_
		ST:HT=12,_
		ST:will=11_
	),_
	adds(_
		%hulksizealiaslist%_
	),_
	x(_
		#choiceList(_
			name(hulksize),_
			title(Hulk Size),_
			text(Choose your size catagory.),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Normal sized",_
				"Gigantism"_
			),_
			aliaslist(_
				"SK:Intimidation=4pts",_
				"DI:Gigantism, SK:Intimidation=4pts"_
			),_
			alt1list(_
						{AD:Extra ST, AD:Striking ST},_
						{_
							#newitem(AD:Extra ST, 10/20, displaycost(9/18), page(B14), mods(Extra ST, Size, No Fine Manipulators), initmods(Size, -10%, formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes), group(Size), page(B15) | Affects displayed ST score, +0%, shortname(Affects ST), gives(+Owner::Level to ST:ST), group(Extra ST), description(This modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)), description(The Extra ST advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)),_
							#newitem(AD:Striking ST, 5/10, displaycost(5/9), page(B89), mods(Striking ST, No Fine Manipulators, Size), initmods(Size, -10%, formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes), group(Size), page(B15)), cat(Exotic, Physical), conditional(+1 to ST:ST))_
						}_
					),_
			alt2list(_
				"10",_
				"15"_
			)_
		),_
		#choiceList(_
			name(hulkskill),_
			title(Skill Specialization),_
			text(Choose your specialization),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Bruiser",_
				"Heavy Gunner",_
				"Melee Generalist",_
				"Melee Specialist"_
			),_
			aliaslist(_
				{#list(Hulk Bruiser)},_
				{#list(Hulk Heavy Gunner)},_
				{#list(Hulk Melee Generalist)},_
				{#list(Hulk Melee Specialist)}_
			)_
		)_
	),_
	select1(#List(Languages)),_
	select2(_
		text(Please choose %hulksizealt2list% points from these advantages.),_
		pointswanted(%hulksizealt2list%),_
		itemswanted(atleast 1),_
		tagwith(Hulk(Advantages)),_
		list(_
			#list(GMAdvantages),_
			#list(Hulk First Advantage List),_
			%hulksizealt1list%_
		)_
	),_
	select3(_
		text(Please choose 30 points from these advantages.),_
		pointswanted(30),_
		itemswanted(atleast 1),_
		tagwith(Hulk(Advantages)),_
		list(_
			#BuildSelectList(Advantages where Hulk includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
			#list(GMAdvantages),_
			#list(Hulk First Advantage List),_
			%hulksizealt1list%,_
			AD:Extra Perception #codes(upto 2, down to 1),_
			AD:Extra Will #codes(upto 3, downto 1),_
			PE:Alcohol Tolerance,_
			AD:Extra DX #codes(upto 1, downto 1),_
			#newitem(_
				AD:Allies,_
				2/4/6,_
				levelnames(_
					Built on 50% Fairly often (roll of 9 or less),_
					Built on 50% Quite often (roll of 12 or less),_
					Built on 50% Almost all the time (roll of 15 or less)_
				),_
				x(#InputToTag("Please describe the nature of the Ally:", nameext, , "Ally")),_
				upto(3),_
				cat(Mundane, Social),_
				page(B36),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				)_
			),_
			AD:Breath-Holding #codes(upto 1, downto 1),_
			AD:Danger Sense,_
			AD:Daredevil,_
			AD:Enhanced Parry (bare hands) #codes(upto 1, downto 1),_
			AD:Enhanced Parry (%Melee Weapon%) #codes(upto 1, downto 1),_
			AD:Enhanced Parry (all parries) #codes(upto 1, downto 1),_
			AD:Extra Attack #codes(upto 1, downto 1),_
			#newitem(_
				AD:Favor (Contact),_
				1/2/3/4,_
				displaycost(1/2/3/4),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18,_
					Effective Skill 21_
				),_
				upto(4),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Usually Reliable,_
					*2,_
					shortname(Usually Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Fairly often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance) | Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			#newitem(_
				AD:Favor (Patron),_
				10/15/20/25/30,_
				displaycost(2/3/4/5/6),_
				mods(Frequency of Appearance, Patron, Favor),_
				page(B72),_
				cat(Mundane, Social),_
				initmods(_
					Frequency: roll of  9 or less (Fairly often),_
					*1,_
					shortname(9 or less),_
					group(Frequency of Appearance)_
				| _
					Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			AD:Fearlessness,_
			AD:Fit #codes(upto 1, downto 1),_
			PE:Hand Cannon,_
			AD:Hard to Kill,_
			AD:Hard to Subdue,_
			PE:Improvised Weapons,_
			AD:Less Sleep #codes(upto 4, downto 1),_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Night Vision #codes(upto 5, downto 1),_
			PE:Off-Hand Weapon Training,_
			AD:Ambidexterity,_
			PE:Quick-Reload (Belt),_
			PE:Quick-Reload (Breechloader),_
			PE:Quick-Reload (Detachable Magazine),_
			PE:Quick-Reload (Internal Magazine),_
			PE:Quick-Reload (Revolver),_
			PE:Quick-Reload (Muzzleloader),_
			AD:Rapid Healing,_
			#newitem(AD:Resistant to Disease, 3/5/10, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)),_
			#newitem(AD:Resistant to Poison (+3 to resist), 5, page(B81), cat(Mundane, Physical)),_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Temperature Tolerance #codes(upto 3, downto 1),_
			AD:Trading Character Points for Money,_
			AD:Unfazeable_
		)_
	),_
	select4(_
		text(Please choose -20 points from these disadvantages.),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		tagwith(Hulk(Disadvantages)),_
		list(_
			#list(GMDisadvantages),_
			#list(Hulk First Disadvantage List)_
		)_
	),_
	select5(_
		text(Please choose -25 points from these disadvantages.),_
		pointswanted(-25),_
		itemswanted(atleast 1),_
		tagwith(Hulk(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Hulk includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Hulk First Disadvantage List),_
			DI:Reduced Basic Move #codes(upto 2, downto 1),_
			DI:Reduced Basic Speed #codes(upto 1, downto 1),_
			DI:Alcoholism,_
			DI:Appearance,_
			DI:Chummy,_
			DI:Gregarious,_
			DI:Loner,_
			DI:Gluttony,_
			DI:Gullibility,_
			DI:Jealousy,_
			DI:Klutz,_
			DI:Low Empathy,_
			DI:Odious Personal Habit,_
			DI:Overweight,_
			DI:Wounded_
		)_
	),_
	select6(_
		text(Please choose 1 from these secondary skills.),_
		pointswanted(2),_
		itemswanted(1),_
		tagwith(Hulk(SecondarySkills, SurvivalSkills)),_
		list(_
			SK:Scrounging #codes(upto 2pts, downto 2pts),_
			SK:Survival (Arctic) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Desert) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Island/Beach) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Jungle) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Mountain) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Plains) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Radioactive Wasteland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Swampland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Woodlands) #codes(upto 2pts, downto 2pts),_
			SK:Survival #codes(upto 2pts, downto 2pts),_
			SK:Urban Survival #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text(Please choose 10 points from these secondary skills.),_
		pointswanted(10),_
		itemswanted(atleast 3, upto 5),_
		tagwith(Hulk(SecondarySkills)),_
		list(_
			#BuildSelectList(Skills where Hulk includes "SurvivalSkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto 4pts, downto 4pts) )),_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 4pts, downto 2pts))),_
			SK:Forced Entry #codes(upto 4pts, downto 2pts),_
			SK:Garrote #codes(upto 4pts, downto 2pts),_
			SK:Breath Control #codes(upto 4pts, downto 2pts),_
			SK:Jumping #codes(upto 4pts, downto 2pts),_
			SK:Climbing #codes(upto 4pts, downto 2pts),_
			SK:Stealth #codes(upto 4pts, downto 2pts),_
			SK:First Aid #codes(upto 4pts, downto 2pts),_
			SK:Armoury (Battlesuits) #codes(upto 4pts, downto 2pts),_
			SK:Armoury (Body Armor) #codes(upto 4pts, downto 2pts),_
			SK:Armoury (Force Shields) #codes(upto 4pts, downto 2pts),_
			SK:Armoury (Vehicular Armor) #codes(upto 4pts, downto 2pts),_
			SK:Armoury (Melee Weapons) #codes(upto 4pts, downto 2pts),_
			SK:Armoury (Small Arms) #codes(upto 4pts, downto 2pts),_
			SK:Armoury (Heavy Weapons) #codes(upto 4pts, downto 2pts),_
			SK:Armoury (Missile Weapons) #codes(upto 4pts, downto 2pts),_
			SK:Leadership #codes(upto 4pts, downto 2pts),_
			SK:Soldier #codes(upto 4pts, downto 2pts),_
			SK:Streetwise #codes(upto 4pts, downto 2pts),_
			SK:Expert Skill (Mutants) #codes(upto 4pts, downto 2pts),_
			SK:Tactics #codes(upto 4pts, downto 2pts),_
			SK:Carousing #codes(upto 4pts, downto 2pts),_
			SK:Swimming #codes(upto 4pts, downto 2pts),_
			SK:Hiking #codes(upto 4pts, downto 2pts),_
			SK:Lifting #codes(upto 4pts, downto 2pts),_
			SK:Running #codes(upto 4pts, downto 2pts)_
		)_
	),_
	select8(%hulkskillaliaslist%#list(QuirkSelection))

*******************************************************************************************************************
*******************************************************************************************************************

Hunter (After the End), displaycost(150),_
	cat(Character Templates - After the End),_
	description(_
					You are at home in the wilderness, capable of living off the _
					land - even a befouled wasteland. Your keen senses and quick _
					reflexes make you good in a straight-up fight, but you'd much _
					rather ambush than confront your foes directly. Every hunter _
					has preferred duties - stealthy reconnaissance, silent killing, _
					navigating safe journeys, or simply dealing with the hazards of _
					the world - but at heart, it all comes down to self-sufficiency. _
			\par \tab Customization options include Scout, Sniper, Sojourner, and Survivor. _
				),_
	page(ATE1:8),_
	noresync(yes),_
	usernotes(Customization Option: %hunterskilllist%),_
	mergetages(_
				in "SK:Scrounging" with "Hunter(PrimarySkills)",_
				in "SK:Camouflage" with "Hunter(PrimarySkills)",_
				%hunterskillalt2list%_
			),_
	sets(_
		ST:ST=11,_
		ST:DX=12,_
		ST:IQ=11,_
		ST:HT=12,_
		ST:Perception=13_
	),_
	adds(_
		SK:Scrounging=1pts,_
		%hunterskillalt1list%_
	),_
	x(_
		#choiceList(_
			name(hunterskill),_
			title(Skill Specialization),_
			text(Choose your specialization),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Scout",_
				"Sniper",_
				"Sojourner",_
				"Survivor"_
			),_
			aliaslist(_
				{#list(Hunter Scout)},_
				{#list(Hunter Sniper)},_
				{#list(Hunter Sojourner)},_
				{#list(Hunter Survivor)}_
			),_
			alt1list(_
					"SK:Camouflage=2pts, SK:Observation=2pts, SK:Stealth=8pts, SK:Tracking=4pts, SK:Traps=2pts",_
					"SK:Camouflage=4pts, SK:Climbing=2pts, SK:Shadowing=4pts, SK:Stealth=4pts",_
					"SK:Camouflage=2pts, SK:Area Knowledge ([Area])=2pts, SK:Cartography=2pts, SK:Navigation (Land)=8pts",_
					"SK:Camouflage=2pts, SK:Naturalist=8pts"_
			),_
			alt2list(_
					{_
						in "SK:Observation" with "Hunter(PrimarySkills)",_
						in "SK:Stealth" with "Hunter(PrimarySkills)",_
						in "SK:Tracking" with "Hunter(PrimarySkills)",_
						in "SK:Traps" with "Hunter(PrimarySkills)"_
					},_
					{_
						in "SK:Climbing" with "Hunter(PrimarySkills)",_
						in "SK:Shadowing" with "Hunter(PrimarySkills)",_
						in "SK:Stealth" with "Hunter(PrimarySkills)"_
					},_
					{_
						in all "SK:Area Knowledge" with "Hunter(PrimarySkills)",_
						in "SK:Cartography" with "Hunter(PrimarySkills)",_
						in "SK:Navigation (Land)" with "Hunter(PrimarySkills)"_
					},_
					{_
						in all "SK:Naturalist" with "Hunter(PrimarySkills)",_
					}_
			)_
		)_
	),_
	select1(#List(Languages)),_
	select2(_
		text(Please choose 20 points from these advantages.),_
		pointswanted(20),_
		itemswanted(atleast 1),_
		tagwith(Hunter(Advantages)),_
		list(_
			#list(GMAdvantages),_
			#list(Hunter First Advantage List)_
		)_
	),_
	select3(_
		text(Please choose 25 points from these advantages.),_
		pointswanted(25),_
		itemswanted(atleast 1),_
		tagwith(Hunter(Advantages)),_
		list(_
			#BuildSelectList(Advantages where Hunter includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
			#list(GMAdvantages),_
			#buildlist(list(#list(Hunter First Advantage List)), template(%ListItem%)),_
			AD:Extra RP #codes(upto 12, downto 1),_
			AD:Extra Basic Move #codes(upto 2, downto 1),_
			AD:Absolute Direction,_
			AD:Acute [sense],_
			AD:Animal Empathy,_
			AD:Animal Friend #codes(upto 4, downto 1),_
			AD:Breath-Holding #codes(upto 1, downto 1),_
			AD:Combat Reflexes #codes(upto 1, downto 1),_
			AD:Common Sense,_
			AD:Danger Sense,_
			PE:Deep Sleeper,_
			AD:Damage Resistance #codes(upto 2, downto 1),_
			#newitem(_
				AD:Favor (Contact),_
				1/2/3/4,_
				displaycost(1/2/3/4),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18,_
					Effective Skill 21_
				),_
				upto(4),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Usually Reliable,_
					*2,_
					shortname(Usually Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Fairly often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance) | Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			#newitem(_
				AD:Favor (Patron),_
				10/15/20/25/30,_
				displaycost(2/3/4/5/6),_
				mods(Frequency of Appearance, Patron, Favor),_
				page(B72),_
				cat(Mundane, Social),_
				initmods(_
					Frequency: roll of  9 or less (Fairly often),_
					*1,_
					shortname(9 or less),_
					group(Frequency of Appearance)_
				| _
					Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			AD:Hard to Kill #codes(upto 3, downto 1),_
			AD:Hard to Subdue #codes(upto 3, downto 1),_
			AD:High Pain Threshold,_
			PE:Improvised Weapons,_
			AD:Intuition,_
			AD:Less Sleep #codes(upto 4, downto 1),_
			AD:Luck #codes(upto 1, downto 1),_
			AD:Night Vision #codes(upto 9, downto 1),_
			AD:Peripheral Vision,_
			AD:Plant Empathy,_
			AD:Rapid Healing #codes(upto 2, downto 1),_
			#newitem(AD:Resistant to Disease, 3/5/10, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)),_
			AD:Serendipity #codes(upto 1, downto 1),_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Single-Minded,_
			AD:Temperature Tolerance #codes(upto 3, downto 1),_
			AD:Trading Character Points for Money_
		)_
	),_
	select4(_
		text(Please choose -20 points from these disadvantages.),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		tagwith(Hunter(Disadvantages)),_
		list(_
			#list(GMDisadvantages),_
			#list(Hunter First Disadvantage List)_
		)_
	),_
	select5(_
		text(Please choose -25 points from these disadvantages.),_
		pointswanted(-25),_
		itemswanted(atleast 1),_
		tagwith(Hunter(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Hunter includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Hunter First Disadvantage List),_
			DI:Reduced Basic Speed #codes(upto 1, downto 1),_
			DI:Clueless,_
			#newitem(DI:Delusion (The outdoors is always safer than in a building!), -10, page(B130), cat(Mundane, Mental)),_
			DI:Greed,_
			DI:Impulsiveness,_
			#newitem(DI:Intolerance (City-dwellers), -5, page(B140), cat(Mundane, Mental)),_
			DI:Lecherousness,_
			DI:Light Sleeper,_
			DI:Low Empathy,_
			DI:No Sense of Humor,_
			DI:Oblivious,_
			DI:Paranoia,_
			DI:Phobia (Crowds),_
			DI:Shyness,_
			DI:Stuttering_
		)_
	),_
	select6(_
		text(Please choose your primary weapon skill.),_
		pointswanted(8),_
		itemswanted(1),_
		tagwith(Hunter(PrimarySkills, FirstPrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 8pts, downto 8pts))),_
			#buildlist(list(#list(Hunter First Skill)), template(SK:%ListItem% #codes(upto 8pts, downto 8pts)))_
		)_
	),_
	select7(_
		text(Please choose 2 secondary skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Hunter(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Hunter Second Skill)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	),_
	select8(_
		text(Please choose 5 secondary skills.),_
		pointswanted(10),_
		itemswanted(5),_
		tagwith(Hunter(SecondarySkills)),_
		list(_
			#buildlist(list(#list(Hunter Second Skill)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Boating (Large Powerboat) #codes(upto 2pts, downto 2pts),_
			SK:Boating (Motorboat) #codes(upto 2pts, downto 2pts),_
			SK:Boating (Sailboat) #codes(upto 2pts, downto 2pts),_
			SK:Boating (Unpowered) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Automobile) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Construction Equipment) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Halftrack) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Heavy Wheeled) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Hovercraft) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Locomotive) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Mecha) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Motorcycle) #codes(upto 2pts, downto 2pts),_
			SK:Driving (Tracked) #codes(upto 2pts, downto 2pts),_
			SK:Riding #codes(upto 2pts, downto 2pts),_
			SK:Acrobatics #codes(upto 2pts, downto 2pts),_
			SK:Animal Handling #codes(upto 2pts, downto 2pts),_
			SK:Animal Handling (Dogs) #codes(upto 2pts, downto 2pts),_
			SK:Animal Handling (Equines) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Missile Weapons) #codes(upto 2pts, downto 2pts),_
			SK:Armoury (Small Arms) #codes(upto 2pts, downto 2pts),_
			#newitem(SK:Disguise (Animals), IQ/A, tl(0-12), default(IQ - 5, SK:Makeup - 3), page(B187), cat(_General, Criminal/Street, Spy)) #codes(upto 2pts, downto 2pts),_
			#newitem(SK:Professional Skill (Forester), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge)) #codes(upto 2pts, downto 2pts),_
			SK:Prospecting #codes(upto 2pts, downto 2pts),_
			SK:Weather Sense #codes(upto 2pts, downto 2pts),_
			SK:Mimicry (Animal Sounds) #codes(upto 2pts, downto 2pts),_
			SK:Mimicry (Bird Calls) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select9(_
		text(Please choose 1 survival skill.),_
		pointswanted(4),_
		itemswanted(1),_
		tagwith(Hunter(PrimarySkills)),_
		list(_
			#buildlist(list(#list(Hunter Survival List)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
	),_
	select10(%hunterskillaliaslist%#list(QuirkSelection))

*******************************************************************************************************************
*******************************************************************************************************************

Nomad (After the End), displaycost(150),_
	cat(Character Templates - After the End),_
	description(_
					Staying put is for fools. No matter how fortified the _
					bunker or well-stocked the town, you know it'll eventually _
					fall. That's why you keep moving, always one step ahead of _
					danger. Your conveyance varies: Animals are inexpensive, _
					can be fed off the land, and will defend themselves - but vehicles _
					can be driven indefinitely (with occasional breaks to _
					obtain fuel) and offer better protection. Either way, you're an _
					expert on whatever you ride. _
			\par \tab Customization options include Driver and Rider. _
				),_
	page(ATE1:9),_
	noresync(yes),_
	usernotes(Customization Option: %nomadskillsetslist%),_
	sets(_
		ST:DX=12,_
		ST:IQ=12,_
		ST:HT=11_
	),_
	adds(_
			AD:Absolute Direction,_
			%nomadskillsetsaliaslist%_
	),_
	mergetags(%nomadskillsetsalt2list%),_
	x(_
		#choiceList(_
			name(nomadskillsets),_
			title(Skill Specialization),_
			text(Choose your specialization),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Rider",_
				"Driver"_
			),_
			aliaslist(_
				"AD:Animal Empathy, AD:Animal Friend=4, SK:Animal Handling=4pts, SK:Veterinary=1pts",_
				"AD:Driver's Reflexes=4"_
			),_
			alt1list(_
				{#list(Nomad Rider)},_
				{#list(Nomad Driver)}_
			),_
			alt2list(_
						{_
							in all "SK:Animal Handling" with "Nomad(PrimarySkills)",_
							in "SK:Veterinary" with "Nomad(PrimarySkills)"_
						},_
						{_
						}_
			)_
		)_
	),_
	select1(#List(Languages)),_
	select2(_
		text(Please choose 30 points from these advantages.),_
		pointswanted(30),_
		itemswanted(atleast 1),_
		tagwith(Nomad(Advantages)),_
		list(_
			#list(GMAdvantages),_
			AD:Extra ST #codes(upto 2, downto 1),_
			AD:Extra DX #codes(upto 1, downto 1),_
			AD:Extra HT #codes(upto 1, downto 1),_
			AD:Extra IQ #codes(upto 1, downto 1),_
			AD:Extra RP #codes(upto 11, downto 1),_
			AD:Extra Basic Speed #codes(upto 5, downto 1),_
			AD:Extra Perception #codes(upto 2, down to 1),_
			AD:Acute [sense],_
			PE:Alcohol Tolerance,_
			#newitem(_
				AD:Allies,_
				2/4/6,_
				levelnames(_
					Built on 50% Fairly often (roll of 9 or less),_
					Built on 50% Quite often (roll of 12 or less),_
					Built on 50% Almost all the time (roll of 15 or less)_
				),_
				x(#InputToTag("Please describe the nature of the Ally:", nameext, , "Ally")),_
				upto(3),_
				cat(Mundane, Social),_
				page(B36),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				)_
			),_
			AD:Artificer #codes(upto 3, downto 1),_
			AD:Charisma #codes(upto 1, downto 1),_
			AD:Combat Reflexes #codes(upto 1, downto 1),_
			AD:Common Sense,_
			AD:Danger Sense,_
			AD:Daredevil,_
			#newitem(_
				AD:Favor (Contact),_
				1/2/3/4,_
				displaycost(1/2/3/4),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18,_
					Effective Skill 21_
				),_
				upto(4),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Usually Reliable,_
					*2,_
					shortname(Usually Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Fairly often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance) | Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			#newitem(_
				AD:Favor (Patron),_
				10/15/20/25/30,_
				displaycost(2/3/4/5/6),_
				mods(Frequency of Appearance, Patron, Favor),_
				page(B72),_
				cat(Mundane, Social),_
				initmods(_
					Frequency: roll of  9 or less (Fairly often),_
					*1,_
					shortname(9 or less),_
					group(Frequency of Appearance)_
				| _
					Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			AD:Fearlessness,_
			#newitem(AD:Gizmos, 5/10, page(B57), upto(3), cat(mundane, Mental)) #codes(upto 3, downto 1),_
			AD:High Pain Threshold,_
			#newitem(AD:Higher Purpose (Keep my ride up and running), 5, page(B59), cat(Supernatural, Mental)),_
			AD:Less Sleep #codes(upto 4, downto 1),_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Night Vision #codes(upto 9, downto 1),_
			#newitem(AD:Patron (Entire convoy), 10/20, page(B72), cat(Mundane, Social), upto(5),_
				levelnames(_
					Fairly often (roll of 9 or less),_
					Quite often (roll of 12 or less),_
					Almost all the time (roll of 15 or less)_
				)_
			),_
			PE:Penetrating Voice,_
			AD:Peripheral Vision,_
			#newitem(AD:Resistant to Disease (+3), 3, page(B81), cat(Mundane, Physical)),_
			AD:Serendipity #codes(upto 2, downto 1),_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Temperature Tolerance #codes(upto 3, downto 1),_
			AD:Trading Character Points for Money_
		)_
	),_
	select3(_
		text(Please choose -20 points from these disadvantages.),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		tagwith(Nomad(Disadvantages)),_
		list(_
			#list(GMDisadvantages),_
			#list(Nomad First Disadvantage List)_
		)_
	),_
	select4(_
		text(Please choose -25 points from these disadvantages.),_
		pointswanted(-25),_
		itemswanted(atleast 1),_
		tagwith(Nomad(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Nomad includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Nomad First Disadvantage List),_
			DI:Reduced Basic Speed #codes(upto 1, downto 1),_
			DI:Bully,_
			DI:Chummy,_
			DI:Gregarious,_
			DI:Loner,_
			DI:Clueless,_
			DI:Cowardice,_
			DI:Enemy (One Person),_
			DI:Enemy (Less powerful group),_
			DI:Extra Sleep,_
			DI:Jealousy,_
			DI:Low Pain Threshold,_
			DI:Oblivious,_
			DI:Overweight,_
			DI:Unfit_
		)_
	),_
	select5(_
		%nomadskillsetsalt1list% _
	),_
	select8(_
		text(Please choose 1 secondary skill.),_
		pointswanted(1),_
		itemswanted(1),_
		tagwith(Nomad(SecondarySkills)),_
		list(_
			SK:Navigation (Air) #codes(upto 1pts),_
			SK:Navigation (Land) #codes(upto 1pts),_
			SK:Navigation (Sea) #codes(upto 1pts)_
		)_
	),_
	select9(_
		text(Please choose 2 secondary skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Nomad(SecondarySkills)),_
		list(_
			SK:Area Knowledge ([Area]) #codes(upto 2pts, downto 2pts),_
			SK:Cartography #codes(upto 2pts, downto 2pts),_
			SK:Scrounging #codes(upto 2pts, downto 2pts),_
			SK:Survival (Arctic) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Desert) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Island/Beach) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Jungle) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Mountain) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Plains) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Radioactive Wasteland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Swampland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Woodlands) #codes(upto 2pts, downto 2pts),_
			SK:Survival #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select10(_
		text(Please choose 2 secondary skills.),_
		pointswanted(8),_
		itemswanted(2),_
		tagwith(Nomad(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Nomad Skills)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
	),_
	select11(_
		text(Please choose 2 secondary skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Nomad(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Nomad Skills)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts))),_
			SK:Brawling #codes(upto 2pts, downto 2pts),_
			SK:Knife #codes(upto 2pts, downto 2pts),_
			SK:Broadsword #codes(upto 2pts, downto 2pts),_
			SK:Climbing #codes(upto 2pts, downto 2pts),_
			SK:Shortsword #codes(upto 2pts, downto 2pts),_
			SK:Staff #codes(upto 2pts, downto 2pts),_
			SK:Spear #codes(upto 2pts, downto 2pts),_
			SK:Stealth #codes(upto 2pts, downto 2pts),_
			SK:Wrestling #codes(upto 2pts, downto 2pts),_
			SK:Acrobatics #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select12(_
		text(Please choose 5 background skills.),_
		pointswanted(5),_
		itemswanted(5),_
		tagwith(Nomad(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Bicycling #codes(upto 1pts),_
			SK:Fast-Draw (Arrow) #codes(upto 1pts),_
			SK:Fast-Draw (Ammo) #codes(upto 1pts),_
			SK:Fast-Draw (Long Arm) #codes(upto 1pts),_
			SK:Fast-Draw (Pistol) #codes(upto 1pts),_
			SK:Knot-Tying #codes(upto 1pts),_
			SK:Battlesuit #codes(upto 1pts),_
			SK:NBC Suit #codes(upto 1pts),_
			SK:Airshipman #codes(upto 1pts),_
			SK:Camouflage #codes(upto 1pts),_
			SK:Current Affairs (Regional) #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Seamanship #codes(upto 1pts),_
			SK:Armoury (Heavy Weapons) #codes(upto 1pts),_
			SK:Armoury (Vehicular Armor) #codes(upto 1pts),_
			SK:Electronics Repair (Communications) #codes(upto 1pts),_
			SK:Electronics Repair (Sensors) #codes(upto 1pts),_
			SK:Fast-Talk #codes(upto 1pts),_
			SK:Leadership #codes(upto 1pts),_
			SK:Lockpicking #codes(upto 1pts),_
			SK:Merchant #codes(upto 1pts),_
			SK:Navigation (Air) #codes(upto 1pts),_
			SK:Navigation (Land) #codes(upto 1pts),_
			SK:Navigation (Sea) #codes(upto 1pts),_
			SK:Smuggling #codes(upto 1pts),_
			SK:Streetwise #codes(upto 1pts),_
			SK:Anthropology #codes(upto 1pts),_
			SK:Computer Programming #codes(upto 1pts),_
			SK:Diplomacy #codes(upto 1pts),_
			SK:Expert Skill (Robotics) #codes(upto 1pts),_
			SK:Carousing #codes(upto 1pts),_
			SK:Swimming #codes(upto 1pts),_
			SK:Intimidation #codes(upto 1pts),_
			SK:Urban Survival #codes(upto 1pts)_
		)_
	),_
	select13(#list(QuirkSelection))

*******************************************************************************************************************
*******************************************************************************************************************

Scavenger (After the End), displaycost(150),_
	cat(Character Templates - After the End),_
	description(_
					The ruins of civilization are your home. You could survive _
					out in the wilderness if necessary, but why bother? Every _
					building in a (former) city is a potential treasure trove and _
					defensible fort rolled into one. You're proud of your knowledge, _
					but you aren't flashy; sticking to the shadows is the best _
					way to ensure a long life. There are many different niches you _
					can fill, depending on whether you emphasize your sneakiness, _
					your nose for finding useful stuff, your willingness to take from _
					other scavengers, or your knowledge of (and ability to get _
					around) the city . . . but no matter which you favor, your skills _
					are useful in a wide range of situations. _
			\par \tab Customization options include Ghost, Looter, Thief, and Urban Explorer. _
				),_
	page(ATE1:11),_
	noresync(yes),_
	usernotes(Customization Option: %scavengerskillsetslist%),_
	sets(_
		ST:ST=11,_
		ST:DX=13,_
		ST:IQ=11,_
		ST:HT=11,_
		ST:Perception=14_
	),_
	adds(_
			SK:Anthropology=2pts,_
			SK:Merchant=1pts,_
			%scavengerskillsetsaliaslist%_
	),_
	mergetags(_
				in all "SK:Anthropology" with "Scavenger(PrimarySkills)",_
				in "SK:Merchant" with "Scavenger(PrimarySkills)",_
				in "SK:Scrounging" with "Scavenger(PrimarySkills)",_
				in "SK:Search" with "Scavenger(PrimarySkills)",_
				in "SK:Stealth" with "Scavenger(PrimarySkills)",_
				in "SK:Streetwise" with "Scavenger(PrimarySkills)",_
				in "SK:Urban Survival" with "Scavenger(PrimarySkills)",_
				%scavengerskillsetsalt2list%_
				),_
	x(_
		#choiceList(_
			name(scavengerskillsets),_
			title(Skill Specialization),_
			text(Choose your specialization),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Ghost",_
				"Looter",_
				"Thief",_
				"Urban Explorer"_
			),_
			aliaslist(_
						"SK:Scrounging=2pts, SK:Search=1pts, SK:Stealth=12pts, SK:Streetwise=2pts, SK:Urban Survival=2pts, SK:Holdout=4pts",_
						"SK:Scrounging=4pts, SK:Search=4pts, SK:Stealth=4pts, SK:Streetwise=2pts, SK:Urban Survival=2pts, SK:Forced Entry=2pts, SK:Architecture=1pts, SK:Lockpicking=8pts, SK:Traps=8pts",_
						"SK:Scrounging=2pts, SK:Search=1pts, SK:Stealth=4pts, SK:Streetwise=8pts, SK:Urban Survival=2pts, SK:Filch=2pts, SK:Pickpocket=8pts",_
						"SK:Scrounging=2pts, SK:Search=1pts, SK:Stealth=4pts, SK:Streetwise=2pts, SK:Urban Survival=8pts, SK:Jumping=2pts, SK:Climbing=4pts, SK:Acrobatics=4pts, SK:Escape=4pts, SK:Architecture=2pts, SK:Running=2pts"_
			),_
			alt1list(_
				{#list(Scavenger Ghost)},_
				{#list(Scavenger Looter)},_
				{#list(Scavenger Thief)},_
				{#list(Scavenger Urban Explorer)}_
			),_
			alt2list(_
					{_
						in "SK:Holdout" with "Scavenger(PrimarySkills)"_
					},_
					{_
						in "SK:Architecture" with "Scavenger(PrimarySkills)",_
						in "SK:Forced Entry" with "Scavenger(PrimarySkills)",_
						in "SK:Lockpicking" with "Scavenger(PrimarySkills)",_
						in "SK:Traps" with "Scavenger(PrimarySkills)"_
					},_
					{_
						in "SK:Filch" with "Scavenger(PrimarySkills)",_
						in "SK:Pickpocket" with "Scavenger(PrimarySkills)"_
					},_
					{_
						in "SK:Acrobatics" with "Scavenger(PrimarySkills)",_
						in "SK:Architecture" with "Scavenger(PrimarySkills)",_
						in "SK:Escape" with "Scavenger(PrimarySkills)",_
						in "SK:Jumping" with "Scavenger(PrimarySkills)",_
						in "SK:Climbing" with "Scavenger(PrimarySkills)",_
						in "SK:Running" with "Scavenger(PrimarySkills)"_
					}_
			)_
		)_
	),_
	select1(#List(Languages)),_
	select2(_
		text(Please choose 30 points from these advantages.),_
		pointswanted(30),_
		itemswanted(atleast 1),_
		tagwith(Scavenger(Advantages)),_
		list(_
			#list(GMAdvantages),_
			AD:Extra ST #codes(upto 3, downto 1),_
			AD:Extra DX #codes(upto 1, downto 1),_
			AD:Extra IQ #codes(upto 1, downto 1),_
			AD:Extra HT #codes(upto 1, downto 1),_
			AD:Extra Perception #codes(upto 2, downto 1),_
			AD:Extra RP #codes(upto 11, downto 1),_
			AD:Extra Basic Speed #codes(upto 4, downto 1),_
			AD:Acute [sense],_
			AD:Breath-Holding #codes(upto 1, downto 1),_
			AD:Catfall,_
			AD:Combat Reflexes #codes(upto 1, downto 1),_
			AD:Contact Group #codes(upto 3, downto 1),_
			AD:Craftiness #codes(upto 4, downto 1),_
			AD:Danger Sense,_
			PE:Deep Sleeper,_
			AD:Damage Resistance #codes(upto 1, downto 1),_
			AD:Eidetic Memory #codes(upto 1, downto 1),_
			#newitem(_
				AD:Favor (Contact),_
				1/2/3/4,_
				displaycost(1/2/3/4),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18,_
					Effective Skill 21_
				),_
				upto(4),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Usually Reliable,_
					*2,_
					shortname(Usually Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Fairly often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance) | Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			#newitem(_
				AD:Favor (Patron),_
				10/15/20/25/30,_
				displaycost(2/3/4/5/6),_
				mods(Frequency of Appearance, Patron, Favor),_
				page(B72),_
				cat(Mundane, Social),_
				initmods(_
					Frequency: roll of  9 or less (Fairly often),_
					*1,_
					shortname(9 or less),_
					group(Frequency of Appearance)_
				| _
					Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			AD:Enhanced Dodge #codes(upto 1, downto 1),_
			AD:Flexibility,_
			AD:Double-Jointed,_
			PE:Forgettable Face,_
			#newitem(AD:Gizmos, 5/10, page(B57), upto(3), cat(mundane, Mental)) #codes(upto 3, downto 1),_
			AD:Hard to Kill #codes(upto 3, downto 1),_
			AD:Hard to Subdue #codes(upto 3, downto 1),_
			AD:High Manual Dexterity #codes(upto 4, downto 1),_
			PE:Honest Face,_
			AD:Intuition,_
			AD:Less Sleep #codes(upto 4, downto 1),_
			AD:Lifting ST #codes(upto 3, downto 1),_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Night Vision #codes(upto 9, downto 1),_
			AD:Perfect Balance,_
			AD:Pitiable,_
			AD:Rapid Healing #codes(upto 2, downto 1),_
			#newitem(AD:Resistant to Disease, 3/5/10, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)),_
			#newitem(AD:Resistant to Poison (+3 to resist), 5, page(B81), cat(Mundane, Physical)),_
			AD:Serendipity #codes(upto 2, downto 1),_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Trading Character Points for Money_
		)_
	),_
	select3(_
		text(Please choose -15 points from these disadvantages.),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		tagwith(Scavenger(Disadvantages)),_
		list(_
			#list(GMDisadvantages),_
			#list(Scavenger First Disadvantages)_
		)_
	),_
	select4(_
		text(Please choose -15 points from these disadvantages.),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		tagwith(Scavenger(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Scavenger includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Scavenger First Disadvantages),_
			#list(Scavenger Second Disadvantages)_
		)_
	),_
	select5(_
		text(Please choose -15 points from these disadvantages.),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		tagwith(Scavenger(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Scavenger includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Scavenger First Disadvantages),_
			#list(Scavenger Second Disadvantages),_
			DI:Reduced Basic Speed #codes(upto 1, downto 1),_
			DI:Bad Temper,_
			DI:Combat Paralysis,_
			DI:Compulsive Gambling,_
			DI:Compulsive Lying,_
			DI:Impulsiveness_
		)_
	),_
	select6(_
		text(Please choose 2 secondary skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Scavenger(SecondarySkills)),_
		list(_
			SK:Area Knowledge ([Area]) #codes(upto 2pts, downto 2pts),_
			SK:Current Affairs ([Regional]) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Arctic) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Desert) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Island/Beach) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Jungle) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Mountain) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Plains) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Radioactive Wasteland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Swampland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Woodlands) #codes(upto 2pts, downto 2pts),_
			SK:Survival #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text(Please choose 2 secondary skills.),_
		pointswanted(4),_
		tagwith(Scavenger(SecondarySkills)),_
		itemswanted(2),_
		list(_
			SK:Beam Weapons (Pistol) #codes(upto 2pts, downto 2pts),_
			SK:Beam Weapons (Projector) #codes(upto 2pts, downto 2pts),_
			SK:Beam Weapons (Rifle) #codes(upto 2pts, downto 2pts),_
			SK:Brawling #codes(upto 2pts, downto 2pts),_
			SK:Crossbow #codes(upto 2pts, downto 2pts),_
			SK:Guns (Grenade Launcher) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Gyroc) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Light Anti-Armor Weapon) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Light Machine Gun) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Musket) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Pistol) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Rifle) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Shotgun) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Submachine Gun) #codes(upto 2pts, downto 2pts),_
			SK:Knife #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Axe/Mace) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Dart) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Harpoon) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Knife) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Shuriken) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Spear) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Stick) #codes(upto 2pts, downto 2pts),_
			SK:Axe/Mace #codes(upto 2pts, downto 2pts),_
			SK:Boxing #codes(upto 2pts, downto 2pts),_
			SK:Bow #codes(upto 2pts, downto 2pts),_
			SK:Broadsword #codes(upto 2pts, downto 2pts),_
			SK:Shortsword #codes(upto 2pts, downto 2pts),_
			SK:Staff #codes(upto 2pts, downto 2pts),_
			SK:Throwing #codes(upto 2pts, downto 2pts),_
			SK:Wrestling #codes(upto 2pts, downto 2pts),_
			SK:Blowpipe #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select8(%scavengerskillsetsalt1list%#list(QuirkSelection))

*******************************************************************************************************************
*******************************************************************************************************************

Tech (After the End), displaycost(150),_
	cat(Character Templates - After the End),_
	description(_
					Who says there isn't still plenty of good gear out in the _
					wastes of civilization? You just have to know how to fix it up _
					and use it . . . and you do. While most wastelanders have gone _
					low-tech, falling back on swords and push-carts, you refuse to _
					join them in the Dark Ages. Whether your goal is creating new _
					toys, repairing the old ones, understanding the basic scientific _
					principles behind technology, or just knowing everything _
					about how to use the stuff, you know that you can count on _
					your equipment more than anyone or anything else. _
			\par \tab Customization options include Inventor, Repairman, Scientist, and Technophile. _
				),_
	page(ATE1:12),_
	noresync(yes),_
	usernotes(Customization Option: %techskillsetslist%%techquickgadgeteeralt2list%),_
	sets(_
		ST:IQ=14,_
		ST:HT=11_
	),_
	adds(_
		%techskillsetsaliaslist%,_
		%techquickgadgeteeraliaslist%_
	),_
	mergetags(%techskillsetsalt2list%),_
	x(_
		#choiceList(_
			name(techquickgadgeteer),_
			title(Gadgeteer Specialization),_
			text(Choose your Gadgeteer selection.),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Quick Gadgeteer",_
				"Standard Tech" _
			),_
			aliaslist(_
				"AD:Gadgeteer=2, AD:Versatile",_
				"#NoNeeds" _
			),_
			alt1list(_
				{#list(Tech Quick Gadgeteer)},_
				{#list(Tech Standard)}_
			),_
			alt2list(_
				", Quick Gadgeteer",_
				"" _
			)_
		),_
		#choiceList(_
			name(techskillsets),_
			title(Skill Specialization),_
			text(Choose your specialization),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Inventor",_
				"Repairman",_
				"Scientist",_
				"Technophile" _
			),_
			aliaslist(_
				"SK:Scrounging=4pts",_
				{SK:Scrounging=2pts, #buildlist(list(#list(Tech Repairman Primary Given)), template(SK:%ListItem%=1pts))},_
				{SK:Scrounging=2pts, #buildlist(list(#list(Tech Scientist Primary Given)), template(SK:%ListItem%=2pts))},_
				"SK:Scrounging=2pts" _
			),_
			alt1list(_
				{#list(Tech Inventor)},_
				{#list(Tech Repairman)},_
				{#list(Tech Scientist)},_
				{#list(Tech Technophile)}_
			),_
			alt2list(_
					{_
						in "SK:Scrounging" with "Tech(PrimarySkills)"_
					},_
					{_
						in "SK:Scrounging" with "Tech(PrimarySkills)",_
						in "SK:Electrician" with "Tech(PrimarySkills)",_
						in "SK:Machinist" with "Tech(PrimarySkills)"_
					},_
					{_
						in "SK:Scrounging" with "Tech(PrimarySkills)",_
						in "SK:Research" with "Tech(PrimarySkills)"_
					},_
					{_
						in "SK:Scrounging" with "Tech(PrimarySkills)"_
					}_
			)_
		)_
	),_
	select1(#List(Languages)),_
	select2(%techquickgadgeteeralt1list%),_
	select4(_
		text(Please choose -15 points from these disadvantages.),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		tagwith(Tech(Disadvantages)),_
		list(_
			#list(GMDisadvantages),_
			#list(Tech First Disadvantages)_
		)_
	),_
	select5(_
		text(Please choose -15 points from these disadvantages.),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		tagwith(Tech(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Tech includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Tech First Disadvantages),_
			#list(Tech Second Disadvantages)_
		)_
	),_
	select6(_
		text(Please choose -15 points from these disadvantages.),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		tagwith(Tech(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Tech includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Tech First Disadvantages),_
			#list(Tech Second Disadvantages),_
			#list(Tech Third Disadvantages)_
		)_
	),_
	select7(%techskillsetsalt1list%),_
	select9(_
		text(Please choose 6 from these secondary skills.),_
		pointswanted(6),_
		itemswanted(6),_
		tagwith(Tech(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech Inventer Primary)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech Repairman Primary Given)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech Repairman Primary Choice)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech Scientist Primary Choice)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech Scientist Primary Choice)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech Technophile First Primary Choice)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech Technophile Second Primary Choice)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
	),_
	select10(_
		text(Please choose 2 from these secondary skills.),_
		pointswanted(8),_
		itemswanted(2),_
		tagwith(Tech(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Tech First Secondary)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
	),_
	select11(_
		text(Please choose 3 from these secondary skills.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Tech(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Tech Second Secondary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	),_
	select12(_
		text(Please choose 1 from these secondary skills.),_
		pointswanted(2),_
		itemswanted(1),_
		tagwith(Tech(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Tech Third Secondary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	),_
	select13(_
		text(Please choose 4 from these background skills.),_
		pointswanted(4),_
		itemswanted(4),_
		tagwith(Tech(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech First Secondary)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech Second Secondary)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech Third Secondary)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Tech Background)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
	),_
	select14(#list(QuirkSelection))

*******************************************************************************************************************
*******************************************************************************************************************

Trader (After the End), displaycost(150),_
	cat(Character Templates - After the End),_
	description(_
					You make a living by traveling from place to place, offering _
					your goods or services at each stop. Locals trade for safe travel _
					to their destination, for the equipment and provisions you _
					bring, for your stories and news, or even just for the pleasure _
					of your company. Because you interact with people so much, _
					you've come to excel at it, whether that means saying what they _
					wish to hear or judging if they have it in for you. Your constant _
					travels across the wasteland have honed your awareness of _
					environmental dangers as well, making you one of the few people _
					equally comfortable in civilized company or in the middle _
					of an irradiated crater. _
			\par \tab Customization options include Guide, Merchant, Orator, and Sweet-Talker. _
				),_
	page(ATE1:14),_
	noresync(yes),_
	usernotes(Customization Option: %traderskillsetslist%),_
	sets(_
		ST:DX=12,_
		ST:IQ=13,_
		ST:HT=11_
	),_
	adds(_
		%traderskillsetsaliaslist%_
	),_
	mergetags(%traderskillsetsalt3list%),_
	x(_
		#choiceList(_
			name(traderskillsets),_
			title(Skill Specialization),_
			text(Choose your specialization),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Guide",_
				"Merchant",_
				"Orator",_
				"Sweet-Talker" _
			),_
			aliaslist(_
				"SK:Merchant=8pts",_
				"SK:Merchant=12pts",_
				"SK:Merchant=8pts, SK:Public Speaking=4pts",_
				"SK:Merchant=8pts" _
			),_
			alt1list(_
				{#list(Trader Guide)},_
				{#list(Trader Merchant)},_
				{#list(Trader Orator)},_
				{#list(Trader Sweet-Talker)}_
			),_
			alt2list(_
				{#list(Trader Guide Second Primary Choice)},_
				{#list(Trader Merchant Primary Choice)},_
				{#list(Trader Orator Primary Choice)},_
				{#list(Trader Sweet-Talker Primary Choice)}_
			),_
			alt3list(_
					{_
						in "SK:Merchant" with "Trader(PrimarySkills)"_
					},_
					{_
						in "SK:Merchant" with "Trader(PrimarySkills)"_
					},_
					{_
						in "SK:Public Speaking" with "Trader(PrimarySkills)",_
						in "SK:Merchant" with "Trader(PrimarySkills)"_
					},_
					{_
						in "SK:Merchant" with "Trader(PrimarySkills)"_
					}_
			)_
		)_
	),_
	select1(#List(Languages)),_
	select2(_
		text(Please choose 15 points from these advantages.),_
		pointswanted(15),_
		itemswanted(atleast 1),_
		tagwith(Trader(Advantages)),_
		list(_
			#list(GMAdvantages),_
			#list(Trader First Advantages)_
		),_
	),_
	select3(_
		text(Please choose 20 points from these advantages.),_
		pointswanted(20),_
		itemswanted(atleast 1),_
		tagwith(Trader(Advantages)),_
		list(_
			#BuildSelectList(Advantages where Trader includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
			#list(GMAdvantages),_
			#list(Trader First Advantages),_
			AD:Extra ST #codes(upto 1, downto 1),_
			AD:Extra IQ #codes(upto 1, downto 1),_
			AD:Extra HT #codes(upto 1, downto 1),_
			AD:Extra RP #codes(upto 11, downto 1),_
			AD:Extra Basic Speed #codes(upto 1, downto 1),_
			AD:Absolute Direction,_
			PE:Alcohol Tolerance,_
			#newitem(_
				AD:Allies,_
				2/4/6,_
				levelnames(_
					Built on 50% Fairly often (roll of 9 or less),_
					Built on 50% Quite often (roll of 12 or less),_
					Built on 50% Almost all the time (roll of 15 or less)_
				),_
				x(#InputToTag("Please describe the nature of the Ally:", nameext, , "Ally")),_
				upto(3),_
				cat(Mundane, Social),_
				page(B36),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				)_
			),_
			AD:Common Sense,_
			AD:Danger Sense,_
			AD:Eidetic Memory,_
			AD:Photographic Memory,_
			AD:Fit #codes(upto 1, downto 1),_
			#newitem(AD:Gizmos, 5/10, page(B57), upto(3), cat(mundane, Mental)),_
			AD:Lightning Calculator #codes(upto 1, downto 1),_
			AD:Luck #codes(upto 1, downto 1),_
			AD:Night Vision #codes(upto 5, downto 1),_
			PE:No Hangover,_
			AD:Patron,_
			PE:Penetrating Voice,_
			#newitem(AD:Resistant to Disease, 3/5, levelnames(+3 to resist), page(B81), cat(Mundane, Physical), upto(2)),_
			AD:Serendipity #codes(upto 1, downto 1),_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Temperature Tolerance #codes(upto 3, downto 1),_
			AD:Trading Character Points for Money_
		),_
	),_
	select4(_
		text(Please choose -15 points from these disadvantages.),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		tagwith(Trader(Disadvantages)),_
		list(_
			#list(GMDisadvantages),_
			#list(Trader First Disadvantages)_
		),_
	),_
	select5(_
		text(Please choose -30 points from these disadvantages.),_
		pointswanted(-30),_
		itemswanted(atleast 1),_
		tagwith(Trader(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Trader includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Trader First Disadvantages),_
			DI:Reduced ST #codes(upto 1, downto 1),_
			DI:Reduced Basic Speed #codes(upto 1, downto 1),_
			DI:Combat Paralysis,_
			DI:Compulsive Carousing,_
			DI:Compulsive Gambling,_
			DI:Compulsive Lying,_
			DI:Curious,_
			DI:Extra Sleep,_
			DI:Impulsiveness,_
			DI:Jealousy,_
			DI:Lecherousness,_
			DI:Overconfidence,_
			DI:Overweight,_
			DI:Selfish,_
			#newitem(DI:Sense of Duty (Friends), -5, page(B153), cat(Mundane, Mental), conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")),_
			DI:Slow Riser,_
			DI:Xenophilia_
		)_
	),_
	select6(text(Please choose 2 primary skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader First Primary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	),_
	select7(text(Please choose 1 primary skill.),_
		pointswanted(4),_
		itemswanted(1),_
		tagwith(Trader(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Trader Second Primary)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
	),_
	select8(%traderskillsetsalt1list%),_
	select10(text(Please choose 3 secondary skills.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Trader(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trader First Secondary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	),_
	select11(text(Please choose 1 secondary skill.),_
		pointswanted(4),_
		itemswanted(1),_
		tagwith(Trader(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Trader Second Secondary)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
	),_
	select12(text(Please choose 2 secondary skills.),_
		pointswanted(8),_
		itemswanted(2),_
		tagwith(Trader(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Trader Second Secondary)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts))),_
			#buildlist(list(#list(Trader Third Secondary)), template(SK:%ListItem% #codes(upto 4pts, downto 4pts)))_
		)_
	),_
	select13(text(Please choose 6 background skills.),_
		pointswanted(6),_
		itemswanted(6),_
		tagwith(Trader(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(%traderskillsetsalt2list%), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Trader First Primary)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Trader Second Primary)), template(SK:%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Trader Background)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
	),_
	select14(#list(QuirkSelection))

*******************************************************************************************************************
*******************************************************************************************************************

Trooper (After the End), displaycost(150),_
	cat(Character Templates - After the End),_
	description(_
					As long as you have your firearm of choice by your side, you _
					could face Death himself - and you do on a regular basis (at least _
					metaphorically). You've mastered the art of the gun, and have _
					been given extensive field training to prepare you for the hazards _
					of the wasteland. The specifics depend greatly on the organization _
					that trained you; common choices include the mafia or a _
					similarly influential gang, whatever passes for the local law, a _
					private mercenary/guard/security company, or a military group _
					(either remnants of national armed forces or a new paramilitary _
					unit). Whether you're a free agent or still working for them, your _
					training serves you well in any situation. _
			\par \tab Customization options include Gangster, Marshal, Private Security, and Soldier. _
				),_
	page(ATE1:16),_
	noresync(yes),_
	usernotes(Customization Option: %trooperskillsetslist%),_
	sets(_
		ST:ST=11,_
		ST:DX=13,_
		ST:IQ=12,_
		ST:HT=11_
	),_
	adds(_
		SK:Fast-Draw (Ammo)=1pts,_
		SK:Stealth=2pts,_
		SK:Tactics=8pts,_
		SK:First Aid=1pts,_
		%trooperskillsetsaliaslist%_
	),_
	x(_
		#choiceList(_
			name(trooperskillsets),_
			title(Skill Specialization),_
			text(Choose your specialization),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Gangster",_
				"Marshal",_
				"Private Security",_
				"Soldier" _
			),_
			aliaslist(_
				"SK:Intimidation=4pts, SK:Streetwise=4pts, SK:Urban Survival=1pts",_
				"SK:Criminology=2pts, SK:Intelligence Analysis=4pts",_
				"SK:Body Language=1pts, SK:Observation=4pts",_
				"SK:Gesture=1pts, SK:Soldier=4pts" _
			),_
			alt1list(_
				{#list(Trooper Gangster)},_
				{#list(Trooper Marshal)},_
				{#list(Trooper Private Security)},_
				{#list(Trooper Soldier)}_
			)_
		)_
	),_
	select1(#List(Languages)),_
	select2(_
		text(Please choose 5 points from these advantages.),_
		pointswanted(5),_
		itemswanted(atleast 1),_
		tagwith(Trooper(Advantages)),_
		list(_
			#list(GMAdvantages),_
			#list(Trooper First Advantages)_
		),_
	),_
	select3(_
		text(Please choose 25 points from these advantages.),_
		pointswanted(25),_
		itemswanted(atleast 1),_
		tagwith(Trooper(Advantages)),_
		list(_
			#BuildSelectList(Advantages where Trooper includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
			#list(GMAdvantages),_
			#list(Trooper First Advantages),_
			AD:Extra ST #codes(upto 2, downto 1),_
			AD:Extra DX #codes(upto 1, downto 1),_
			AD:Extra IQ #codes(upto 1, downto 1),_
			AD:Extra HT #codes(upto 2, downto 1),_
			AD:Extra Will #codes(upto 2, downto 1),_
			AD:Extra Perception #codes(upto 2, downto 1),_
			AD:Extra RP #codes(upto 11, downto 1),_
			AD:Acute [sense],_
			PE:Alcohol Tolerance,_
			#newitem(_
				AD:Allies,_
				2/4/6,_
				levelnames(_
					Built on 50% Fairly often (roll of 9 or less),_
					Built on 50% Quite often (roll of 12 or less),_
					Built on 50% Almost all the time (roll of 15 or less)_
				),_
				x(#InputToTag("Please describe the nature of the Ally:", nameext, , "Ally")),_
				upto(3),_
				cat(Mundane, Social),_
				page(B36),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				)_
			),_
			AD:Combat Reflexes #codes(upto 1, downto 1),_
			AD:Common Sense,_
			AD:Danger Sense,_
			AD:Daredevil,_
			PE:Deep Sleeper,_
			AD:Damage Resistance #codes(upto 2, downto 1),_
			AD:Enhanced Dodge #codes(upto 1, downto 1),_
			AD:Fearlessness,_
			AD:Unfazeable,_
			AD:Fit #codes(upto 2, downto 1),_
			PE:Forgettable Face,_
			#newitem(AD:Gizmos, 5, page(B57), cat(mundane, Mental)),_
			AD:High Pain Threshold,_
			PE:Improvised Weapons,_
			AD:Intuition,_
			AD:Luck,_
			AD:Night Vision #codes(upto 5, downto 1),_
			PE:No Hangover,_
			AD:Patron,_
			AD:Peripheral Vision,_
			AD:Rapid Healing #codes(upto 2, downto 1),_
			#newitem(AD:Resistant to Disease, 3/5, levelnames(+3 to resist), page(B81), cat(Mundane, Physical), upto(2)),_
			#newitem(AD:Resistant to Poison (+3 to resist), 5, page(B81), cat(Mundane, Physical)),_
			AD:Temperature Tolerance #codes(upto 3, downto 1)_
		),_
	),_
	select4(_
		text(Please choose -20 points from these disadvantages.),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		tagwith(Trooper(Disadvantages)),_
		list(_
			#list(GMDisadvantages),_
			#list(Trooper First Disadvantages)_
		),_
	),_
	select5(_
		text(Please choose -25 points from these disadvantages.),_
		pointswanted(-25),_
		itemswanted(atleast 1),_
		tagwith(Trooper(Disadvantages)),_
		list(_
			#BuildSelectList(Disadvantages where Trooper includes "Disadvantages", template(#newitem(DI:_Increase/Modify %ListItem%, displaycost(varies), existing(DI:%ListItem%)) )),_
			#list(GMDisadvantages),_
			#list(Trooper First Disadvantages),_
			DI:Reduced Basic Speed #codes(upto 1, downto 1),_
			DI:Alcoholism,_
			DI:Bully,_
			DI:Callous,_
			DI:Chummy,_
			DI:Gregarious,_
			DI:Loner,_
			DI:Guilt Complex,_
			DI:Jealousy,_
			DI:Lecherousness,_
			DI:Nightmares,_
			DI:Oblivious,_
			DI:Odious Personal Habit,_
			DI:Stubbornness,_
			DI:Truthfulness,_
			DI:Wounded_
		)_
	),_
	select6(text(Please choose 1 primary skill.),_
		pointswanted(8),_
		itemswanted(1),_
		tagwith(Trooper(PrimarySkills)),_
		list(_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 8pts, downto 8pts))),_
			#buildlist(list(#list(Trooper First Primary)), template(SK:%ListItem% #codes(upto 8pts, downto 8pts)))_
		)_
	),_
	select7(%trooperskillsetsalt1list%),_
	select9(text(Please choose 2 secondary skills.),_
		pointswanted(4),_
		itemswanted(2),_
		tagwith(Trooper(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trooper First Secondary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	),_
	select10(text(Please choose 3 secondary skill.),_
		pointswanted(6),_
		itemswanted(3),_
		tagwith(Trooper(SecondarySkills)),_
		list(_
			#buildlist(list(#list(Trooper First Secondary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trooper Second Secondary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	),_
	select11(text(Please choose 1 secondary skill.),_
		pointswanted(2),_
		itemswanted(1),_
		tagwith(Trooper(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trooper Third Secondary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	),_
	select12(text(Please choose 4 background skills.),_
		pointswanted(4),_
		itemswanted(4),_
		tagwith(Trooper(BackgroundSkills)),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(Trooper Background)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
	),_
	select13(#list(QuirkSelection))



*******************************************************************************************************************
// [TEMPLATES]
<Character Templates, Character Templates - After the End, Character Templates - After the End - Experienced Lenses>
*******************************************************************************************************************
Doc - Experienced (After The End), 0, displaycost(+50),_
	description(An experienced Doc. You should take the base Doc (After The End) template before adding this lens to the character.),_
	page(ATE1:6),_
	needs(TE:Doc (After The End)),_
	sets(%DocLensAliasList%),_
	x(_
	#ChoiceList(_
					name(DocLens),_
					title(Doc - Experienced: Attribute),_
					text(Choose an attribute package:),_
					picksallowed(1),_
					method(bynumber),_
					list(_
						"+1 IQ and +1 DX",_
						"+2 IQ"_
					),_
				aliaslist(_
					"ST:IQ=ST:IQ+1, ST:DX=ST:DX+1",_
					"ST:IQ=ST:IQ+2"_
				)_
			)_
		),_
	select1(_
		text(Please choose 10 points from the following skills or advantages.),_
		pointswanted(10),_
		itemswanted(atleast 1),_
		multitype(yes),_
		list(_
				#BuildSelectList(Advantages where Doc includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
				#BuildCharItemList(Skills where Doc includes "PrimarySkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+10pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Body Language", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Detect Lies", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Diagnosis", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+4pts) ))_
				#BuildCharItemList(Skills where name includes "Diplomacy", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Hazardous Materials", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) ))_
				#BuildCharItemList(Skills where name includes "Interrogation", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Merchant", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Naturalst", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Pharmacy", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Physician", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+4pts) ))_
				#BuildCharItemList(Skills where name includes "Poisons", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Psychology", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Streetwise", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Surgery", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#BuildCharItemList(Skills where name includes "Veterinary", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),_
				#list(GMAdvantages),_
				SK:Body Language,_
				SK:Detect Lies,_
				SK:Diplomacy,_
				SK:Hazardous Materials (Biological),_
				SK:Hazardous Materials (Chemical),_
				SK:Hazardous Materials (Radioactive),_
				SK:Interrogation,_
				SK:Merchant,_
				SK:Naturalst,_
				SK:Pharmacy (Herbal),_
				SK:Pharmacy (Synthetic),_
				SK:Poisons,_
				SK:Psychology,_
				SK:Streetwise,_
				SK:Surgery,_
				SK:Veterinary,_
			#newitem(_
				AD:Allies,_
				2/4/6,_
				levelnames(_
					Built on 50% Fairly often (roll of 9 or less),_
					Built on 50% Quite often (roll of 12 or less),_
					Built on 50% Almost all the time (roll of 15 or less)_
				),_
				x(#InputToTag("Please describe the nature of the Ally:", nameext, , "Ally")),_
				upto(3),_
				cat(Mundane, Social),_
				page(B36),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				)_
			),_
			AD:Charisma #codes(upto 3, downto 1),_
			AD:Common Sense,_
			#newitem(_
				AD:Contact,_
				1/2/3,_
				displaycost(varies),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18_
				),_
				x(#InputToTag("Please describe the nature of the Contact:", nameext, , "Contact")),_
				upto(3),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Quite often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance)_
				)_
			),_
			AD:Eidetic Memory #codes(upto 2 downto 1),_
			AD:Extra Basic Move #codes(upto 1, downto 1),_
			AD:Extra Basic Speed #codes(upto 6, downto 1),_
			AD:Extra RP #codes(upto 11, downto 1),_
			AD:Extra ST #codes(upto 1, downto 1),_
			#newitem(_
				AD:Favor (Contact),_
				1/2/3/4,_
				displaycost(varies),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18,_
					Effective Skill 21_
				),_
				upto(4),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Usually Reliable,_
					*2,_
					shortname(Usually Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Fairly often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance) | Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			#newitem(_
				AD:Favor (Patron),_
				10/15/20/25/30,_
				displaycost(varies),_
				mods(Frequency of Appearance, Patron, Favor),_
				page(B72),_
				cat(Mundane, Social),_
				initmods(_
					Frequency: roll of  9 or less (Fairly often),_
					*1,_
					shortname(9 or less),_
					group(Frequency of Appearance)_
				| _
					Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			AD:Fearlessness,_
			#newitem(AD:Gizmos, 5/10, page(B57), upto(3), cat(mundane, Mental)),_
			AD:High Manual Dexterity #codes(upto 4, downto 1),_
			#newitem(AD:Higher Purpose (Heal others), 5, page(B59), cat(Supernatural, Mental)),_
			AD:Plant Empathy,_
			#newitem(_
				AD:Reputation (Skilled doctor),_
				5/10,_
				displaycost(2 or 5),_
				mods(Reputation Advantage),_
				page(B27),_
				upto(2),_
				cat(Mundane, Social, Influence),_
				initmods(_
					People Affected: Almost everyone in your game world,_
					*1,_
					shortname(Almost everyone),_
					group(Reputation)_
				| _
					Frequency of Recognition: Sometimes (roll of 10 or less),_
					*1/2,_
					shortname(Sometimes (10 or less)),_
					round(down),_
					group(Reputation)_
				),_
				conditional(_
					+1 to ST:Reaction,_
					+1 to SK:Indimidation when "your reputation counts",_
					-1 to SK:Intimidation when "your reputation works against you"_
				)_
			),_
			#newitem(AD:Resistant to Disease, 3/5/10, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)),_
			#newitem(AD:Resistant to Poison (+3 to resist), 5, page(B81), cat(Mundane, Physical)),_
			AD:Sensitive,_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Trading Character Points for Money_
		)_
	)

Hulk - Experienced (After the End), displaycost(+50),_
	description(An experienced Hulk. You should take the base Hulk (After The End) template before adding this lens to the character.),_
	page(ATE1:7),_
	needs(TE:Hulk (After The End)),_
	cat(Character Templates - After the End),_
	noresync(yes),_
	sets(_
		ST:ST=ST:ST+2,_
		ST:DX=ST:DX+1_
	),_
	x(_
		#choiceList(_
			name(hulksize),_
			title(Hulk Size),_
			text(Select the previously chosen size catagory.),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Normal sized",_
				"Gigantism"_
			),_
		aliaslist(_
				{#list(Hulk Normal Experienced Advantages)},_
				{#list(Hulk Gigantism Experienced Advantages)}_
			),_
			alt1list(_
						{AD:Extra ST, AD:Striking ST},_
						{_
							#newitem(AD:Extra ST, 10/20, displaycost(9/18), page(B14), mods(Extra ST, Size, No Fine Manipulators), initmods(Size, -10%, formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes), group(Size), page(B15) | Affects displayed ST score, +0%, shortname(Affects ST), gives(+Owner::Level to ST:ST), group(Extra ST), description(This modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)), description(The Extra ST advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)),_
							#newitem(AD:Striking ST, 5/10, displaycost(5/9), page(B89), mods(Striking ST, No Fine Manipulators, Size), initmods(Size, -10%, formula(-@if(ST:Size Modifier::score > 0 THEN ST:Size Modifier::score * 10 else 0)), forceformula(yes), group(Size), page(B15)), cat(Exotic, Physical), conditional(+1 to ST:ST))_
						}_
				)_
			)_
	),_
	select1(text(Please choose 10 points from the following skills or advantages.),_
		pointswanted(10),_
		itemswanted(atleast 1),_
		multitype(yes),_
		list(_
			#BuildSelectList(Advantages where Hulk includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
			#list(GMAdvantages),_
			%hulksizealt1list%,_
			#buildlist(list(#list(Hulk First Advantage List)), template(%ListItem%)),_
			AD:Extra Perception #codes(upto 2, down to 1),_
			AD:Extra Will #codes(upto 3, downto 1),_
			PE:Alcohol Tolerance,_
			#newitem(_
				AD:Allies,_
				2/4/6,_
				levelnames(_
					Built on 50% Fairly often (roll of 9 or less),_
					Built on 50% Quite often (roll of 12 or less),_
					Built on 50% Almost all the time (roll of 15 or less)_
				),_
				x(#InputToTag("Please describe the nature of the Ally:", nameext, , "Ally")),_
				upto(3),_
				cat(Mundane, Social),_
				page(B36),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				)_
			),_
			AD:Breath-Holding #codes(upto 1, downto 1),_
			AD:Enhanced Parry (bare hands) #codes(upto 1, downto 1),_
			AD:Enhanced Parry (%Melee Weapon%) #codes(upto 1, downto 1),_
			AD:Enhanced Parry (all parries) #codes(upto 1, downto 1),_
			#newitem(_
				AD:Favor (Contact),_
				1/2/3/4,_
				displaycost(varies),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18,_
					Effective Skill 21_
				),_
				upto(4),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Usually Reliable,_
					*2,_
					shortname(Usually Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Fairly often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance) | Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			#newitem(_
				AD:Favor (Patron),_
				10/15/20/25/30,_
				displaycost(varies),_
				mods(Frequency of Appearance, Patron, Favor),_
				page(B72),_
				cat(Mundane, Social),_
				initmods(_
					Frequency: roll of  9 or less (Fairly often),_
					*1,_
					shortname(9 or less),_
					group(Frequency of Appearance)_
				| _
					Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			AD:Fearlessness,_
			AD:Fit #codes(upto 1, downto 1),_
			PE:Hand Cannon,_
			AD:Hard to Kill,_
			AD:Hard to Subdue,_
			PE:Improvised Weapons,_
			AD:Less Sleep #codes(upto 4, downto 1),_
			AD:Night Vision #codes(upto 5, downto 1),_
			PE:Off-Hand Weapon Training,_
			AD:Ambidexterity,_
			PE:Quick-Reload (Belt),_
			PE:Quick-Reload (Breechloader),_
			PE:Quick-Reload (Detachable Magazine),_
			PE:Quick-Reload (Internal Magazine),_
			PE:Quick-Reload (Revolver),_
			PE:Quick-Reload (Muzzleloader),_
			AD:Rapid Healing,_
			#newitem(AD:Resistant to Disease, 3/5/10, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)),_
			#newitem(AD:Resistant to Poison (+3 to resist), 5, page(B81), cat(Mundane, Physical)),_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Temperature Tolerance #codes(upto 3, downto 1),_
			AD:Trading Character Points for Money,_
			AD:Damage Resistance #codes(upto 2, downto 1),_
			AD:Extra Hit Points #codes(upto 4, downto 1),_
			AD:Extra HT #codes(upto 1, downto 1),_
			AD:Extra RP #codes(upto 14, downto 1),_
			AD:High Pain Threshold,_
			PE:Penetrating Voice,_
			AD:Recovery_
		)_
	%hulksizealiaslist%)

Hunter - Experienced (After the End), displaycost(+50),_
	description(An experienced Hunter. You should take the base Hunter (After The End) template before adding this lens to the character.),_
	page(ATE1:9),_
	needs(TE:Hunter (After The End)),_
	cat(Character Templates - After the End),_
	noresync(yes),_
	sets(_
		ST:DX=ST:DX+1,_
		ST:IQ=ST:IQ+1_
	),_
	select1(_
		text(Please add 10 points to add or improve any Primary or Secondary Skills or Advantages.),_
		pointswanted(10),_
		itemswanted(atleast 1),_
		multitype(yes),_
		tagwith(Hunter(PrimarySkills, Advantages)),_
		list(_
			#BuildSelectList(Advantages where Hunter includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
			#BuildCharItemList(Skills where Hunter includes "PrimarySkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+10pts, downto %points+2pts) )),_
			#BuildCharItemList(Skills where Hunter includes "SecondarySkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+10pts, downto %points+2pts) )),_
			#list(GMAdvantages),_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 1pts))),_
			AD:Extra RP #codes(upto 12, downto 1),_
			#buildlist(list(#list(Hunter First Skill)), template(SK:%ListItem% #codes(upto 8pts))),_
			#buildlist(list(#list(Hunter Second Skill)), template(SK:%ListItem% #codes(upto 8pts))),_
			#buildlist(list(#list(Hunter Survival List)), template(SK:%ListItem% #codes(upto 8pts))),_
			#buildlist(list(#list(Hunter Sojourner First)), template(SK:%ListItem% #codes(upto 8pts))),_
			#buildlist(list(#list(Hunter Survivor First)), template(SK:%ListItem% #codes(upto 8pts))),_
			#list(Hunter First Advantage List),_
			AD:Extra Basic Move #codes(upto 2, downto 1),_
			AD:Absolute Direction,_
			AD:Acute [sense],_
			AD:Animal Empathy,_
			AD:Animal Friend #codes(upto 4, downto 1),_
			AD:Breath-Holding #codes(upto 1, downto 1),_
			AD:Common Sense,_
			PE:Deep Sleeper,_
			AD:Damage Resistance #codes(upto 2, downto 1),_
			#newitem(_
				AD:Favor (Contact),_
				1/2/3/4,_
				displaycost(varies),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18,_
					Effective Skill 21_
				),_
				upto(4),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Usually Reliable,_
					*2,_
					shortname(Usually Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Fairly often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance) | Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			#newitem(_
				AD:Favor (Patron),_
				10/15/20/25/30,_
				displaycost(varies),_
				mods(Frequency of Appearance, Patron, Favor),_
				page(B72),_
				cat(Mundane, Social),_
				initmods(_
					Frequency: roll of  9 or less (Fairly often),_
					*1,_
					shortname(9 or less),_
					group(Frequency of Appearance)_
				| _
					Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			AD:Hard to Kill #codes(upto 3, downto 1),_
			AD:Hard to Subdue #codes(upto 3, downto 1),_
			AD:High Pain Threshold,_
			PE:Improvised Weapons,_
			AD:Less Sleep #codes(upto 4, downto 1),_
			AD:Night Vision #codes(upto 9, downto 1),_
			AD:Plant Empathy,_
			AD:Rapid Healing #codes(upto 2, downto 1),_
			#newitem(AD:Resistant to Disease, 3/5/10, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)),_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Single-Minded,_
			AD:Temperature Tolerance #codes(upto 3, downto 1),_
			AD:Trading Character Points for Money,_
			SK:Boating (Large Powerboat) #codes(upto 8pts),_
			SK:Boating (Motorboat) #codes(upto 8pts),_
			SK:Boating (Sailboat) #codes(upto 8pts),_
			SK:Boating (Unpowered) #codes(upto 8pts),_
			SK:Driving (Automobile) #codes(upto 8pts),_
			SK:Driving (Construction Equipment) #codes(upto 8pts),_
			SK:Driving (Halftrack) #codes(upto 8pts),_
			SK:Driving (Heavy Wheeled) #codes(upto 8pts),_
			SK:Driving (Hovercraft) #codes(upto 8pts),_
			SK:Driving (Locomotive) #codes(upto 8pts),_
			SK:Driving (Mecha) #codes(upto 8pts),_
			SK:Driving (Motorcycle) #codes(upto 8pts),_
			SK:Driving (Tracked) #codes(upto 8pts),_
			SK:Riding #codes(upto 8pts),_
			SK:Acrobatics #codes(upto 8pts),_
			SK:Animal Handling #codes(upto 8pts),_
			SK:Armoury (Missile Weapons) #codes(upto 8pts),_
			SK:Armoury (Small Arms) #codes(upto 8pts),_
			#newitem(SK:Disguise (Animals), IQ/A, tl(0-12), default(IQ - 5, SK:Makeup - 3), page(B187), cat(_General, Criminal/Street, Spy)) #codes(upto 8pts),_
			#newitem(SK:Professional Skill (Forester), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge)) #codes(upto 8pts),_
			SK:Prospecting #codes(upto 8pts),_
			SK:Weather Sense #codes(upto 8pts),_
			SK:Mimicry (Animal Sounds) #codes(upto 8pts),_
			SK:Mimicry (Bird Calls) #codes(upto 8pts)_
		)_
	)

Nomad - Experienced (After the End), displaycost(+50),_
	description(An experienced Nomad. You should take the base Nomad (After The End) template before adding this lens to the character.),_
	page(ATE1:10),_
	needs(TE:Nomad (After the End)),_
	cat(Character Templates - After the End),_
	noresync(yes),_
	sets(%NomadLensAliasList%),_
	x(_
		#ChoiceList(_
					name(NomadLens),_
					title(Nomad - Experienced: Attribute),_
					text(Choose an attribute package:),_
					picksallowed(1),_
					method(bynumber),_
					list(_
						"+1 IQ and +1 DX",_
						"+2 DX"_
					),_
				aliaslist(_
					"ST:IQ=ST:IQ+1, ST:DX=ST:DX+1",_
					"ST:DX=ST:DX+2"_
				)_
			),_
		#choiceList(_
			name(nomadskillsets),_
			title(Skill Specialization),_
			text(Choose your specialization),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Rider",_
				"Driver"_
			),_
		aliaslist(_
					{_
						SK:Riding #codes(upto 8pts),_
						SK:Teamster #codes(upto 8pts),_
						SK:Riding #codes(upto 8pts),_
						SK:Animal Handling #codes(upto 8pts),_
						SK:Packing #codes(upto 8pts),_
						SK:Teamster #codes(upto 8pts),_
						#newitem(SK:Disguise (Animals), IQ/A, tl(0-12), default(IQ - 5, SK:Makeup - 3), page(B187), cat(_General, Criminal/Street, Spy)) #codes(upto 8pts),_
						SK:Weather Sense #codes(upto 8pts),_
						SK:Mimicry (Animal Sounds) #codes(upto 8pts),_
						SK:Naturalist #codes(upto 8pts)_
					},_
					{_
						SK:Boating (Large Powerboat) #codes(upto 8pts),_
						SK:Boating (Motorboat) #codes(upto 8pts),_
						SK:Boating (Sailboat) #codes(upto 8pts),_
						SK:Driving (Automobile) #codes(upto 8pts),_
						SK:Driving (Halftrack) #codes(upto 8pts),_
						SK:Driving (Heavy Wheeled) #codes(upto 8pts),_
						SK:Driving (Motorcycle) #codes(upto 8pts),_
						SK:Driving (Tracked) #codes(upto 8pts),_
						SK:Piloting (Autogyro) #codes(upto 8pts),_
						SK:Piloting (Glider) #codes(upto 8pts),_
						SK:Piloting (Helicopter) #codes(upto 8pts),_
						SK:Piloting (Light Airplane) #codes(upto 8pts),_
						SK:Piloting (Lighter-Than-Air) #codes(upto 8pts),_
						SK:Piloting (Ultralight) #codes(upto 8pts),_
						SK:Artillery (Bombs) #codes(upto 8pts),_
						SK:Artillery (Catapult) #codes(upto 8pts),_
						SK:Electronics Repair (Communications) #codes(upto 8pts),_
						SK:Electronics Repair (Sensors) #codes(upto 8pts),_
						SK:Freight Handling #codes(upto 8pts),_
						SK:Mechanic ([Type]) #codes(upto 8pts),_
						#newitem(SK:Professional Skill (Forester), IQ/A, default(IQ - 5), page(B215), cat(_General, Knowledge)) #codes(upto 8pts),_
						SK:Shadowing #codes(upto 8pts),_
						SK:Shiphandling (Airship) #codes(upto 8pts),_
						SK:Shiphandling (Ship) #codes(upto 8pts)_
					}_
				)_
			)_
		),_
	select1(_
		text(Spend 8 points to add or improve any Primary or Secondary skills.),_
		pointswanted(8),_
		itemswanted(atleast 1),_
		tagwith(Nomad(PrimarySkills)),_
		list(_
			#BuildCharItemList(Skills where Nomad includes "PrimarySkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto  %points+8pts, downto %points+1pts) )),_
			#BuildCharItemList(Skills where Nomad includes "SecondarySkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto  %points+8pts, downto %points+1pts) )),_
			%nomadskillsetsaliaslist%,_
			#buildlist(list(#list(Nomad Skills)), template(SK:%ListItem% #codes(upto 8pts))),_
			#buildlist(list(#list(GMPrimarySkills)), template(%ListItem% #codes(upto 1pts))),_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Navigation (Air) #codes(upto 8pts),_
			SK:Navigation (Land) #codes(upto 8pts),_
			SK:Navigation (Sea) #codes(upto 8pts),_
			SK:Area Knowledge ([Area]) #codes(upto 8pts),_
			SK:Cartography #codes(upto 8pts),_
			SK:Scrounging #codes(upto 8pts),_
			SK:Survival (Arctic) #codes(upto 8pts),_
			SK:Survival (Desert) #codes(upto 8pts),_
			SK:Survival (Island/Beach) #codes(upto 8pts),_
			SK:Survival (Jungle) #codes(upto 8pts),_
			SK:Survival (Mountain) #codes(upto 8pts),_
			SK:Survival (Plains) #codes(upto 8pts),_
			SK:Survival (Radioactive Wasteland) #codes(upto 8pts),_
			SK:Survival (Swampland) #codes(upto 8pts),_
			SK:Survival (Woodlands) #codes(upto 8pts),_
			SK:Survival #codes(upto 8pts),_
			SK:Brawling #codes(upto 8pts),_
			SK:Knife #codes(upto 8pts),_
			SK:Broadsword #codes(upto 8pts),_
			SK:Climbing #codes(upto 8pts),_
			SK:Shortsword #codes(upto 8pts),_
			SK:Staff #codes(upto 8pts),_
			SK:Spear #codes(upto 8pts),_
			SK:Stealth #codes(upto 8pts),_
			SK:Wrestling #codes(upto 8pts),_
			SK:Acrobatics #codes(upto 8pts)_
		)_
	),_
	select2(_
		text(Please add or improve up to 2 background skills.),_
		pointswanted(2),_
		itemswanted(atleast 1),_
		tagwith(Nomad(BackgroundSkills)),_
		list(_
			#BuildCharItemList(Skills where Nomad includes "BackgroundSkills", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto  %points+2pts, downto %points+1pts) )),_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 2pts))),_
			SK:Bicycling #codes(upto 2pts),_
			SK:Fast-Draw (Arrow) #codes(upto 2pts),_
			SK:Fast-Draw (Ammo) #codes(upto 2pts),_
			SK:Fast-Draw (Long Arm) #codes(upto 2pts),_
			SK:Fast-Draw (Pistol) #codes(upto 2pts),_
			SK:Knot-Tying #codes(upto 2pts),_
			SK:Battlesuit #codes(upto 2pts),_
			SK:NBC Suit #codes(upto 2pts),_
			SK:Airshipman #codes(upto 2pts),_
			SK:Camouflage #codes(upto 2pts),_
			SK:Current Affairs (Regional) #codes(upto 2pts),_
			SK:First Aid #codes(upto 2pts),_
			SK:Seamanship #codes(upto 2pts),_
			SK:Armoury (Heavy Weapons) #codes(upto 2pts),_
			SK:Armoury (Vehicular Armor) #codes(upto 2pts),_
			SK:Electronics Repair (Communications) #codes(upto 2pts),_
			SK:Electronics Repair (Sensors) #codes(upto 2pts),_
			SK:Fast-Talk #codes(upto 2pts),_
			SK:Leadership #codes(upto 2pts),_
			SK:Lockpicking #codes(upto 2pts),_
			SK:Merchant #codes(upto 2pts),_
			SK:Navigation (Air) #codes(upto 2pts),_
			SK:Navigation (Land) #codes(upto 2pts),_
			SK:Navigation (Sea) #codes(upto 2pts),_
			SK:Smuggling #codes(upto 2pts),_
			SK:Streetwise #codes(upto 2pts),_
			SK:Anthropology #codes(upto 2pts),_
			SK:Computer Programming #codes(upto 2pts),_
			SK:Diplomacy #codes(upto 2pts),_
			SK:Expert Skill (Robotics) #codes(upto 2pts),_
			SK:Carousing #codes(upto 2pts),_
			SK:Swimming #codes(upto 2pts),_
			SK:Intimidation #codes(upto 2pts),_
			SK:Urban Survival #codes(upto 2pts)_
		)_
	)

Scavenger - Experienced (After the End), displaycost(+50),_
	description(An experienced Scavenger. You should take the base Scavenger (After The End) template before adding this lens to the character.),_
	page(ATE1:12),_
	noresync(yes),_
	sets(_
		ST:IQ=ST:IQ+1_
	),_
	needs(_
			TE:Scavenger (After the End),_
			SK:Anthropology=4pts,_
			SK:Merchant=2pts_
	),_
	select1(_
		text(Please choose 20 points from these advantages.),_
		pointswanted(20),_
		itemswanted(atleast 1),_
		tagwith(Scavenger(Advantages)),_
		list(_
			#BuildSelectList(Advantages where Scavenger includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
			#list(GMAdvantages),_
			AD:Extra ST #codes(upto 3, downto 1),_
			AD:Extra DX #codes(upto 1, downto 1),_
			AD:Extra IQ #codes(upto 1, downto 1),_
			AD:Extra HT #codes(upto 1, downto 1),_
			AD:Extra Perception #codes(upto 2, downto 1),_
			AD:Extra RP #codes(upto 11, downto 1),_
			AD:Extra Basic Speed #codes(upto 4, downto 1),_
			AD:Acute [sense],_
			AD:Breath-Holding #codes(upto 1, downto 1),_
			AD:Catfall,_
			AD:Combat Reflexes #codes(upto 1, downto 1),_
			AD:Contact Group #codes(upto 3, downto 1),_
			AD:Craftiness #codes(upto 4, downto 1),_
			AD:Danger Sense,_
			PE:Deep Sleeper,_
			AD:Damage Resistance #codes(upto 1, downto 1),_
			AD:Eidetic Memory #codes(upto 1, downto 1),_
			#newitem(_
				AD:Favor (Contact),_
				1/2/3/4,_
				displaycost(varies),_
				levelnames(_
					Effective Skill 12,_
					Effective Skill 15,_
					Effective Skill 18,_
					Effective Skill 21_
				),_
				upto(4),_
				cat(Mundane, Social),_
				mods(Contact, Frequency of Appearance, Reliability, Favor),_
				page(B44),_
				initmods(_
					Reliability: Usually Reliable,_
					*2,_
					shortname(Usually Reliable),_
					group(Reliability)_
				| _
					Frequency: roll of  12 or less (Fairly often),_
					*2,_
					shortname(12 or less),_
					group(Frequency of Appearance) | Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			#newitem(_
				AD:Favor (Patron),_
				10/15/20/25/30,_
				displaycost(varies),_
				mods(Frequency of Appearance, Patron, Favor),_
				page(B72),_
				cat(Mundane, Social),_
				initmods(_
					Frequency: roll of  9 or less (Fairly often),_
					*1,_
					shortname(9 or less),_
					group(Frequency of Appearance)_
				| _
					Favor,_
					*1/5,_
					group(Patron)_
				)_
			),_
			AD:Enhanced Dodge #codes(upto 1, downto 1),_
			AD:Flexibility,_
			AD:Double-Jointed,_
			PE:Forgettable Face,_
			#newitem(AD:Gizmos, 5/10, page(B57), upto(3), cat(mundane, Mental)) #codes(upto 3, downto 1),_
			AD:Hard to Kill #codes(upto 3, downto 1),_
			AD:Hard to Subdue #codes(upto 3, downto 1),_
			AD:High Manual Dexterity #codes(upto 4, downto 1),_
			PE:Honest Face,_
			AD:Intuition,_
			AD:Less Sleep #codes(upto 4, downto 1),_
			AD:Lifting ST #codes(upto 3, downto 1),_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Night Vision #codes(upto 9, downto 1),_
			AD:Perfect Balance,_
			AD:Pitiable,_
			AD:Rapid Healing #codes(upto 2, downto 1),_
			#newitem(AD:Resistant to Disease, 3/5/10, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)),_
			#newitem(AD:Resistant to Poison (+3 to resist), 5, page(B81), cat(Mundane, Physical)),_
			AD:Serendipity #codes(upto 2, downto 1),_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Trading Character Points for Money_
		)_
	),_
	select2(_
		text(Please choose 1 secondary skills.),_
		pointswanted(2),_
		itemswanted(1),_
		tagwith(Scavenger(SecondarySkills)),_
		list(_
			SK:Area Knowledge ([Area]) #codes(upto 2pts, downto 2pts),_
			SK:Current Affairs ([Regional]) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Arctic) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Desert) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Island/Beach) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Jungle) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Mountain) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Plains) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Radioactive Wasteland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Swampland) #codes(upto 2pts, downto 2pts),_
			SK:Survival (Woodlands) #codes(upto 2pts, downto 2pts),_
			SK:Survival #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select3(_
		text(Please choose 1 secondary skills.),_
		pointswanted(2),_
		tagwith(Scavenger(SecondarySkills)),_
		itemswanted(1),_
		list(_
			SK:Beam Weapons (Pistol) #codes(upto 2pts, downto 2pts),_
			SK:Beam Weapons (Projector) #codes(upto 2pts, downto 2pts),_
			SK:Beam Weapons (Rifle) #codes(upto 2pts, downto 2pts),_
			SK:Brawling #codes(upto 2pts, downto 2pts),_
			SK:Crossbow #codes(upto 2pts, downto 2pts),_
			SK:Guns (Grenade Launcher) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Gyroc) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Light Anti-Armor Weapon) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Light Machine Gun) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Musket) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Pistol) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Rifle) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Shotgun) #codes(upto 2pts, downto 2pts),_
			SK:Guns (Submachine Gun) #codes(upto 2pts, downto 2pts),_
			SK:Knife #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Axe/Mace) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Dart) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Harpoon) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Knife) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Shuriken) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Spear) #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Stick) #codes(upto 2pts, downto 2pts),_
			SK:Axe/Mace #codes(upto 2pts, downto 2pts),_
			SK:Boxing #codes(upto 2pts, downto 2pts),_
			SK:Bow #codes(upto 2pts, downto 2pts),_
			SK:Broadsword #codes(upto 2pts, downto 2pts),_
			SK:Shortsword #codes(upto 2pts, downto 2pts),_
			SK:Staff #codes(upto 2pts, downto 2pts),_
			SK:Throwing #codes(upto 2pts, downto 2pts),_
			SK:Wrestling #codes(upto 2pts, downto 2pts),_
			SK:Blowpipe #codes(upto 2pts, downto 2pts)_
			)_
		),_
	select4(_
			text(Please choose 3 from these background skills.),_
			pointswanted(3),_
			itemswanted(3),_
			tagwith(Scavenger(BackgroundSkills)),_
			list(_
				#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
				SK:Acrobatics #codes(upto 1pts),_
				SK:Architecture #codes(upto 1pts),_
				SK:Climbing #codes(upto 1pts),_
				SK:Escape #codes(upto 1pts),_
				SK:Filch #codes(upto 1pts),_
				SK:Forced Entry #codes(upto 1pts),_
				SK:Holdout #codes(upto 1pts),_
				SK:Jumping #codes(upto 1pts),_
				SK:Lockpicking #codes(upto 1pts),_
				SK:Pickpocket #codes(upto 1pts),_
				SK:Running #codes(upto 1pts),_
				SK:Traps #codes(upto 1pts),_
				#buildlist(list(#list(Scavenger Ghost Primary)), template(SK:%ListItem% #codes(upto 1pts))),_
				#buildlist(list(#list(Scavenger Thief Primary)), template(SK:%ListItem% #codes(upto 1pts))),_
				#buildlist(list(#list(Scavenger Background)), template(SK:%ListItem% #codes(upto 1pts)))_
		)_
	)

Tech - Experienced (After the End), displaycost(+50),_
	description(An experienced Tech. You should take the base Tech (After The End) template before adding this lens to the character.),_
	page(ATE1:13),_
	cat(Character Templates - After the End),_
	noresync(yes),_
	sets(%TechLensAliasList%),_
	x(_
	#ChoiceList(_
					name(TechLens),_
					title(Tech - Experienced: Attribute),_
					text(Choose an attribute package:),_
					picksallowed(1),_
					method(bynumber),_
					list(_
						"+1 IQ",_
						"+1 DX"_
					),_
				aliaslist(_
					"ST:IQ=ST:IQ+1",_
					"ST:DX=ST:DX+1"_
				)_
			)_
		),_
	select1(_
			text(Please choose 30 points from these advantages.),_
			pointswanted(30),_
			itemswanted(atleast 1),_
			tagwith(Tech(Advantages)),_
			list(_
				#BuildCharItemList(Advantages where Tech includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
				#list(GMAdvantages),_
				#list(Tech First Advantages),_
				#list(Tech Second Advantages)_
			)_
	)

Trader - Experienced (After the End), displaycost(+50),_
	description(An experienced Trader. You should take the base Trader (After The End) template before adding this lens to the character.),_
	page(ATE1:15),_
	cat(Character Templates - After the End),_
	noresync(yes),_
	usernotes(Customization Option: %traderskillsetslist%),_
	sets(_
		%traderskillsetsalt2list%_
		),_
	needs(_
		TE:Trader (After the End)_
		),_
	adds(_
		%traderskillsetsaliaslist%_
	),_
	x(_
		#choiceList(_
			name(traderskillsets),_
			title(Skill Specialization),_
			text(Choose another specialization, taking care not to choose the one you already chose for the main template.),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Guide",_
				"Merchant",_
				"Orator",_
				"Sweet-Talker" _
			),_
			aliaslist(_
				"",_
				"",_
				"SK:Public Speaking=4pts",_
				""_
			),_
			alt1list(_
				{#list(Trader Guide Experienced)},_
				{#list(Trader Merchant Experienced)},_
				{#list(Trader Orator Experienced)},_
				{#list(Trader Sweet-Talker Experienced)}_
			),_
			alt2list(_
				{ST:IQ=ST:IQ+1},_
				{ST:IQ=ST:IQ+1, SK:Merchant=SK:Merchant::level+1},_
				{ST:IQ=ST:IQ+1},_
				{ST:IQ=ST:IQ+1}_
			)_
		)_
	),_
	select1(_
		text(Please choose another 20 points from these advantages.),_
		pointswanted(20),_
		itemswanted(atleast 1),_
		tagwith(Trader(Advantages)),_
		list(_
			#BuildSelectList(Advantages where Trader includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
			#list(GMAdvantages),_
			#list(Trader First Advantages),_
			AD:Extra ST #codes(upto 1, downto 1),_
			AD:Extra IQ #codes(upto 1, downto 1),_
			AD:Extra HT #codes(upto 1, downto 1),_
			AD:Extra RP #codes(upto 11, downto 1),_
			AD:Extra Basic Speed #codes(upto 1, downto 1),_
			AD:Absolute Direction,_
			PE:Alcohol Tolerance,_
			#newitem(_
				AD:Allies,_
				2/4/6,_
				levelnames(_
					Built on 50% Fairly often (roll of 9 or less),_
					Built on 50% Quite often (roll of 12 or less),_
					Built on 50% Almost all the time (roll of 15 or less)_
				),_
				x(#InputToTag("Please describe the nature of the Ally:", nameext, , "Ally")),_
				upto(3),_
				cat(Mundane, Social),_
				page(B36),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				)_
			),_
			AD:Common Sense,_
			AD:Danger Sense,_
			AD:Eidetic Memory,_
			AD:Photographic Memory,_
			AD:Fit #codes(upto 1, downto 1),_
			#newitem(AD:Gizmos, 5/10, page(B57), upto(3), cat(mundane, Mental)),_
			AD:Lightning Calculator #codes(upto 1, downto 1),_
			AD:Luck #codes(upto 1, downto 1),_
			AD:Night Vision #codes(upto 5, downto 1),_
			PE:No Hangover,_
			AD:Patron,_
			PE:Penetrating Voice,_
			#newitem(AD:Resistant to Disease, 3/5, levelnames(+3 to resist), page(B81), cat(Mundane, Physical), upto(2)),_
			AD:Serendipity #codes(upto 1, downto 1),_
			#newitem(AD:Signature Gear, 1/2, page(ATE:28), cat(Mundane, Physical)),_
			AD:Temperature Tolerance #codes(upto 3, downto 1),_
			AD:Trading Character Points for Money_
		),_
	),_
	select2(%traderskillsetsalt1list%)

Trooper - Experienced (After the End), displaycost(+50),_
	description(An experienced Trooper. You should take the base Trooper (After The End) template before adding this lens to the character.),_
	page(ATE1:17),_
	cat(Character Templates - After the End),_
	noresync(yes),_
	sets(_
			ST:IQ=ST:IQ+1_
		),_
	needs(_
			TE:Trooper (After the End),_
			SK:Fast-Draw (Ammo) = 2pts,_
			SK:First Aid = 2pts_
		),_
	select1(_
		text(Please choose 20 points from these advantages.),_
		pointswanted(20),_
		itemswanted(atleast 1),_
		tagwith(Trooper(Advantages)),_
		list(_
			#BuildSelectList(Advantages where Trooper includes "Advantages", template(#newitem(AD:_Increase/Modify %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),_
			#list(GMAdvantages),_
			#list(Trooper First Advantages),_
			AD:Extra ST #codes(upto 2, downto 1),_
			AD:Extra DX #codes(upto 1, downto 1),_
			AD:Extra IQ #codes(upto 1, downto 1),_
			AD:Extra HT #codes(upto 2, downto 1),_
			AD:Extra Will #codes(upto 2, downto 1),_
			AD:Extra Perception #codes(upto 2, downto 1),_
			AD:Extra RP #codes(upto 11, downto 1),_
			AD:Acute [sense],_
			PE:Alcohol Tolerance,_
			#newitem(_
				AD:Allies,_
				2/4/6,_
				levelnames(_
					Built on 50% Fairly often (roll of 9 or less),_
					Built on 50% Quite often (roll of 12 or less),_
					Built on 50% Almost all the time (roll of 15 or less)_
				),_
				x(#InputToTag("Please describe the nature of the Ally:", nameext, , "Ally")),_
				upto(3),_
				cat(Mundane, Social),_
				page(B36),_
				initmods(_
					Reliability: Somewhat Reliable,_
					*1,_
					shortname(Somewhat Reliable),_
					group(Reliability)_
				)_
			),_
			AD:Combat Reflexes #codes(upto 1, downto 1),_
			AD:Common Sense,_
			AD:Danger Sense,_
			AD:Daredevil,_
			PE:Deep Sleeper,_
			AD:Damage Resistance #codes(upto 2, downto 1),_
			AD:Enhanced Dodge #codes(upto 1, downto 1),_
			AD:Fearlessness,_
			AD:Unfazeable,_
			AD:Fit #codes(upto 2, downto 1),_
			PE:Forgettable Face,_
			#newitem(AD:Gizmos, 5, page(B57), cat(mundane, Mental)),_
			AD:High Pain Threshold,_
			PE:Improvised Weapons,_
			AD:Intuition,_
			AD:Luck,_
			AD:Night Vision #codes(upto 5, downto 1),_
			PE:No Hangover,_
			AD:Patron,_
			AD:Peripheral Vision,_
			AD:Rapid Healing #codes(upto 2, downto 1),_
			#newitem(AD:Resistant to Disease, 3/5, levelnames(+3 to resist), page(B81), cat(Mundane, Physical), upto(2)),_
			#newitem(AD:Resistant to Poison (+3 to resist), 5, page(B81), cat(Mundane, Physical)),_
			AD:Temperature Tolerance #codes(upto 3, downto 1)_
		),_
	),_
	select2(text(Please choose 4 secondary skill.),_
		pointswanted(8),_
		itemswanted(4),_
		tagwith(Trooper(SecondarySkills)),_
		list(_
			#buildlist(list(#list(GMSecondarySkills)), template(%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trooper First Secondary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trooper Second Secondary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts))),_
			#buildlist(list(#list(Trooper Third Secondary)), template(SK:%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	)

*******************************************************************************************************************
<Character Templates, Character Templates - After the End, Character Templates - After the End - Lenses>
*******************************************************************************************************************
Blessed (After The End), displaycost(+50), cost(0), gives(),_
	page(ATE1:17),_
	description(_
				You have always been amazingly lucky. You survive situations _
				that should kill you, you fire the shot that happens to take _
				out the enemy leader, and so on. This doesn’t imply actual _
				supernatural or divine intervention – though it’s entirely possible _
				you believe this! Delusion ("I am God’s favorite!") makes an _
				excellent quirk._
				),_
	noresync(yes),_
		select1(_
				text(Please select one of the following:),_
				pointswanted(5),_
				itemswanted(1),_
			list(_
					#newitem(AD:Reputation (Good-luck charm), 5/10, displaycost(5), init(1), mods(Reputation Advantage), page(B27), upto(4), cat(Mundane, Social, Influence), initmods(People Affected: Almost everyone in your game world, *1, shortname(Almost everyone), group(Reputation Advantage), page(B27), round(down)|Frequency of Recognition: Occasionally (roll of 7 or less), *1/3, shortname(7 or less), group(Reputation Advantage), page(B28), round(down)), conditional(+1 to ST:Reaction, +1 to SK:Indimidation when "your reputation counts", -1 to SK:Intimidation when "your reputation works against you")) #codes(upto 1, downto 1),_
					AD:Extra Perception #codes(upto 1, downto 1),_
					AD:Gizmo #codes(upto 1, downto 1)_
				)_
			),_
		select2(_
				text(Please select 45 points in the following:),_
				pointswanted(45),_
				itemswanted(atleast 1),_
			list(_
					AD:Daredevil,_
					AD:Serendipity #codes(upto 3, downto 1),_
					AD:Luck #codes(upto 2, downto 1),_
					#newitem(AD:Extraordinary Luck, 15/30, existing(AD:Luck)) #codes(upto 2, downto 2) _
				)_
			)

Fast (After the End), displaycost(+50), cost(0), gives(),_
	page(ATE1:18),_
	description(_
				Your reflexes are like lightning, and you move like an action _
				hero. Others have a hard time getting the jump on you. You _
				aren’t literally faster than a bullet, but if you can see the _
				shooter, you’re rarely standing in the same spot you were when _
				he decided to pull the trigger._
				),_
	noresync(yes),_
		select1(_
				text(Please select 50 points from:),_
				pointswanted(50),_
				itemswanted(atleast 1),_
			list(_
					#newitem(AD:Extra Attack (Multi-Strike), 25/50, displaycost(30/60/+), page(B54), cat(Mundane, Physical), initmods(Multi-Strike, +20%)) #codes(upto 1, downto 1),_
					AD:Extra DX #codes(upto 2, downto 1),_
					AD:Extra Basic Speed #codes(upto 8, downto 1),_
					AD:Extra Basic Move #codes(upto 2, downto 1),_
					AD:Combat Reflexes #codes(upto 1, downto 1),_
					AD:Danger Sense,_
					AD:Enhanced Dodge #codes(upto 1, downto 1),_
					AD:Enhanced Parry (bare hands) #codes(upto 1, downto 1),_
					AD:Enhanced Parry (%Melee Weapon%) #codes(upto 1, downto 1),_
					AD:Enhanced Parry (all parries) #codes(upto 1, downto 1),_
					AD:Extra Attack #codes(upto 1, downto 1)_
					)_
				)

Hardy (After the End), displaycost(+50), cost(0), gives(),_
	page(ATE1:18),_
		sets(_
				ST:HT = ST:HT + 2,_
				ST:Basic Speed = ST:Basic Speed - 0.5_
			),_
	description(_
				You are very hard to put down. You shrug off the pain of _
				incoming attacks, you walk through disease-infested areas, you _
				laugh at venomous animals, and you don’t hesitate to brave _
				radioactive craters. Well, in truth, all of these things can still _
				kill you, but they have a much harder time doing so. _
				),_
	noresync(yes),_
		select1(_
				text(Please select 40 points from the following:),_
				pointswanted(40),_
				itemswanted(atleast 1),_
			list(_
					#BuildSelectList(Advantages where name is "Fit", template(#newitem(AD:_Increase Fit to Very Fit, cost(0), displaycost(+10), existing(AD:%ListItem%)) #codes(upto 2, downto 2))),_
					#list(GMAdvantages),_
					#newitem(AD:Immunity to Disease, 10, cat(Mundane, Physical, Mundane Physical), page(B81)),_
					#newitem(AD:Resistant to Disease, 3/5/10, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)),_
					#newitem(AD:Resistant to Poison (+3 to resist), 5, page(B81), cat(Mundane, Physical)),_
					AD:Extra Hit Points #codes(upto 3, downto 1),_
					AD:Extra Fatigue Points #codes(upto 3, downto 1),_
					AD:Extra RP #codes(upto 11, downto 1),_
					AD:Damage Resistance,_
					AD:Fit #codes(upto 1, downto 1),_
					AD:Very Fit,_
					AD:Hard to Kill,_
					AD:Hard to Subdue,_
					AD:High Pain Threshold,_
					AD:Rapid Healing,_
					AD:Very Rapid Healing,_
					AD:Recovery_
				)_
			)

Learned (After the End), displaycost(+50), cost(0), gives(),_
	page(ATE1:18),_
		sets(_
				ST:IQ = ST:IQ + 1,_
				ST:Will = ST:Will - 1,_
				ST:Perception = ST:Perception - 1_
			),_
			adds(_
					%LearnedIKnowItAlt1List%,_
					AD:Wild Talent with "Focused (Mental), -20%, group(Wild Talent), page(B100)"_
			),_
	description(_
				You have studied the ways of the old world. You know _
				about what culture and society were like before the end times, _
				which gives you insight into the kind of issues you might face _
				today. To reflect this broad training, once per session, you can _
				use any IQ-, Will-, or Per-based skill as if you knew it at attribute _
				level._
				),_
	noresync(yes),_
	x(_
		#choiceList(_
			name(LearnedIKnowIt),_
			title(Do you Know It?),_
			text(Does the character already know Anthropology?),_
			picksallowed(1),_
			method(bynumber),_
			list(_
					"I Know Anthropology",_
					"I Don't Know Anthropology"_
				),_
			aliaslist(_
						4,_
						2_
					),_
			alt1list(_
						"AD:Wasteland Wisdom = 4",_
						"AD:Wasteland Wisdom = 4, SK:Anthropology = 2pts"_
			)_
		)_
	),_
		select1(_
				text(Please select %LearnedIKnowItAliaslist% skills:),_
				pointswanted(%LearnedIKnowItAliaslist%),_
				itemswanted(%LearnedIKnowItAliaslist%),_
			list(_
					#BuildCharItemList(Skills where name is "Anthropology", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+1pts, downto %points+1pts) )),_
					#BuildCharItemList(Skills where name is "Area Knowledge", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+1pts, downto %points+1pts) )),_
					#BuildCharItemList(Skills where name is "Architecture", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+1pts, downto %points+1pts) )),_
					#BuildCharItemList(Skills where name is "Expert Skill", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+1pts, downto %points+1pts) )),_
					#BuildCharItemList(Skills where name is "Naturalist", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+1pts, downto %points+1pts) )),_
					#BuildCharItemList(Skills where nameext is "Radioactive Wasteland", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+1pts, downto %points+1pts) )),_
					SK:Area Knowledge ([Area]) #codes(upto 1pts),_
					SK:Architecture #codes(upto 1pts),_
					SK:Expert Skill (Mutants) #codes(upto 1pts),_
					SK:Expert Skill (Robotics) #codes(upto 1pts),_
					SK:Naturalist #codes(upto 1pts),_
					SK:Survival (Radioactive Wasteland) #codes(upto 1pts)_
				)_
			)

Learned 2 (After the End), displaycost(+50), cost(0), gives(),_
	page(ATE1:18),_
		needs(_
				TE:Learned (After The End),_
				AD:Wild Talent = 2_
			),_
		sets(_
				ST:IQ = ST:IQ + 1,_
				ST:Will = ST:Will + 1,_
				ST:Perception = ST:Perception + 1_
			),_
	description(_
					Take Learned 2 only after applying the Learned Lens._
				),_
	noresync(yes),_
		select1(_
				text(Please select 4 points in the following:),_
				pointswanted(4),_
				itemswanted(atleast 1),_
			list(_
					#BuildCharItemList(Skills where name is "Anthropology", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+1pts) )),_
					#BuildCharItemList(Skills where name is "Area Knowledge", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+1pts) )),_
					#BuildCharItemList(Skills where name is "Architecture", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+1pts) )),_
					#BuildCharItemList(Skills where name is "Expert Skill", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+1pts) )),_
					#BuildCharItemList(Skills where name is "Naturalist", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+1pts) )),_
					#BuildCharItemList(Skills where nameext is "Radioactive Wasteland", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+1pts) )),_
					SK:Area Knowledge ([Area]) #codes(upto 4pts),_
					SK:Architecture #codes(upto 4pts),_
					SK:Expert Skill (Mutants) #codes(upto 4pts),_
					SK:Expert Skill (Robotics) #codes(upto 4pts),_
					SK:Naturalist #codes(upto 4pts),_
					SK:Survival (Radioactive Wasteland) #codes(upto 4pts)_
				)_
			)

Mutated (After the End), displaycost(+50), cost(0), gives(),_
	page(ATE1:18),_
	x(#ChoiceList(_
			name(level),_
			title(Mutated: Select Level),_
			text(Choose how many levels of Mutated you'd like to take:),_
			picksallowed(1),_
			method(bynumber),_
			list(_
					" 1", " 2", " 3", " 4", " 5", " 6", " 7", " 8", " 9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"_
				),_
			aliaslist(_
						40, 90, 140, 190, 240, 290, 340, 390, 440, 490, 540, 590, 640, 690, 740, 790, 840, 890, 940, 990_
					),_
			alt1list(_
						50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000_
					)_
			)_
		),_
	description(_
					You are no longer a normal human being! Instead, you’ve _
					been mutated by radiation, strange viruses, or something else. _
					While this sets you apart from humanity, there’s no included _
					Social Stigma - instead, the Freakishness (pp. 25-26) that _
					accompanies all mutations serves that purpose. _
					\par Because the advantages added via this lens are mutations, _
					they are an exception to the rule that lens traits cannot exceed _
					normal maxima. See p. 25 for details. _
					\par This lens may be taken multiple times; there is no limit _
					other than campaign power level. _
				),_
	noresync(yes),_
		select1(_
				text(Please select %levelalt1list% points in Mutant Abilities. For every 6 levels of Freakishness you take you must also take one Freaky Oddity (listed below; see p. ATE1:25):),_
				pointswanted(atleast %levelaliaslist%, upto %levelalt1list%),_
				itemswanted(atleast 1),_
				multitype(yes),_
			list(_
					#BuildCharItemList(Skills where nameext is "Mutants", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)))),_
					#BuildCharItemList(Skills where name is "Innate Attack", template(#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%)))),_
					DI:Freaky Oddity,_
					SK:Expert Skill (Mutants),_
					SK:Innate Attack (Breath),_
					{AD:Acidic Blood},_
					{AD:Bellow Lungs},_
					{AD:Electrified Skin},_
					{AD:Bone Spur},_
					{AD:Mighty Roar},_
					{AD:Nuclear Core},_
					{AD:Razor Claws},_
					{AD:Super-Strength},_
					{AD:Toothsome},_
					{AD:Adaptable Skin 1},_
					{AD:Adaptable Skin 2},_
					{AD:Boosted Hemoglobin},_
					{AD:Flesh Pocket},_
					{AD:Natural Anti-Rad 1},_
					{AD:Natural Anti-Rad 2},_
					{AD:Natural Anti-Rad 3},_
					{AD:Prickly},_
					{AD:Redundant Organs},_
					{AD:Resilient Brain},_
					{AD:Self-Restoration 1},_
					{AD:Self-Restoration 2},_
					{AD:Slimy},_
					{AD:Starfish Genes},_
					{AD:Thick Hide 1},_
					{AD:Thick Hide 2},_
					{AD:Thick Hide 3},_
					{AD:Unnatural Hardiness},_
					{AD:Brainy},_
					{AD:Handy},_
					{AD:Mouthy},_
					{AD:Trampler},_
					{AD:Fast-Twitch Legs 1},_
					{AD:Fast-Twitch Legs 2},_
					{AD:Fins 1},_
					{AD:Fins 2},_
					{AD:Suction Pads},_
					{AD:Winged Flight 1},_
					{AD:Winged Flight 2},_
					{AD:Winged Flight 3},_
					{AD:Aural Filters},_
					{AD:Black Sight},_
					{AD:Eagle Eyes 1},_
					{AD:Eagle Eyes 2},_
					{AD:Hound Nose 1},_
					{AD:Hound Nose 2},_
					{AD:Outsize Eardrums},_
					{AD:Red Sight},_
					{AD:Rubber Neck},_
					{AD:Sound-Wave Recall},_
					{AD:Visual Filters},_
					{AD:Whiskers}_
				)_
			)

			
********************************************************************************************************\[STOP]
[TEMPLATES]
*******************************************************************************************************\[START]
#MergeTags in "TE:Blessed (After The End)" with {replacetags(in "TE:Blessed (After The End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Doc (After the End)" with {replacetags(in "TE:Doc (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Doc - Experienced (After The End)" with {replacetags(in "TE:Doc - Experienced (After The End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Fast (After the End)" with {replacetags(in "TE:Fast (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Hardy (After the End)" with {replacetags(in "TE:Hardy (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Hulk (After the End)" with {replacetags(in "TE:Hulk (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Hulk - Experienced (After the End)" with {replacetags(in "TE:Hulk - Experienced (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Hunter (After the End)" with {replacetags(in "TE:Hunter (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Hunter - Experienced (After the End)" with {replacetags(in "TE:Hunter - Experienced (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Learned (After the End)" with {replacetags(in "TE:Learned (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Learned 2 (After the End)" with {replacetags(in "TE:Learned 2 (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Mutated (After the End)" with {replacetags(in "TE:Mutated (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Nomad (After the End)" with {replacetags(in "TE:Nomad (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Nomad - Experienced (After the End)" with {replacetags(in "TE:Nomad - Experienced (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Scavenger (After the End)" with {replacetags(in "TE:Scavenger (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Scavenger - Experienced (After the End)" with {replacetags(in "TE:Scavenger - Experienced (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Tech (After the End)" with {replacetags(in "TE:Tech (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Tech - Experienced (After the End)" with {replacetags(in "TE:Tech - Experienced (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Trader (After the End)" with {replacetags(in "TE:Trader (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Trader - Experienced (After the End)" with {replacetags(in "TE:Trader - Experienced (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Trooper (After the End)" with {replacetags(in "TE:Trooper (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
#MergeTags in "TE:Trooper - Experienced (After the End)" with {replacetags(in "TE:Trooper - Experienced (After the End)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15(), select16(), select17(), select18(), select19(), select20()")}
